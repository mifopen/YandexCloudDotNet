// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/compute/v1/host_group.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Compute.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/compute/v1/host_group.proto</summary>
  internal static partial class HostGroupReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/compute/v1/host_group.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static HostGroupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cih5YW5kZXgvY2xvdWQvY29tcHV0ZS92MS9ob3N0X2dyb3VwLnByb3RvEhd5",
            "YW5kZXguY2xvdWQuY29tcHV0ZS52MRofZ29vZ2xlL3Byb3RvYnVmL3RpbWVz",
            "dGFtcC5wcm90byKkBAoJSG9zdEdyb3VwEgoKAmlkGAEgASgJEhEKCWZvbGRl",
            "cl9pZBgCIAEoCRIuCgpjcmVhdGVkX2F0GAMgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLlRpbWVzdGFtcBIMCgRuYW1lGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUg",
            "ASgJEj4KBmxhYmVscxgGIAMoCzIuLnlhbmRleC5jbG91ZC5jb21wdXRlLnYx",
            "Lkhvc3RHcm91cC5MYWJlbHNFbnRyeRIPCgd6b25lX2lkGAcgASgJEjkKBnN0",
            "YXR1cxgIIAEoDjIpLnlhbmRleC5jbG91ZC5jb21wdXRlLnYxLkhvc3RHcm91",
            "cC5TdGF0dXMSDwoHdHlwZV9pZBgJIAEoCRJGChJtYWludGVuYW5jZV9wb2xp",
            "Y3kYCiABKA4yKi55YW5kZXguY2xvdWQuY29tcHV0ZS52MS5NYWludGVuYW5j",
            "ZVBvbGljeRI6CgxzY2FsZV9wb2xpY3kYCyABKAsyJC55YW5kZXguY2xvdWQu",
            "Y29tcHV0ZS52MS5TY2FsZVBvbGljeRotCgtMYWJlbHNFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIlUKBlN0YXR1cxIWChJTVEFUVVNf",
            "VU5TUEVDSUZJRUQQABIMCghDUkVBVElORxABEgkKBVJFQURZEAISDAoIVVBE",
            "QVRJTkcQAxIMCghERUxFVElORxAEIo8BCgRIb3N0EgoKAmlkGAEgASgJEjQK",
            "BnN0YXR1cxgCIAEoDjIkLnlhbmRleC5jbG91ZC5jb21wdXRlLnYxLkhvc3Qu",
            "U3RhdHVzEhEKCXNlcnZlcl9pZBgDIAEoCSIyCgZTdGF0dXMSFgoSU1RBVFVT",
            "X1VOU1BFQ0lGSUVEEAASBgoCVVAQARIICgRET1dOEAIifwoLU2NhbGVQb2xp",
            "Y3kSRgoLZml4ZWRfc2NhbGUYASABKAsyLy55YW5kZXguY2xvdWQuY29tcHV0",
            "ZS52MS5TY2FsZVBvbGljeS5GaXhlZFNjYWxlSAAaGgoKRml4ZWRTY2FsZRIM",
            "CgRzaXplGAEgASgDQgwKCnNjYWxlX3R5cGUqUQoRTWFpbnRlbmFuY2VQb2xp",
            "Y3kSIgoeTUFJTlRFTkFOQ0VfUE9MSUNZX1VOU1BFQ0lGSUVEEAASCwoHUkVT",
            "VEFSVBABEgsKB01JR1JBVEUQAkJiCht5YW5kZXguY2xvdWQuYXBpLmNvbXB1",
            "dGUudjFaQ2dpdGh1Yi5jb20veWFuZGV4LWNsb3VkL2dvLWdlbnByb3RvL3lh",
            "bmRleC9jbG91ZC9jb21wdXRlL3YxO2NvbXB1dGViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Yandex.Cloud.Compute.V1.MaintenancePolicy), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.HostGroup), global::Yandex.Cloud.Compute.V1.HostGroup.Parser, new[]{ "Id", "FolderId", "CreatedAt", "Name", "Description", "Labels", "ZoneId", "Status", "TypeId", "MaintenancePolicy", "ScalePolicy" }, null, new[]{ typeof(global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status) }, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.Host), global::Yandex.Cloud.Compute.V1.Host.Parser, new[]{ "Id", "Status", "ServerId" }, null, new[]{ typeof(global::Yandex.Cloud.Compute.V1.Host.Types.Status) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.ScalePolicy), global::Yandex.Cloud.Compute.V1.ScalePolicy.Parser, new[]{ "FixedScale" }, new[]{ "ScaleType" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.ScalePolicy.Types.FixedScale), global::Yandex.Cloud.Compute.V1.ScalePolicy.Types.FixedScale.Parser, new[]{ "Size" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Enums
  internal enum MaintenancePolicy {
    [pbr::OriginalName("MAINTENANCE_POLICY_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Restart instances on the same host after maintenance event.
    /// </summary>
    [pbr::OriginalName("RESTART")] Restart = 1,
    /// <summary>
    /// Migrate instances to another host before maintenance event.
    /// </summary>
    [pbr::OriginalName("MIGRATE")] Migrate = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// Represents group of dedicated hosts
  /// </summary>
  internal sealed partial class HostGroup : pb::IMessage<HostGroup> {
    private static readonly pb::MessageParser<HostGroup> _parser = new pb::MessageParser<HostGroup>(() => new HostGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HostGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.HostGroupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGroup(HostGroup other) : this() {
      id_ = other.id_;
      folderId_ = other.folderId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      zoneId_ = other.zoneId_;
      status_ = other.status_;
      typeId_ = other.typeId_;
      maintenancePolicy_ = other.maintenancePolicy_;
      scalePolicy_ = other.scalePolicy_ != null ? other.scalePolicy_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostGroup Clone() {
      return new HostGroup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder that the group belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Name of the group. The name is unique within the folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels as `key:value` pairs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 7;
    private string zoneId_ = "";
    /// <summary>
    /// Availability zone where all dedicated hosts are allocated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 8;
    private global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status status_ = global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status.Unspecified;
    /// <summary>
    /// Status of the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "type_id" field.</summary>
    public const int TypeIdFieldNumber = 9;
    private string typeId_ = "";
    /// <summary>
    /// ID of host type. Resources provided by each host of the group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TypeId {
      get { return typeId_; }
      set {
        typeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "maintenance_policy" field.</summary>
    public const int MaintenancePolicyFieldNumber = 10;
    private global::Yandex.Cloud.Compute.V1.MaintenancePolicy maintenancePolicy_ = global::Yandex.Cloud.Compute.V1.MaintenancePolicy.Unspecified;
    /// <summary>
    /// Behaviour on maintenance events.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.MaintenancePolicy MaintenancePolicy {
      get { return maintenancePolicy_; }
      set {
        maintenancePolicy_ = value;
      }
    }

    /// <summary>Field number for the "scale_policy" field.</summary>
    public const int ScalePolicyFieldNumber = 11;
    private global::Yandex.Cloud.Compute.V1.ScalePolicy scalePolicy_;
    /// <summary>
    /// Scale policy. Only fixed number of hosts are supported at this moment.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.ScalePolicy ScalePolicy {
      get { return scalePolicy_; }
      set {
        scalePolicy_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HostGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HostGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FolderId != other.FolderId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (ZoneId != other.ZoneId) return false;
      if (Status != other.Status) return false;
      if (TypeId != other.TypeId) return false;
      if (MaintenancePolicy != other.MaintenancePolicy) return false;
      if (!object.Equals(ScalePolicy, other.ScalePolicy)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (ZoneId.Length != 0) hash ^= ZoneId.GetHashCode();
      if (Status != global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status.Unspecified) hash ^= Status.GetHashCode();
      if (TypeId.Length != 0) hash ^= TypeId.GetHashCode();
      if (MaintenancePolicy != global::Yandex.Cloud.Compute.V1.MaintenancePolicy.Unspecified) hash ^= MaintenancePolicy.GetHashCode();
      if (scalePolicy_ != null) hash ^= ScalePolicy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FolderId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (ZoneId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ZoneId);
      }
      if (Status != global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status.Unspecified) {
        output.WriteRawTag(64);
        output.WriteEnum((int) Status);
      }
      if (TypeId.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(TypeId);
      }
      if (MaintenancePolicy != global::Yandex.Cloud.Compute.V1.MaintenancePolicy.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) MaintenancePolicy);
      }
      if (scalePolicy_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(ScalePolicy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (ZoneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneId);
      }
      if (Status != global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (TypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TypeId);
      }
      if (MaintenancePolicy != global::Yandex.Cloud.Compute.V1.MaintenancePolicy.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) MaintenancePolicy);
      }
      if (scalePolicy_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ScalePolicy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HostGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      if (other.ZoneId.Length != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.Status != global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status.Unspecified) {
        Status = other.Status;
      }
      if (other.TypeId.Length != 0) {
        TypeId = other.TypeId;
      }
      if (other.MaintenancePolicy != global::Yandex.Cloud.Compute.V1.MaintenancePolicy.Unspecified) {
        MaintenancePolicy = other.MaintenancePolicy;
      }
      if (other.scalePolicy_ != null) {
        if (scalePolicy_ == null) {
          ScalePolicy = new global::Yandex.Cloud.Compute.V1.ScalePolicy();
        }
        ScalePolicy.MergeFrom(other.ScalePolicy);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FolderId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 58: {
            ZoneId = input.ReadString();
            break;
          }
          case 64: {
            Status = (global::Yandex.Cloud.Compute.V1.HostGroup.Types.Status) input.ReadEnum();
            break;
          }
          case 74: {
            TypeId = input.ReadString();
            break;
          }
          case 80: {
            MaintenancePolicy = (global::Yandex.Cloud.Compute.V1.MaintenancePolicy) input.ReadEnum();
            break;
          }
          case 90: {
            if (scalePolicy_ == null) {
              ScalePolicy = new global::Yandex.Cloud.Compute.V1.ScalePolicy();
            }
            input.ReadMessage(ScalePolicy);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the HostGroup message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Status {
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("CREATING")] Creating = 1,
        [pbr::OriginalName("READY")] Ready = 2,
        [pbr::OriginalName("UPDATING")] Updating = 3,
        [pbr::OriginalName("DELETING")] Deleting = 4,
      }

    }
    #endregion

  }

  /// <summary>
  /// Represents a dedicated host
  /// </summary>
  internal sealed partial class Host : pb::IMessage<Host> {
    private static readonly pb::MessageParser<Host> _parser = new pb::MessageParser<Host>(() => new Host());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Host> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.HostGroupReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host(Host other) : this() {
      id_ = other.id_;
      status_ = other.status_;
      serverId_ = other.serverId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host Clone() {
      return new Host(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 2;
    private global::Yandex.Cloud.Compute.V1.Host.Types.Status status_ = global::Yandex.Cloud.Compute.V1.Host.Types.Status.Unspecified;
    /// <summary>
    /// Current status of the host. New instances are unable to start on host in DOWN status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.Host.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "server_id" field.</summary>
    public const int ServerIdFieldNumber = 3;
    private string serverId_ = "";
    /// <summary>
    /// ID of the physical server that the host belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServerId {
      get { return serverId_; }
      set {
        serverId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Host);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Host other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Status != other.Status) return false;
      if (ServerId != other.ServerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Status != global::Yandex.Cloud.Compute.V1.Host.Types.Status.Unspecified) hash ^= Status.GetHashCode();
      if (ServerId.Length != 0) hash ^= ServerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Status != global::Yandex.Cloud.Compute.V1.Host.Types.Status.Unspecified) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Status);
      }
      if (ServerId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ServerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Status != global::Yandex.Cloud.Compute.V1.Host.Types.Status.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ServerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Host other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Status != global::Yandex.Cloud.Compute.V1.Host.Types.Status.Unspecified) {
        Status = other.Status;
      }
      if (other.ServerId.Length != 0) {
        ServerId = other.ServerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 16: {
            Status = (global::Yandex.Cloud.Compute.V1.Host.Types.Status) input.ReadEnum();
            break;
          }
          case 26: {
            ServerId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Host message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Status {
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("UP")] Up = 1,
        [pbr::OriginalName("DOWN")] Down = 2,
      }

    }
    #endregion

  }

  internal sealed partial class ScalePolicy : pb::IMessage<ScalePolicy> {
    private static readonly pb::MessageParser<ScalePolicy> _parser = new pb::MessageParser<ScalePolicy>(() => new ScalePolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ScalePolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.HostGroupReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalePolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalePolicy(ScalePolicy other) : this() {
      switch (other.ScaleTypeCase) {
        case ScaleTypeOneofCase.FixedScale:
          FixedScale = other.FixedScale.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScalePolicy Clone() {
      return new ScalePolicy(this);
    }

    /// <summary>Field number for the "fixed_scale" field.</summary>
    public const int FixedScaleFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.ScalePolicy.Types.FixedScale FixedScale {
      get { return scaleTypeCase_ == ScaleTypeOneofCase.FixedScale ? (global::Yandex.Cloud.Compute.V1.ScalePolicy.Types.FixedScale) scaleType_ : null; }
      set {
        scaleType_ = value;
        scaleTypeCase_ = value == null ? ScaleTypeOneofCase.None : ScaleTypeOneofCase.FixedScale;
      }
    }

    private object scaleType_;
    /// <summary>Enum of possible cases for the "scale_type" oneof.</summary>
    public enum ScaleTypeOneofCase {
      None = 0,
      FixedScale = 1,
    }
    private ScaleTypeOneofCase scaleTypeCase_ = ScaleTypeOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ScaleTypeOneofCase ScaleTypeCase {
      get { return scaleTypeCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearScaleType() {
      scaleTypeCase_ = ScaleTypeOneofCase.None;
      scaleType_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ScalePolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ScalePolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(FixedScale, other.FixedScale)) return false;
      if (ScaleTypeCase != other.ScaleTypeCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) hash ^= FixedScale.GetHashCode();
      hash ^= (int) scaleTypeCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) {
        output.WriteRawTag(10);
        output.WriteMessage(FixedScale);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FixedScale);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ScalePolicy other) {
      if (other == null) {
        return;
      }
      switch (other.ScaleTypeCase) {
        case ScaleTypeOneofCase.FixedScale:
          if (FixedScale == null) {
            FixedScale = new global::Yandex.Cloud.Compute.V1.ScalePolicy.Types.FixedScale();
          }
          FixedScale.MergeFrom(other.FixedScale);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Yandex.Cloud.Compute.V1.ScalePolicy.Types.FixedScale subBuilder = new global::Yandex.Cloud.Compute.V1.ScalePolicy.Types.FixedScale();
            if (scaleTypeCase_ == ScaleTypeOneofCase.FixedScale) {
              subBuilder.MergeFrom(FixedScale);
            }
            input.ReadMessage(subBuilder);
            FixedScale = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ScalePolicy message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal sealed partial class FixedScale : pb::IMessage<FixedScale> {
        private static readonly pb::MessageParser<FixedScale> _parser = new pb::MessageParser<FixedScale>(() => new FixedScale());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FixedScale> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Yandex.Cloud.Compute.V1.ScalePolicy.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedScale() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedScale(FixedScale other) : this() {
          size_ = other.size_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FixedScale Clone() {
          return new FixedScale(this);
        }

        /// <summary>Field number for the "size" field.</summary>
        public const int SizeFieldNumber = 1;
        private long size_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Size {
          get { return size_; }
          set {
            size_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FixedScale);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FixedScale other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Size != other.Size) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Size != 0L) hash ^= Size.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Size != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Size);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Size != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Size);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FixedScale other) {
          if (other == null) {
            return;
          }
          if (other.Size != 0L) {
            Size = other.Size;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Size = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
