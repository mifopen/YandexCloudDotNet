// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/compute/v1/host_type_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Yandex.Cloud.Compute.V1 {
  /// <summary>
  /// Set of methods to view possible host configurations.
  /// </summary>
  internal static partial class HostTypeService
  {
    static readonly string __ServiceName = "yandex.cloud.compute.v1.HostTypeService";

    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.GetHostTypeRequest> __Marshaller_yandex_cloud_compute_v1_GetHostTypeRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.GetHostTypeRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.HostType> __Marshaller_yandex_cloud_compute_v1_HostType = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.HostType.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.ListHostTypesRequest> __Marshaller_yandex_cloud_compute_v1_ListHostTypesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.ListHostTypesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.ListHostTypesResponse> __Marshaller_yandex_cloud_compute_v1_ListHostTypesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.ListHostTypesResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.GetHostTypeRequest, global::Yandex.Cloud.Compute.V1.HostType> __Method_Get = new grpc::Method<global::Yandex.Cloud.Compute.V1.GetHostTypeRequest, global::Yandex.Cloud.Compute.V1.HostType>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_yandex_cloud_compute_v1_GetHostTypeRequest,
        __Marshaller_yandex_cloud_compute_v1_HostType);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.ListHostTypesRequest, global::Yandex.Cloud.Compute.V1.ListHostTypesResponse> __Method_List = new grpc::Method<global::Yandex.Cloud.Compute.V1.ListHostTypesRequest, global::Yandex.Cloud.Compute.V1.ListHostTypesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_yandex_cloud_compute_v1_ListHostTypesRequest,
        __Marshaller_yandex_cloud_compute_v1_ListHostTypesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Yandex.Cloud.Compute.V1.HostTypeServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for HostTypeService</summary>
    public partial class HostTypeServiceClient : grpc::ClientBase<HostTypeServiceClient>
    {
      /// <summary>Creates a new client for HostTypeService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public HostTypeServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for HostTypeService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public HostTypeServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected HostTypeServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected HostTypeServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns information about specified host type.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.HostType Get(global::Yandex.Cloud.Compute.V1.GetHostTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about specified host type.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.HostType Get(global::Yandex.Cloud.Compute.V1.GetHostTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Returns information about specified host type.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.HostType> GetAsync(global::Yandex.Cloud.Compute.V1.GetHostTypeRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns information about specified host type.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.HostType> GetAsync(global::Yandex.Cloud.Compute.V1.GetHostTypeRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// List avaliable host types.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.ListHostTypesResponse List(global::Yandex.Cloud.Compute.V1.ListHostTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List avaliable host types.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.ListHostTypesResponse List(global::Yandex.Cloud.Compute.V1.ListHostTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// List avaliable host types.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.ListHostTypesResponse> ListAsync(global::Yandex.Cloud.Compute.V1.ListHostTypesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// List avaliable host types.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.ListHostTypesResponse> ListAsync(global::Yandex.Cloud.Compute.V1.ListHostTypesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override HostTypeServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new HostTypeServiceClient(configuration);
      }
    }

  }
}
#endregion
