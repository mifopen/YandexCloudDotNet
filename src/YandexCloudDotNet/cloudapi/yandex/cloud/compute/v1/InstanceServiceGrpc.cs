// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/compute/v1/instance_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Yandex.Cloud.Compute.V1 {
  /// <summary>
  /// A set of methods for managing Instance resources.
  /// </summary>
  internal static partial class InstanceService
  {
    static readonly string __ServiceName = "yandex.cloud.compute.v1.InstanceService";

    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.GetInstanceRequest> __Marshaller_yandex_cloud_compute_v1_GetInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.GetInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.Instance> __Marshaller_yandex_cloud_compute_v1_Instance = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.Instance.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.ListInstancesRequest> __Marshaller_yandex_cloud_compute_v1_ListInstancesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.ListInstancesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.ListInstancesResponse> __Marshaller_yandex_cloud_compute_v1_ListInstancesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.ListInstancesResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.CreateInstanceRequest> __Marshaller_yandex_cloud_compute_v1_CreateInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.CreateInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Operation.Operation> __Marshaller_yandex_cloud_operation_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Operation.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.UpdateInstanceRequest> __Marshaller_yandex_cloud_compute_v1_UpdateInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.UpdateInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.DeleteInstanceRequest> __Marshaller_yandex_cloud_compute_v1_DeleteInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.DeleteInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.UpdateInstanceMetadataRequest> __Marshaller_yandex_cloud_compute_v1_UpdateInstanceMetadataRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.UpdateInstanceMetadataRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputRequest> __Marshaller_yandex_cloud_compute_v1_GetInstanceSerialPortOutputRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputResponse> __Marshaller_yandex_cloud_compute_v1_GetInstanceSerialPortOutputResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.StopInstanceRequest> __Marshaller_yandex_cloud_compute_v1_StopInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.StopInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.StartInstanceRequest> __Marshaller_yandex_cloud_compute_v1_StartInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.StartInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.RestartInstanceRequest> __Marshaller_yandex_cloud_compute_v1_RestartInstanceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.RestartInstanceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.AttachInstanceDiskRequest> __Marshaller_yandex_cloud_compute_v1_AttachInstanceDiskRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.AttachInstanceDiskRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.DetachInstanceDiskRequest> __Marshaller_yandex_cloud_compute_v1_DetachInstanceDiskRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.DetachInstanceDiskRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.AddInstanceOneToOneNatRequest> __Marshaller_yandex_cloud_compute_v1_AddInstanceOneToOneNatRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.AddInstanceOneToOneNatRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.RemoveInstanceOneToOneNatRequest> __Marshaller_yandex_cloud_compute_v1_RemoveInstanceOneToOneNatRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.RemoveInstanceOneToOneNatRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.UpdateInstanceNetworkInterfaceRequest> __Marshaller_yandex_cloud_compute_v1_UpdateInstanceNetworkInterfaceRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.UpdateInstanceNetworkInterfaceRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.ListInstanceOperationsRequest> __Marshaller_yandex_cloud_compute_v1_ListInstanceOperationsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.ListInstanceOperationsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Compute.V1.ListInstanceOperationsResponse> __Marshaller_yandex_cloud_compute_v1_ListInstanceOperationsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Compute.V1.ListInstanceOperationsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.GetInstanceRequest, global::Yandex.Cloud.Compute.V1.Instance> __Method_Get = new grpc::Method<global::Yandex.Cloud.Compute.V1.GetInstanceRequest, global::Yandex.Cloud.Compute.V1.Instance>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_yandex_cloud_compute_v1_GetInstanceRequest,
        __Marshaller_yandex_cloud_compute_v1_Instance);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.ListInstancesRequest, global::Yandex.Cloud.Compute.V1.ListInstancesResponse> __Method_List = new grpc::Method<global::Yandex.Cloud.Compute.V1.ListInstancesRequest, global::Yandex.Cloud.Compute.V1.ListInstancesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_yandex_cloud_compute_v1_ListInstancesRequest,
        __Marshaller_yandex_cloud_compute_v1_ListInstancesResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.CreateInstanceRequest, global::Yandex.Cloud.Operation.Operation> __Method_Create = new grpc::Method<global::Yandex.Cloud.Compute.V1.CreateInstanceRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_yandex_cloud_compute_v1_CreateInstanceRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.UpdateInstanceRequest, global::Yandex.Cloud.Operation.Operation> __Method_Update = new grpc::Method<global::Yandex.Cloud.Compute.V1.UpdateInstanceRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_yandex_cloud_compute_v1_UpdateInstanceRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.DeleteInstanceRequest, global::Yandex.Cloud.Operation.Operation> __Method_Delete = new grpc::Method<global::Yandex.Cloud.Compute.V1.DeleteInstanceRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_yandex_cloud_compute_v1_DeleteInstanceRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.UpdateInstanceMetadataRequest, global::Yandex.Cloud.Operation.Operation> __Method_UpdateMetadata = new grpc::Method<global::Yandex.Cloud.Compute.V1.UpdateInstanceMetadataRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateMetadata",
        __Marshaller_yandex_cloud_compute_v1_UpdateInstanceMetadataRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputRequest, global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputResponse> __Method_GetSerialPortOutput = new grpc::Method<global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputRequest, global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetSerialPortOutput",
        __Marshaller_yandex_cloud_compute_v1_GetInstanceSerialPortOutputRequest,
        __Marshaller_yandex_cloud_compute_v1_GetInstanceSerialPortOutputResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.StopInstanceRequest, global::Yandex.Cloud.Operation.Operation> __Method_Stop = new grpc::Method<global::Yandex.Cloud.Compute.V1.StopInstanceRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Stop",
        __Marshaller_yandex_cloud_compute_v1_StopInstanceRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.StartInstanceRequest, global::Yandex.Cloud.Operation.Operation> __Method_Start = new grpc::Method<global::Yandex.Cloud.Compute.V1.StartInstanceRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Start",
        __Marshaller_yandex_cloud_compute_v1_StartInstanceRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.RestartInstanceRequest, global::Yandex.Cloud.Operation.Operation> __Method_Restart = new grpc::Method<global::Yandex.Cloud.Compute.V1.RestartInstanceRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Restart",
        __Marshaller_yandex_cloud_compute_v1_RestartInstanceRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.AttachInstanceDiskRequest, global::Yandex.Cloud.Operation.Operation> __Method_AttachDisk = new grpc::Method<global::Yandex.Cloud.Compute.V1.AttachInstanceDiskRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AttachDisk",
        __Marshaller_yandex_cloud_compute_v1_AttachInstanceDiskRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.DetachInstanceDiskRequest, global::Yandex.Cloud.Operation.Operation> __Method_DetachDisk = new grpc::Method<global::Yandex.Cloud.Compute.V1.DetachInstanceDiskRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DetachDisk",
        __Marshaller_yandex_cloud_compute_v1_DetachInstanceDiskRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.AddInstanceOneToOneNatRequest, global::Yandex.Cloud.Operation.Operation> __Method_AddOneToOneNat = new grpc::Method<global::Yandex.Cloud.Compute.V1.AddInstanceOneToOneNatRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddOneToOneNat",
        __Marshaller_yandex_cloud_compute_v1_AddInstanceOneToOneNatRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.RemoveInstanceOneToOneNatRequest, global::Yandex.Cloud.Operation.Operation> __Method_RemoveOneToOneNat = new grpc::Method<global::Yandex.Cloud.Compute.V1.RemoveInstanceOneToOneNatRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RemoveOneToOneNat",
        __Marshaller_yandex_cloud_compute_v1_RemoveInstanceOneToOneNatRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.UpdateInstanceNetworkInterfaceRequest, global::Yandex.Cloud.Operation.Operation> __Method_UpdateNetworkInterface = new grpc::Method<global::Yandex.Cloud.Compute.V1.UpdateInstanceNetworkInterfaceRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "UpdateNetworkInterface",
        __Marshaller_yandex_cloud_compute_v1_UpdateInstanceNetworkInterfaceRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Compute.V1.ListInstanceOperationsRequest, global::Yandex.Cloud.Compute.V1.ListInstanceOperationsResponse> __Method_ListOperations = new grpc::Method<global::Yandex.Cloud.Compute.V1.ListInstanceOperationsRequest, global::Yandex.Cloud.Compute.V1.ListInstanceOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOperations",
        __Marshaller_yandex_cloud_compute_v1_ListInstanceOperationsRequest,
        __Marshaller_yandex_cloud_compute_v1_ListInstanceOperationsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Yandex.Cloud.Compute.V1.InstanceServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for InstanceService</summary>
    public partial class InstanceServiceClient : grpc::ClientBase<InstanceServiceClient>
    {
      /// <summary>Creates a new client for InstanceService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public InstanceServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for InstanceService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public InstanceServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected InstanceServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected InstanceServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the specified Instance resource.
      ///
      /// To get the list of available Instance resources, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.Instance Get(global::Yandex.Cloud.Compute.V1.GetInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified Instance resource.
      ///
      /// To get the list of available Instance resources, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.Instance Get(global::Yandex.Cloud.Compute.V1.GetInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Returns the specified Instance resource.
      ///
      /// To get the list of available Instance resources, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.Instance> GetAsync(global::Yandex.Cloud.Compute.V1.GetInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified Instance resource.
      ///
      /// To get the list of available Instance resources, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.Instance> GetAsync(global::Yandex.Cloud.Compute.V1.GetInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of Instance resources in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.ListInstancesResponse List(global::Yandex.Cloud.Compute.V1.ListInstancesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of Instance resources in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.ListInstancesResponse List(global::Yandex.Cloud.Compute.V1.ListInstancesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of Instance resources in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.ListInstancesResponse> ListAsync(global::Yandex.Cloud.Compute.V1.ListInstancesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of Instance resources in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.ListInstancesResponse> ListAsync(global::Yandex.Cloud.Compute.V1.ListInstancesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// Creates an instance in the specified folder.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Create(global::Yandex.Cloud.Compute.V1.CreateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instance in the specified folder.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Create(global::Yandex.Cloud.Compute.V1.CreateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      /// <summary>
      /// Creates an instance in the specified folder.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> CreateAsync(global::Yandex.Cloud.Compute.V1.CreateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates an instance in the specified folder.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> CreateAsync(global::Yandex.Cloud.Compute.V1.CreateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      /// <summary>
      /// Updates the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Update(global::Yandex.Cloud.Compute.V1.UpdateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Update(global::Yandex.Cloud.Compute.V1.UpdateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      /// <summary>
      /// Updates the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateAsync(global::Yandex.Cloud.Compute.V1.UpdateInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateAsync(global::Yandex.Cloud.Compute.V1.UpdateInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      /// <summary>
      /// Deletes the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Delete(global::Yandex.Cloud.Compute.V1.DeleteInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Delete(global::Yandex.Cloud.Compute.V1.DeleteInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      /// Deletes the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DeleteAsync(global::Yandex.Cloud.Compute.V1.DeleteInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DeleteAsync(global::Yandex.Cloud.Compute.V1.DeleteInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      /// Updates the metadata of the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation UpdateMetadata(global::Yandex.Cloud.Compute.V1.UpdateInstanceMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMetadata(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the metadata of the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation UpdateMetadata(global::Yandex.Cloud.Compute.V1.UpdateInstanceMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateMetadata, null, options, request);
      }
      /// <summary>
      /// Updates the metadata of the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateMetadataAsync(global::Yandex.Cloud.Compute.V1.UpdateInstanceMetadataRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateMetadataAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the metadata of the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateMetadataAsync(global::Yandex.Cloud.Compute.V1.UpdateInstanceMetadataRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateMetadata, null, options, request);
      }
      /// <summary>
      /// Returns the serial port output of the specified Instance resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputResponse GetSerialPortOutput(global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSerialPortOutput(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the serial port output of the specified Instance resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputResponse GetSerialPortOutput(global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetSerialPortOutput, null, options, request);
      }
      /// <summary>
      /// Returns the serial port output of the specified Instance resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputResponse> GetSerialPortOutputAsync(global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetSerialPortOutputAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the serial port output of the specified Instance resource.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputResponse> GetSerialPortOutputAsync(global::Yandex.Cloud.Compute.V1.GetInstanceSerialPortOutputRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetSerialPortOutput, null, options, request);
      }
      /// <summary>
      /// Stops the running instance.
      ///
      /// You can start the instance later using the [InstanceService.Start] method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Stop(global::Yandex.Cloud.Compute.V1.StopInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Stop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops the running instance.
      ///
      /// You can start the instance later using the [InstanceService.Start] method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Stop(global::Yandex.Cloud.Compute.V1.StopInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>
      /// Stops the running instance.
      ///
      /// You can start the instance later using the [InstanceService.Start] method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> StopAsync(global::Yandex.Cloud.Compute.V1.StopInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops the running instance.
      ///
      /// You can start the instance later using the [InstanceService.Start] method.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> StopAsync(global::Yandex.Cloud.Compute.V1.StopInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>
      /// Starts the stopped instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Start(global::Yandex.Cloud.Compute.V1.StartInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Start(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts the stopped instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Start(global::Yandex.Cloud.Compute.V1.StartInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Start, null, options, request);
      }
      /// <summary>
      /// Starts the stopped instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> StartAsync(global::Yandex.Cloud.Compute.V1.StartInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts the stopped instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> StartAsync(global::Yandex.Cloud.Compute.V1.StartInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Start, null, options, request);
      }
      /// <summary>
      /// Restarts the running instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Restart(global::Yandex.Cloud.Compute.V1.RestartInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Restart(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Restarts the running instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Restart(global::Yandex.Cloud.Compute.V1.RestartInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Restart, null, options, request);
      }
      /// <summary>
      /// Restarts the running instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> RestartAsync(global::Yandex.Cloud.Compute.V1.RestartInstanceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Restarts the running instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> RestartAsync(global::Yandex.Cloud.Compute.V1.RestartInstanceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Restart, null, options, request);
      }
      /// <summary>
      /// Attaches the disk to the instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation AttachDisk(global::Yandex.Cloud.Compute.V1.AttachInstanceDiskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttachDisk(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Attaches the disk to the instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation AttachDisk(global::Yandex.Cloud.Compute.V1.AttachInstanceDiskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AttachDisk, null, options, request);
      }
      /// <summary>
      /// Attaches the disk to the instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> AttachDiskAsync(global::Yandex.Cloud.Compute.V1.AttachInstanceDiskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AttachDiskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Attaches the disk to the instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> AttachDiskAsync(global::Yandex.Cloud.Compute.V1.AttachInstanceDiskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AttachDisk, null, options, request);
      }
      /// <summary>
      /// Detaches the disk from the instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation DetachDisk(global::Yandex.Cloud.Compute.V1.DetachInstanceDiskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DetachDisk(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Detaches the disk from the instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation DetachDisk(global::Yandex.Cloud.Compute.V1.DetachInstanceDiskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DetachDisk, null, options, request);
      }
      /// <summary>
      /// Detaches the disk from the instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DetachDiskAsync(global::Yandex.Cloud.Compute.V1.DetachInstanceDiskRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DetachDiskAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Detaches the disk from the instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DetachDiskAsync(global::Yandex.Cloud.Compute.V1.DetachInstanceDiskRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DetachDisk, null, options, request);
      }
      public virtual global::Yandex.Cloud.Operation.Operation AddOneToOneNat(global::Yandex.Cloud.Compute.V1.AddInstanceOneToOneNatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOneToOneNat(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Yandex.Cloud.Operation.Operation AddOneToOneNat(global::Yandex.Cloud.Compute.V1.AddInstanceOneToOneNatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddOneToOneNat, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> AddOneToOneNatAsync(global::Yandex.Cloud.Compute.V1.AddInstanceOneToOneNatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddOneToOneNatAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> AddOneToOneNatAsync(global::Yandex.Cloud.Compute.V1.AddInstanceOneToOneNatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddOneToOneNat, null, options, request);
      }
      public virtual global::Yandex.Cloud.Operation.Operation RemoveOneToOneNat(global::Yandex.Cloud.Compute.V1.RemoveInstanceOneToOneNatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOneToOneNat(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Yandex.Cloud.Operation.Operation RemoveOneToOneNat(global::Yandex.Cloud.Compute.V1.RemoveInstanceOneToOneNatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_RemoveOneToOneNat, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> RemoveOneToOneNatAsync(global::Yandex.Cloud.Compute.V1.RemoveInstanceOneToOneNatRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RemoveOneToOneNatAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> RemoveOneToOneNatAsync(global::Yandex.Cloud.Compute.V1.RemoveInstanceOneToOneNatRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_RemoveOneToOneNat, null, options, request);
      }
      public virtual global::Yandex.Cloud.Operation.Operation UpdateNetworkInterface(global::Yandex.Cloud.Compute.V1.UpdateInstanceNetworkInterfaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNetworkInterface(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual global::Yandex.Cloud.Operation.Operation UpdateNetworkInterface(global::Yandex.Cloud.Compute.V1.UpdateInstanceNetworkInterfaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_UpdateNetworkInterface, null, options, request);
      }
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateNetworkInterfaceAsync(global::Yandex.Cloud.Compute.V1.UpdateInstanceNetworkInterfaceRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateNetworkInterfaceAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateNetworkInterfaceAsync(global::Yandex.Cloud.Compute.V1.UpdateInstanceNetworkInterfaceRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_UpdateNetworkInterface, null, options, request);
      }
      /// <summary>
      /// Lists operations for the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.ListInstanceOperationsResponse ListOperations(global::Yandex.Cloud.Compute.V1.ListInstanceOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists operations for the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Compute.V1.ListInstanceOperationsResponse ListOperations(global::Yandex.Cloud.Compute.V1.ListInstanceOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOperations, null, options, request);
      }
      /// <summary>
      /// Lists operations for the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.ListInstanceOperationsResponse> ListOperationsAsync(global::Yandex.Cloud.Compute.V1.ListInstanceOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists operations for the specified instance.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Compute.V1.ListInstanceOperationsResponse> ListOperationsAsync(global::Yandex.Cloud.Compute.V1.ListInstanceOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOperations, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override InstanceServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new InstanceServiceClient(configuration);
      }
    }

  }
}
#endregion
