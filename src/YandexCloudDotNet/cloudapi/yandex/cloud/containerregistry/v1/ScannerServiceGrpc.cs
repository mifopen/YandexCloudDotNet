// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/containerregistry/v1/scanner_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Yandex.Cloud.Containerregistry.V1 {
  /// <summary>
  /// A set of methods for scanning Docker images.
  /// </summary>
  internal static partial class ScannerService
  {
    static readonly string __ServiceName = "yandex.cloud.containerregistry.v1.ScannerService";

    static readonly grpc::Marshaller<global::Yandex.Cloud.Containerregistry.V1.ScanRequest> __Marshaller_yandex_cloud_containerregistry_v1_ScanRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Containerregistry.V1.ScanRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Operation.Operation> __Marshaller_yandex_cloud_operation_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Operation.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Containerregistry.V1.GetScanResultRequest> __Marshaller_yandex_cloud_containerregistry_v1_GetScanResultRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Containerregistry.V1.GetScanResultRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Containerregistry.V1.ScanResult> __Marshaller_yandex_cloud_containerregistry_v1_ScanResult = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Containerregistry.V1.ScanResult.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Containerregistry.V1.GetLastScanResultRequest> __Marshaller_yandex_cloud_containerregistry_v1_GetLastScanResultRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Containerregistry.V1.GetLastScanResultRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Containerregistry.V1.ListScanResultsRequest> __Marshaller_yandex_cloud_containerregistry_v1_ListScanResultsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Containerregistry.V1.ListScanResultsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Containerregistry.V1.ListScanResultsResponse> __Marshaller_yandex_cloud_containerregistry_v1_ListScanResultsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Containerregistry.V1.ListScanResultsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesRequest> __Marshaller_yandex_cloud_containerregistry_v1_ListVulnerabilitiesRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesResponse> __Marshaller_yandex_cloud_containerregistry_v1_ListVulnerabilitiesResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Yandex.Cloud.Containerregistry.V1.ScanRequest, global::Yandex.Cloud.Operation.Operation> __Method_Scan = new grpc::Method<global::Yandex.Cloud.Containerregistry.V1.ScanRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Scan",
        __Marshaller_yandex_cloud_containerregistry_v1_ScanRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Containerregistry.V1.GetScanResultRequest, global::Yandex.Cloud.Containerregistry.V1.ScanResult> __Method_Get = new grpc::Method<global::Yandex.Cloud.Containerregistry.V1.GetScanResultRequest, global::Yandex.Cloud.Containerregistry.V1.ScanResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_yandex_cloud_containerregistry_v1_GetScanResultRequest,
        __Marshaller_yandex_cloud_containerregistry_v1_ScanResult);

    static readonly grpc::Method<global::Yandex.Cloud.Containerregistry.V1.GetLastScanResultRequest, global::Yandex.Cloud.Containerregistry.V1.ScanResult> __Method_GetLast = new grpc::Method<global::Yandex.Cloud.Containerregistry.V1.GetLastScanResultRequest, global::Yandex.Cloud.Containerregistry.V1.ScanResult>(
        grpc::MethodType.Unary,
        __ServiceName,
        "GetLast",
        __Marshaller_yandex_cloud_containerregistry_v1_GetLastScanResultRequest,
        __Marshaller_yandex_cloud_containerregistry_v1_ScanResult);

    static readonly grpc::Method<global::Yandex.Cloud.Containerregistry.V1.ListScanResultsRequest, global::Yandex.Cloud.Containerregistry.V1.ListScanResultsResponse> __Method_List = new grpc::Method<global::Yandex.Cloud.Containerregistry.V1.ListScanResultsRequest, global::Yandex.Cloud.Containerregistry.V1.ListScanResultsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_yandex_cloud_containerregistry_v1_ListScanResultsRequest,
        __Marshaller_yandex_cloud_containerregistry_v1_ListScanResultsResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesRequest, global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesResponse> __Method_ListVulnerabilities = new grpc::Method<global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesRequest, global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListVulnerabilities",
        __Marshaller_yandex_cloud_containerregistry_v1_ListVulnerabilitiesRequest,
        __Marshaller_yandex_cloud_containerregistry_v1_ListVulnerabilitiesResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Yandex.Cloud.Containerregistry.V1.ScannerServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ScannerService</summary>
    public partial class ScannerServiceClient : grpc::ClientBase<ScannerServiceClient>
    {
      /// <summary>Creates a new client for ScannerService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ScannerServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ScannerService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ScannerServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ScannerServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ScannerServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Executes scanning of specified image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Scan(global::Yandex.Cloud.Containerregistry.V1.ScanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Scan(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Executes scanning of specified image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Scan(global::Yandex.Cloud.Containerregistry.V1.ScanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Scan, null, options, request);
      }
      /// <summary>
      /// Executes scanning of specified image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> ScanAsync(global::Yandex.Cloud.Containerregistry.V1.ScanRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ScanAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Executes scanning of specified image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> ScanAsync(global::Yandex.Cloud.Containerregistry.V1.ScanRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Scan, null, options, request);
      }
      /// <summary>
      /// Returns the specified ScanResult resource.
      ///
      /// To get the list of ScanResults for specified Image, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Containerregistry.V1.ScanResult Get(global::Yandex.Cloud.Containerregistry.V1.GetScanResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified ScanResult resource.
      ///
      /// To get the list of ScanResults for specified Image, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Containerregistry.V1.ScanResult Get(global::Yandex.Cloud.Containerregistry.V1.GetScanResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Returns the specified ScanResult resource.
      ///
      /// To get the list of ScanResults for specified Image, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Containerregistry.V1.ScanResult> GetAsync(global::Yandex.Cloud.Containerregistry.V1.GetScanResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified ScanResult resource.
      ///
      /// To get the list of ScanResults for specified Image, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Containerregistry.V1.ScanResult> GetAsync(global::Yandex.Cloud.Containerregistry.V1.GetScanResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Returns the last finished ScanResult for the specified Image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Containerregistry.V1.ScanResult GetLast(global::Yandex.Cloud.Containerregistry.V1.GetLastScanResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLast(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the last finished ScanResult for the specified Image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Containerregistry.V1.ScanResult GetLast(global::Yandex.Cloud.Containerregistry.V1.GetLastScanResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_GetLast, null, options, request);
      }
      /// <summary>
      /// Returns the last finished ScanResult for the specified Image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Containerregistry.V1.ScanResult> GetLastAsync(global::Yandex.Cloud.Containerregistry.V1.GetLastScanResultRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetLastAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the last finished ScanResult for the specified Image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Containerregistry.V1.ScanResult> GetLastAsync(global::Yandex.Cloud.Containerregistry.V1.GetLastScanResultRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_GetLast, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of ScanResults for specified Image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Containerregistry.V1.ListScanResultsResponse List(global::Yandex.Cloud.Containerregistry.V1.ListScanResultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of ScanResults for specified Image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Containerregistry.V1.ListScanResultsResponse List(global::Yandex.Cloud.Containerregistry.V1.ListScanResultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of ScanResults for specified Image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Containerregistry.V1.ListScanResultsResponse> ListAsync(global::Yandex.Cloud.Containerregistry.V1.ListScanResultsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of ScanResults for specified Image.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Containerregistry.V1.ListScanResultsResponse> ListAsync(global::Yandex.Cloud.Containerregistry.V1.ListScanResultsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of vulnerabilities found in particular scan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesResponse ListVulnerabilities(global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVulnerabilities(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of vulnerabilities found in particular scan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesResponse ListVulnerabilities(global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListVulnerabilities, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of vulnerabilities found in particular scan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesResponse> ListVulnerabilitiesAsync(global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListVulnerabilitiesAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of vulnerabilities found in particular scan.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesResponse> ListVulnerabilitiesAsync(global::Yandex.Cloud.Containerregistry.V1.ListVulnerabilitiesRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListVulnerabilities, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ScannerServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ScannerServiceClient(configuration);
      }
    }

  }
}
#endregion
