// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/containerregistry/v1/lifecycle_policy_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Containerregistry.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/containerregistry/v1/lifecycle_policy_service.proto</summary>
  internal static partial class LifecyclePolicyServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/containerregistry/v1/lifecycle_policy_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static LifecyclePolicyServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkB5YW5kZXgvY2xvdWQvY29udGFpbmVycmVnaXN0cnkvdjEvbGlmZWN5Y2xl",
            "X3BvbGljeV9zZXJ2aWNlLnByb3RvEiF5YW5kZXguY2xvdWQuY29udGFpbmVy",
            "cmVnaXN0cnkudjEaIHlhbmRleC9jbG91ZC9hcGkvb3BlcmF0aW9uLnByb3Rv",
            "Gi15YW5kZXgvY2xvdWQvY29udGFpbmVycmVnaXN0cnkvdjEvaW1hZ2UucHJv",
            "dG8aOHlhbmRleC9jbG91ZC9jb250YWluZXJyZWdpc3RyeS92MS9saWZlY3lj",
            "bGVfcG9saWN5LnByb3RvGiZ5YW5kZXgvY2xvdWQvb3BlcmF0aW9uL29wZXJh",
            "dGlvbi5wcm90bxodeWFuZGV4L2Nsb3VkL3ZhbGlkYXRpb24ucHJvdG8aIGdv",
            "b2dsZS9wcm90b2J1Zi9maWVsZF9tYXNrLnByb3RvGh9nb29nbGUvcHJvdG9i",
            "dWYvdGltZXN0YW1wLnByb3RvIkYKGUdldExpZmVjeWNsZVBvbGljeVJlcXVl",
            "c3QSKQoTbGlmZWN5Y2xlX3BvbGljeV9pZBgBIAEoCUIM6McxAYrIMQQ8PTUw",
            "IuUBChxMaXN0TGlmZWN5Y2xlUG9saWNpZXNSZXF1ZXN0Eh8KC3JlZ2lzdHJ5",
            "X2lkGAEgASgJQgiKyDEEPD01MEgAEiEKDXJlcG9zaXRvcnlfaWQYBiABKAlC",
            "CIrIMQQ8PTUwSAASHQoJcGFnZV9zaXplGAIgASgDQgr6xzEGMC0xMDAwEh0K",
            "CnBhZ2VfdG9rZW4YAyABKAlCCYrIMQU8PTEwMBIaCgZmaWx0ZXIYBCABKAlC",
            "CorIMQY8PTEwMDASGwoIb3JkZXJfYnkYBSABKAlCCYrIMQU8PTEwMEIKCgJp",
            "ZBIEwMExASKIAQodTGlzdExpZmVjeWNsZVBvbGljaWVzUmVzcG9uc2USTgoS",
            "bGlmZWN5Y2xlX3BvbGljaWVzGAEgAygLMjIueWFuZGV4LmNsb3VkLmNvbnRh",
            "aW5lcnJlZ2lzdHJ5LnYxLkxpZmVjeWNsZVBvbGljeRIXCg9uZXh0X3BhZ2Vf",
            "dG9rZW4YAiABKAkipgIKHENyZWF0ZUxpZmVjeWNsZVBvbGljeVJlcXVlc3QS",
            "IwoNcmVwb3NpdG9yeV9pZBgBIAEoCUIM6McxAYrIMQQ8PTUwEi8KBG5hbWUY",
            "AiABKAlCIfLHMR18W2Etel1bLWEtejAtOV17MSw2MX1bYS16MC05XRIeCgtk",
            "ZXNjcmlwdGlvbhgDIAEoCUIJisgxBTw9MjU2Ek8KBnN0YXR1cxgEIAEoDjI5",
            "LnlhbmRleC5jbG91ZC5jb250YWluZXJyZWdpc3RyeS52MS5MaWZlY3ljbGVQ",
            "b2xpY3kuU3RhdHVzQgToxzEBEj8KBXJ1bGVzGAUgAygLMjAueWFuZGV4LmNs",
            "b3VkLmNvbnRhaW5lcnJlZ2lzdHJ5LnYxLkxpZmVjeWNsZVJ1bGUi3QIKHFVw",
            "ZGF0ZUxpZmVjeWNsZVBvbGljeVJlcXVlc3QSKQoTbGlmZWN5Y2xlX3BvbGlj",
            "eV9pZBgBIAEoCUIM6McxAYrIMQQ8PTUwEi8KC3VwZGF0ZV9tYXNrGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLkZpZWxkTWFzaxIvCgRuYW1lGAMgASgJQiHy",
            "xzEdfFthLXpdWy1hLXowLTldezEsNjF9W2EtejAtOV0SHgoLZGVzY3JpcHRp",
            "b24YBCABKAlCCYrIMQU8PTI1NhJPCgZzdGF0dXMYBSABKA4yOS55YW5kZXgu",
            "Y2xvdWQuY29udGFpbmVycmVnaXN0cnkudjEuTGlmZWN5Y2xlUG9saWN5LlN0",
            "YXR1c0IE6McxARI/CgVydWxlcxgGIAMoCzIwLnlhbmRleC5jbG91ZC5jb250",
            "YWluZXJyZWdpc3RyeS52MS5MaWZlY3ljbGVSdWxlIkkKHERlbGV0ZUxpZmVj",
            "eWNsZVBvbGljeVJlcXVlc3QSKQoTbGlmZWN5Y2xlX3BvbGljeV9pZBgBIAEo",
            "CUIM6McxAYrIMQQ8PTUwIjwKHUNyZWF0ZUxpZmVjeWNsZVBvbGljeU1ldGFk",
            "YXRhEhsKE2xpZmVjeWNsZV9wb2xpY3lfaWQYASABKAkiPAodVXBkYXRlTGlm",
            "ZWN5Y2xlUG9saWN5TWV0YWRhdGESGwoTbGlmZWN5Y2xlX3BvbGljeV9pZBgB",
            "IAEoCSI8Ch1EZWxldGVMaWZlY3ljbGVQb2xpY3lNZXRhZGF0YRIbChNsaWZl",
            "Y3ljbGVfcG9saWN5X2lkGAEgASgJIkkKHERyeVJ1bkxpZmVjeWNsZVBvbGlj",
            "eVJlcXVlc3QSKQoTbGlmZWN5Y2xlX3BvbGljeV9pZBgBIAEoCUIM6McxAYrI",
            "MQQ8PTUwImgKHURyeVJ1bkxpZmVjeWNsZVBvbGljeU1ldGFkYXRhEioKImRy",
            "eV9ydW5fbGlmZWN5Y2xlX3BvbGljeV9yZXN1bHRfaWQYASABKAkSGwoTbGlm",
            "ZWN5Y2xlX3BvbGljeV9pZBgCIAEoCSKxAQobRHJ5UnVuTGlmZWN5Y2xlUG9s",
            "aWN5UmVzdWx0EioKImRyeV9ydW5fbGlmZWN5Y2xlX3BvbGljeV9yZXN1bHRf",
            "aWQYASABKAkSGwoTbGlmZWN5Y2xlX3BvbGljeV9pZBgCIAEoCRIqCgZydW5f",
            "YXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEh0KFWFmZmVj",
            "dGVkX2ltYWdlc19jb3VudBgEIAEoAyLLAQonTGlzdERyeVJ1bkxpZmVjeWNs",
            "ZVBvbGljeVJlc3VsdHNSZXF1ZXN0EikKE2xpZmVjeWNsZV9wb2xpY3lfaWQY",
            "ASABKAlCDOjHMQGKyDEEPD01MBIdCglwYWdlX3NpemUYAiABKANCCvrHMQYw",
            "LTEwMDASHQoKcGFnZV90b2tlbhgDIAEoCUIJisgxBTw9MTAwEhoKBmZpbHRl",
            "chgEIAEoCUIKisgxBjw9MTAwMBIbCghvcmRlcl9ieRgFIAEoCUIJisgxBTw9",
            "MTAwIq0BCihMaXN0RHJ5UnVuTGlmZWN5Y2xlUG9saWN5UmVzdWx0c1Jlc3Bv",
            "bnNlEmgKIGRyeV9ydW5fbGlmZWN5Y2xlX3BvbGljeV9yZXN1bHRzGAEgAygL",
            "Mj4ueWFuZGV4LmNsb3VkLmNvbnRhaW5lcnJlZ2lzdHJ5LnYxLkRyeVJ1bkxp",
            "ZmVjeWNsZVBvbGljeVJlc3VsdBIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAki",
            "5wEKNExpc3REcnlSdW5MaWZlY3ljbGVQb2xpY3lSZXN1bHRBZmZlY3RlZElt",
            "YWdlc1JlcXVlc3QSOAoiZHJ5X3J1bl9saWZlY3ljbGVfcG9saWN5X3Jlc3Vs",
            "dF9pZBgBIAEoCUIM6McxAYrIMQQ8PTUwEh0KCXBhZ2Vfc2l6ZRgCIAEoA0IK",
            "+scxBjAtMTAwMBIdCgpwYWdlX3Rva2VuGAMgASgJQgmKyDEFPD0xMDASGgoG",
            "ZmlsdGVyGAQgASgJQgqKyDEGPD0xMDAwEhsKCG9yZGVyX2J5GAUgASgJQgmK",
            "yDEFPD0xMDAipwIKNUxpc3REcnlSdW5MaWZlY3ljbGVQb2xpY3lSZXN1bHRB",
            "ZmZlY3RlZEltYWdlc1Jlc3BvbnNlEkEKD2FmZmVjdGVkX2ltYWdlcxgBIAMo",
            "CzIoLnlhbmRleC5jbG91ZC5jb250YWluZXJyZWdpc3RyeS52MS5JbWFnZRIq",
            "CiJkcnlfcnVuX2xpZmVjeWNsZV9wb2xpY3lfcmVzdWx0X2lkGAIgASgJEhsK",
            "E2xpZmVjeWNsZV9wb2xpY3lfaWQYAyABKAkSKgoGcnVuX2F0GAQgASgLMhou",
            "Z29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcBIdChVhZmZlY3RlZF9pbWFnZXNf",
            "Y291bnQYBSABKAMSFwoPbmV4dF9wYWdlX3Rva2VuGAYgASgJMsgKChZMaWZl",
            "Y3ljbGVQb2xpY3lTZXJ2aWNlEncKA0dldBI8LnlhbmRleC5jbG91ZC5jb250",
            "YWluZXJyZWdpc3RyeS52MS5HZXRMaWZlY3ljbGVQb2xpY3lSZXF1ZXN0GjIu",
            "eWFuZGV4LmNsb3VkLmNvbnRhaW5lcnJlZ2lzdHJ5LnYxLkxpZmVjeWNsZVBv",
            "bGljeRKJAQoETGlzdBI/LnlhbmRleC5jbG91ZC5jb250YWluZXJyZWdpc3Ry",
            "eS52MS5MaXN0TGlmZWN5Y2xlUG9saWNpZXNSZXF1ZXN0GkAueWFuZGV4LmNs",
            "b3VkLmNvbnRhaW5lcnJlZ2lzdHJ5LnYxLkxpc3RMaWZlY3ljbGVQb2xpY2ll",
            "c1Jlc3BvbnNlEqIBCgZDcmVhdGUSPy55YW5kZXguY2xvdWQuY29udGFpbmVy",
            "cmVnaXN0cnkudjEuQ3JlYXRlTGlmZWN5Y2xlUG9saWN5UmVxdWVzdBohLnlh",
            "bmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uIjSy0iowCh1DcmVhdGVM",
            "aWZlY3ljbGVQb2xpY3lNZXRhZGF0YRIPTGlmZWN5Y2xlUG9saWN5EqIBCgZV",
            "cGRhdGUSPy55YW5kZXguY2xvdWQuY29udGFpbmVycmVnaXN0cnkudjEuVXBk",
            "YXRlTGlmZWN5Y2xlUG9saWN5UmVxdWVzdBohLnlhbmRleC5jbG91ZC5vcGVy",
            "YXRpb24uT3BlcmF0aW9uIjSy0iowCh1VcGRhdGVMaWZlY3ljbGVQb2xpY3lN",
            "ZXRhZGF0YRIPTGlmZWN5Y2xlUG9saWN5EqgBCgZEZWxldGUSPy55YW5kZXgu",
            "Y2xvdWQuY29udGFpbmVycmVnaXN0cnkudjEuRGVsZXRlTGlmZWN5Y2xlUG9s",
            "aWN5UmVxdWVzdBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9u",
            "Ijqy0io2Ch1EZWxldGVMaWZlY3ljbGVQb2xpY3lNZXRhZGF0YRIVZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5Eq4BCgZEcnlSdW4SPy55YW5kZXguY2xvdWQuY29u",
            "dGFpbmVycmVnaXN0cnkudjEuRHJ5UnVuTGlmZWN5Y2xlUG9saWN5UmVxdWVz",
            "dBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uIkCy0io8Ch1E",
            "cnlSdW5MaWZlY3ljbGVQb2xpY3lNZXRhZGF0YRIbRHJ5UnVuTGlmZWN5Y2xl",
            "UG9saWN5UmVzdWx0EqwBChFMaXN0RHJ5UnVuUmVzdWx0cxJKLnlhbmRleC5j",
            "bG91ZC5jb250YWluZXJyZWdpc3RyeS52MS5MaXN0RHJ5UnVuTGlmZWN5Y2xl",
            "UG9saWN5UmVzdWx0c1JlcXVlc3QaSy55YW5kZXguY2xvdWQuY29udGFpbmVy",
            "cmVnaXN0cnkudjEuTGlzdERyeVJ1bkxpZmVjeWNsZVBvbGljeVJlc3VsdHNS",
            "ZXNwb25zZRLTAQoeTGlzdERyeVJ1blJlc3VsdEFmZmVjdGVkSW1hZ2VzElcu",
            "eWFuZGV4LmNsb3VkLmNvbnRhaW5lcnJlZ2lzdHJ5LnYxLkxpc3REcnlSdW5M",
            "aWZlY3ljbGVQb2xpY3lSZXN1bHRBZmZlY3RlZEltYWdlc1JlcXVlc3QaWC55",
            "YW5kZXguY2xvdWQuY29udGFpbmVycmVnaXN0cnkudjEuTGlzdERyeVJ1bkxp",
            "ZmVjeWNsZVBvbGljeVJlc3VsdEFmZmVjdGVkSW1hZ2VzUmVzcG9uc2VCgAEK",
            "JXlhbmRleC5jbG91ZC5hcGkuY29udGFpbmVycmVnaXN0cnkudjFaV2dpdGh1",
            "Yi5jb20veWFuZGV4LWNsb3VkL2dvLWdlbnByb3RvL3lhbmRleC9jbG91ZC9j",
            "b250YWluZXJyZWdpc3RyeS92MTtjb250YWluZXJyZWdpc3RyeWIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Yandex.Cloud.Api.OperationReflection.Descriptor, global::Yandex.Cloud.Containerregistry.V1.ImageReflection.Descriptor, global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyReflection.Descriptor, global::Yandex.Cloud.Operation.OperationReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.GetLifecyclePolicyRequest), global::Yandex.Cloud.Containerregistry.V1.GetLifecyclePolicyRequest.Parser, new[]{ "LifecyclePolicyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.ListLifecyclePoliciesRequest), global::Yandex.Cloud.Containerregistry.V1.ListLifecyclePoliciesRequest.Parser, new[]{ "RegistryId", "RepositoryId", "PageSize", "PageToken", "Filter", "OrderBy" }, new[]{ "Id" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.ListLifecyclePoliciesResponse), global::Yandex.Cloud.Containerregistry.V1.ListLifecyclePoliciesResponse.Parser, new[]{ "LifecyclePolicies", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.CreateLifecyclePolicyRequest), global::Yandex.Cloud.Containerregistry.V1.CreateLifecyclePolicyRequest.Parser, new[]{ "RepositoryId", "Name", "Description", "Status", "Rules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.UpdateLifecyclePolicyRequest), global::Yandex.Cloud.Containerregistry.V1.UpdateLifecyclePolicyRequest.Parser, new[]{ "LifecyclePolicyId", "UpdateMask", "Name", "Description", "Status", "Rules" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.DeleteLifecyclePolicyRequest), global::Yandex.Cloud.Containerregistry.V1.DeleteLifecyclePolicyRequest.Parser, new[]{ "LifecyclePolicyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.CreateLifecyclePolicyMetadata), global::Yandex.Cloud.Containerregistry.V1.CreateLifecyclePolicyMetadata.Parser, new[]{ "LifecyclePolicyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.UpdateLifecyclePolicyMetadata), global::Yandex.Cloud.Containerregistry.V1.UpdateLifecyclePolicyMetadata.Parser, new[]{ "LifecyclePolicyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.DeleteLifecyclePolicyMetadata), global::Yandex.Cloud.Containerregistry.V1.DeleteLifecyclePolicyMetadata.Parser, new[]{ "LifecyclePolicyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyRequest), global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyRequest.Parser, new[]{ "LifecyclePolicyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyMetadata), global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyMetadata.Parser, new[]{ "DryRunLifecyclePolicyResultId", "LifecyclePolicyId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyResult), global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyResult.Parser, new[]{ "DryRunLifecyclePolicyResultId", "LifecyclePolicyId", "RunAt", "AffectedImagesCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.ListDryRunLifecyclePolicyResultsRequest), global::Yandex.Cloud.Containerregistry.V1.ListDryRunLifecyclePolicyResultsRequest.Parser, new[]{ "LifecyclePolicyId", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.ListDryRunLifecyclePolicyResultsResponse), global::Yandex.Cloud.Containerregistry.V1.ListDryRunLifecyclePolicyResultsResponse.Parser, new[]{ "DryRunLifecyclePolicyResults", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.ListDryRunLifecyclePolicyResultAffectedImagesRequest), global::Yandex.Cloud.Containerregistry.V1.ListDryRunLifecyclePolicyResultAffectedImagesRequest.Parser, new[]{ "DryRunLifecyclePolicyResultId", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.ListDryRunLifecyclePolicyResultAffectedImagesResponse), global::Yandex.Cloud.Containerregistry.V1.ListDryRunLifecyclePolicyResultAffectedImagesResponse.Parser, new[]{ "AffectedImages", "DryRunLifecyclePolicyResultId", "LifecyclePolicyId", "RunAt", "AffectedImagesCount", "NextPageToken" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class GetLifecyclePolicyRequest : pb::IMessage<GetLifecyclePolicyRequest> {
    private static readonly pb::MessageParser<GetLifecyclePolicyRequest> _parser = new pb::MessageParser<GetLifecyclePolicyRequest>(() => new GetLifecyclePolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetLifecyclePolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLifecyclePolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLifecyclePolicyRequest(GetLifecyclePolicyRequest other) : this() {
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetLifecyclePolicyRequest Clone() {
      return new GetLifecyclePolicyRequest(this);
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 1;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetLifecyclePolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetLifecyclePolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetLifecyclePolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListLifecyclePoliciesRequest : pb::IMessage<ListLifecyclePoliciesRequest> {
    private static readonly pb::MessageParser<ListLifecyclePoliciesRequest> _parser = new pb::MessageParser<ListLifecyclePoliciesRequest>(() => new ListLifecyclePoliciesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListLifecyclePoliciesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLifecyclePoliciesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLifecyclePoliciesRequest(ListLifecyclePoliciesRequest other) : this() {
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      switch (other.IdCase) {
        case IdOneofCase.RegistryId:
          RegistryId = other.RegistryId;
          break;
        case IdOneofCase.RepositoryId:
          RepositoryId = other.RepositoryId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLifecyclePoliciesRequest Clone() {
      return new ListLifecyclePoliciesRequest(this);
    }

    /// <summary>Field number for the "registry_id" field.</summary>
    public const int RegistryIdFieldNumber = 1;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegistryId {
      get { return idCase_ == IdOneofCase.RegistryId ? (string) id_ : ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        idCase_ = IdOneofCase.RegistryId;
      }
    }

    /// <summary>Field number for the "repository_id" field.</summary>
    public const int RepositoryIdFieldNumber = 6;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepositoryId {
      get { return idCase_ == IdOneofCase.RepositoryId ? (string) id_ : ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        idCase_ = IdOneofCase.RepositoryId;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object id_;
    /// <summary>Enum of possible cases for the "id" oneof.</summary>
    public enum IdOneofCase {
      None = 0,
      RegistryId = 1,
      RepositoryId = 6,
    }
    private IdOneofCase idCase_ = IdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdOneofCase IdCase {
      get { return idCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      idCase_ = IdOneofCase.None;
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListLifecyclePoliciesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListLifecyclePoliciesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegistryId != other.RegistryId) return false;
      if (RepositoryId != other.RepositoryId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      if (IdCase != other.IdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idCase_ == IdOneofCase.RegistryId) hash ^= RegistryId.GetHashCode();
      if (idCase_ == IdOneofCase.RepositoryId) hash ^= RepositoryId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      hash ^= (int) idCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (idCase_ == IdOneofCase.RegistryId) {
        output.WriteRawTag(10);
        output.WriteString(RegistryId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (idCase_ == IdOneofCase.RepositoryId) {
        output.WriteRawTag(50);
        output.WriteString(RepositoryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idCase_ == IdOneofCase.RegistryId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegistryId);
      }
      if (idCase_ == IdOneofCase.RepositoryId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepositoryId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListLifecyclePoliciesRequest other) {
      if (other == null) {
        return;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      switch (other.IdCase) {
        case IdOneofCase.RegistryId:
          RegistryId = other.RegistryId;
          break;
        case IdOneofCase.RepositoryId:
          RepositoryId = other.RepositoryId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RegistryId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
          case 50: {
            RepositoryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListLifecyclePoliciesResponse : pb::IMessage<ListLifecyclePoliciesResponse> {
    private static readonly pb::MessageParser<ListLifecyclePoliciesResponse> _parser = new pb::MessageParser<ListLifecyclePoliciesResponse>(() => new ListLifecyclePoliciesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListLifecyclePoliciesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLifecyclePoliciesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLifecyclePoliciesResponse(ListLifecyclePoliciesResponse other) : this() {
      lifecyclePolicies_ = other.lifecyclePolicies_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListLifecyclePoliciesResponse Clone() {
      return new ListLifecyclePoliciesResponse(this);
    }

    /// <summary>Field number for the "lifecycle_policies" field.</summary>
    public const int LifecyclePoliciesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy> _repeated_lifecyclePolicies_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy> lifecyclePolicies_ = new pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy> LifecyclePolicies {
      get { return lifecyclePolicies_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListLifecyclePoliciesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListLifecyclePoliciesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!lifecyclePolicies_.Equals(other.lifecyclePolicies_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= lifecyclePolicies_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      lifecyclePolicies_.WriteTo(output, _repeated_lifecyclePolicies_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += lifecyclePolicies_.CalculateSize(_repeated_lifecyclePolicies_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListLifecyclePoliciesResponse other) {
      if (other == null) {
        return;
      }
      lifecyclePolicies_.Add(other.lifecyclePolicies_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            lifecyclePolicies_.AddEntriesFrom(input, _repeated_lifecyclePolicies_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateLifecyclePolicyRequest : pb::IMessage<CreateLifecyclePolicyRequest> {
    private static readonly pb::MessageParser<CreateLifecyclePolicyRequest> _parser = new pb::MessageParser<CreateLifecyclePolicyRequest>(() => new CreateLifecyclePolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateLifecyclePolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLifecyclePolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLifecyclePolicyRequest(CreateLifecyclePolicyRequest other) : this() {
      repositoryId_ = other.repositoryId_;
      name_ = other.name_;
      description_ = other.description_;
      status_ = other.status_;
      rules_ = other.rules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLifecyclePolicyRequest Clone() {
      return new CreateLifecyclePolicyRequest(this);
    }

    /// <summary>Field number for the "repository_id" field.</summary>
    public const int RepositoryIdFieldNumber = 1;
    private string repositoryId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepositoryId {
      get { return repositoryId_; }
      set {
        repositoryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 4;
    private global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Containerregistry.V1.LifecycleRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(42, global::Yandex.Cloud.Containerregistry.V1.LifecycleRule.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecycleRule> rules_ = new pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecycleRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecycleRule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateLifecyclePolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateLifecyclePolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RepositoryId != other.RepositoryId) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Status != other.Status) return false;
      if(!rules_.Equals(other.rules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RepositoryId.Length != 0) hash ^= RepositoryId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= rules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RepositoryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RepositoryId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Status != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) Status);
      }
      rules_.WriteTo(output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RepositoryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepositoryId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateLifecyclePolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.RepositoryId.Length != 0) {
        RepositoryId = other.RepositoryId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      rules_.Add(other.rules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RepositoryId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 32: {
            Status = (global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy.Types.Status) input.ReadEnum();
            break;
          }
          case 42: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateLifecyclePolicyRequest : pb::IMessage<UpdateLifecyclePolicyRequest> {
    private static readonly pb::MessageParser<UpdateLifecyclePolicyRequest> _parser = new pb::MessageParser<UpdateLifecyclePolicyRequest>(() => new UpdateLifecyclePolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateLifecyclePolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLifecyclePolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLifecyclePolicyRequest(UpdateLifecyclePolicyRequest other) : this() {
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      status_ = other.status_;
      rules_ = other.rules_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLifecyclePolicyRequest Clone() {
      return new UpdateLifecyclePolicyRequest(this);
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 1;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 5;
    private global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy.Types.Status status_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "rules" field.</summary>
    public const int RulesFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Containerregistry.V1.LifecycleRule> _repeated_rules_codec
        = pb::FieldCodec.ForMessage(50, global::Yandex.Cloud.Containerregistry.V1.LifecycleRule.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecycleRule> rules_ = new pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecycleRule>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.LifecycleRule> Rules {
      get { return rules_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateLifecyclePolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateLifecyclePolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Status != other.Status) return false;
      if(!rules_.Equals(other.rules_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= rules_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LifecyclePolicyId);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      if (Status != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Status);
      }
      rules_.WriteTo(output, _repeated_rules_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += rules_.CalculateSize(_repeated_rules_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateLifecyclePolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      rules_.Add(other.rules_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 40: {
            Status = (global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicy.Types.Status) input.ReadEnum();
            break;
          }
          case 50: {
            rules_.AddEntriesFrom(input, _repeated_rules_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteLifecyclePolicyRequest : pb::IMessage<DeleteLifecyclePolicyRequest> {
    private static readonly pb::MessageParser<DeleteLifecyclePolicyRequest> _parser = new pb::MessageParser<DeleteLifecyclePolicyRequest>(() => new DeleteLifecyclePolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteLifecyclePolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLifecyclePolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLifecyclePolicyRequest(DeleteLifecyclePolicyRequest other) : this() {
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLifecyclePolicyRequest Clone() {
      return new DeleteLifecyclePolicyRequest(this);
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 1;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteLifecyclePolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteLifecyclePolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteLifecyclePolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateLifecyclePolicyMetadata : pb::IMessage<CreateLifecyclePolicyMetadata> {
    private static readonly pb::MessageParser<CreateLifecyclePolicyMetadata> _parser = new pb::MessageParser<CreateLifecyclePolicyMetadata>(() => new CreateLifecyclePolicyMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateLifecyclePolicyMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLifecyclePolicyMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLifecyclePolicyMetadata(CreateLifecyclePolicyMetadata other) : this() {
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateLifecyclePolicyMetadata Clone() {
      return new CreateLifecyclePolicyMetadata(this);
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 1;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateLifecyclePolicyMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateLifecyclePolicyMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateLifecyclePolicyMetadata other) {
      if (other == null) {
        return;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateLifecyclePolicyMetadata : pb::IMessage<UpdateLifecyclePolicyMetadata> {
    private static readonly pb::MessageParser<UpdateLifecyclePolicyMetadata> _parser = new pb::MessageParser<UpdateLifecyclePolicyMetadata>(() => new UpdateLifecyclePolicyMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateLifecyclePolicyMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLifecyclePolicyMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLifecyclePolicyMetadata(UpdateLifecyclePolicyMetadata other) : this() {
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateLifecyclePolicyMetadata Clone() {
      return new UpdateLifecyclePolicyMetadata(this);
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 1;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateLifecyclePolicyMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateLifecyclePolicyMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateLifecyclePolicyMetadata other) {
      if (other == null) {
        return;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteLifecyclePolicyMetadata : pb::IMessage<DeleteLifecyclePolicyMetadata> {
    private static readonly pb::MessageParser<DeleteLifecyclePolicyMetadata> _parser = new pb::MessageParser<DeleteLifecyclePolicyMetadata>(() => new DeleteLifecyclePolicyMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteLifecyclePolicyMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLifecyclePolicyMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLifecyclePolicyMetadata(DeleteLifecyclePolicyMetadata other) : this() {
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteLifecyclePolicyMetadata Clone() {
      return new DeleteLifecyclePolicyMetadata(this);
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 1;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteLifecyclePolicyMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteLifecyclePolicyMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteLifecyclePolicyMetadata other) {
      if (other == null) {
        return;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DryRunLifecyclePolicyRequest : pb::IMessage<DryRunLifecyclePolicyRequest> {
    private static readonly pb::MessageParser<DryRunLifecyclePolicyRequest> _parser = new pb::MessageParser<DryRunLifecyclePolicyRequest>(() => new DryRunLifecyclePolicyRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DryRunLifecyclePolicyRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyRequest(DryRunLifecyclePolicyRequest other) : this() {
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyRequest Clone() {
      return new DryRunLifecyclePolicyRequest(this);
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 1;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DryRunLifecyclePolicyRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DryRunLifecyclePolicyRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DryRunLifecyclePolicyRequest other) {
      if (other == null) {
        return;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DryRunLifecyclePolicyMetadata : pb::IMessage<DryRunLifecyclePolicyMetadata> {
    private static readonly pb::MessageParser<DryRunLifecyclePolicyMetadata> _parser = new pb::MessageParser<DryRunLifecyclePolicyMetadata>(() => new DryRunLifecyclePolicyMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DryRunLifecyclePolicyMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyMetadata(DryRunLifecyclePolicyMetadata other) : this() {
      dryRunLifecyclePolicyResultId_ = other.dryRunLifecyclePolicyResultId_;
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyMetadata Clone() {
      return new DryRunLifecyclePolicyMetadata(this);
    }

    /// <summary>Field number for the "dry_run_lifecycle_policy_result_id" field.</summary>
    public const int DryRunLifecyclePolicyResultIdFieldNumber = 1;
    private string dryRunLifecyclePolicyResultId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DryRunLifecyclePolicyResultId {
      get { return dryRunLifecyclePolicyResultId_; }
      set {
        dryRunLifecyclePolicyResultId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 2;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DryRunLifecyclePolicyMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DryRunLifecyclePolicyMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DryRunLifecyclePolicyResultId != other.DryRunLifecyclePolicyResultId) return false;
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DryRunLifecyclePolicyResultId.Length != 0) hash ^= DryRunLifecyclePolicyResultId.GetHashCode();
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DryRunLifecyclePolicyResultId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DryRunLifecyclePolicyResultId);
      }
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DryRunLifecyclePolicyResultId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DryRunLifecyclePolicyResultId);
      }
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DryRunLifecyclePolicyMetadata other) {
      if (other == null) {
        return;
      }
      if (other.DryRunLifecyclePolicyResultId.Length != 0) {
        DryRunLifecyclePolicyResultId = other.DryRunLifecyclePolicyResultId;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DryRunLifecyclePolicyResultId = input.ReadString();
            break;
          }
          case 18: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DryRunLifecyclePolicyResult : pb::IMessage<DryRunLifecyclePolicyResult> {
    private static readonly pb::MessageParser<DryRunLifecyclePolicyResult> _parser = new pb::MessageParser<DryRunLifecyclePolicyResult>(() => new DryRunLifecyclePolicyResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DryRunLifecyclePolicyResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyResult(DryRunLifecyclePolicyResult other) : this() {
      dryRunLifecyclePolicyResultId_ = other.dryRunLifecyclePolicyResultId_;
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      runAt_ = other.runAt_ != null ? other.runAt_.Clone() : null;
      affectedImagesCount_ = other.affectedImagesCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DryRunLifecyclePolicyResult Clone() {
      return new DryRunLifecyclePolicyResult(this);
    }

    /// <summary>Field number for the "dry_run_lifecycle_policy_result_id" field.</summary>
    public const int DryRunLifecyclePolicyResultIdFieldNumber = 1;
    private string dryRunLifecyclePolicyResultId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DryRunLifecyclePolicyResultId {
      get { return dryRunLifecyclePolicyResultId_; }
      set {
        dryRunLifecyclePolicyResultId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 2;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "run_at" field.</summary>
    public const int RunAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp runAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RunAt {
      get { return runAt_; }
      set {
        runAt_ = value;
      }
    }

    /// <summary>Field number for the "affected_images_count" field.</summary>
    public const int AffectedImagesCountFieldNumber = 4;
    private long affectedImagesCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AffectedImagesCount {
      get { return affectedImagesCount_; }
      set {
        affectedImagesCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DryRunLifecyclePolicyResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DryRunLifecyclePolicyResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DryRunLifecyclePolicyResultId != other.DryRunLifecyclePolicyResultId) return false;
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      if (!object.Equals(RunAt, other.RunAt)) return false;
      if (AffectedImagesCount != other.AffectedImagesCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DryRunLifecyclePolicyResultId.Length != 0) hash ^= DryRunLifecyclePolicyResultId.GetHashCode();
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (runAt_ != null) hash ^= RunAt.GetHashCode();
      if (AffectedImagesCount != 0L) hash ^= AffectedImagesCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DryRunLifecyclePolicyResultId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DryRunLifecyclePolicyResultId);
      }
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(LifecyclePolicyId);
      }
      if (runAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(RunAt);
      }
      if (AffectedImagesCount != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(AffectedImagesCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DryRunLifecyclePolicyResultId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DryRunLifecyclePolicyResultId);
      }
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (runAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunAt);
      }
      if (AffectedImagesCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AffectedImagesCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DryRunLifecyclePolicyResult other) {
      if (other == null) {
        return;
      }
      if (other.DryRunLifecyclePolicyResultId.Length != 0) {
        DryRunLifecyclePolicyResultId = other.DryRunLifecyclePolicyResultId;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      if (other.runAt_ != null) {
        if (runAt_ == null) {
          RunAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RunAt.MergeFrom(other.RunAt);
      }
      if (other.AffectedImagesCount != 0L) {
        AffectedImagesCount = other.AffectedImagesCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DryRunLifecyclePolicyResultId = input.ReadString();
            break;
          }
          case 18: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
          case 26: {
            if (runAt_ == null) {
              RunAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RunAt);
            break;
          }
          case 32: {
            AffectedImagesCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListDryRunLifecyclePolicyResultsRequest : pb::IMessage<ListDryRunLifecyclePolicyResultsRequest> {
    private static readonly pb::MessageParser<ListDryRunLifecyclePolicyResultsRequest> _parser = new pb::MessageParser<ListDryRunLifecyclePolicyResultsRequest>(() => new ListDryRunLifecyclePolicyResultsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDryRunLifecyclePolicyResultsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultsRequest(ListDryRunLifecyclePolicyResultsRequest other) : this() {
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultsRequest Clone() {
      return new ListDryRunLifecyclePolicyResultsRequest(this);
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 1;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDryRunLifecyclePolicyResultsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDryRunLifecyclePolicyResultsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(LifecyclePolicyId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDryRunLifecyclePolicyResultsRequest other) {
      if (other == null) {
        return;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListDryRunLifecyclePolicyResultsResponse : pb::IMessage<ListDryRunLifecyclePolicyResultsResponse> {
    private static readonly pb::MessageParser<ListDryRunLifecyclePolicyResultsResponse> _parser = new pb::MessageParser<ListDryRunLifecyclePolicyResultsResponse>(() => new ListDryRunLifecyclePolicyResultsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDryRunLifecyclePolicyResultsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultsResponse(ListDryRunLifecyclePolicyResultsResponse other) : this() {
      dryRunLifecyclePolicyResults_ = other.dryRunLifecyclePolicyResults_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultsResponse Clone() {
      return new ListDryRunLifecyclePolicyResultsResponse(this);
    }

    /// <summary>Field number for the "dry_run_lifecycle_policy_results" field.</summary>
    public const int DryRunLifecyclePolicyResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyResult> _repeated_dryRunLifecyclePolicyResults_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyResult.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyResult> dryRunLifecyclePolicyResults_ = new pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyResult>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.DryRunLifecyclePolicyResult> DryRunLifecyclePolicyResults {
      get { return dryRunLifecyclePolicyResults_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDryRunLifecyclePolicyResultsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDryRunLifecyclePolicyResultsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!dryRunLifecyclePolicyResults_.Equals(other.dryRunLifecyclePolicyResults_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= dryRunLifecyclePolicyResults_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      dryRunLifecyclePolicyResults_.WriteTo(output, _repeated_dryRunLifecyclePolicyResults_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += dryRunLifecyclePolicyResults_.CalculateSize(_repeated_dryRunLifecyclePolicyResults_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDryRunLifecyclePolicyResultsResponse other) {
      if (other == null) {
        return;
      }
      dryRunLifecyclePolicyResults_.Add(other.dryRunLifecyclePolicyResults_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dryRunLifecyclePolicyResults_.AddEntriesFrom(input, _repeated_dryRunLifecyclePolicyResults_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListDryRunLifecyclePolicyResultAffectedImagesRequest : pb::IMessage<ListDryRunLifecyclePolicyResultAffectedImagesRequest> {
    private static readonly pb::MessageParser<ListDryRunLifecyclePolicyResultAffectedImagesRequest> _parser = new pb::MessageParser<ListDryRunLifecyclePolicyResultAffectedImagesRequest>(() => new ListDryRunLifecyclePolicyResultAffectedImagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDryRunLifecyclePolicyResultAffectedImagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultAffectedImagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultAffectedImagesRequest(ListDryRunLifecyclePolicyResultAffectedImagesRequest other) : this() {
      dryRunLifecyclePolicyResultId_ = other.dryRunLifecyclePolicyResultId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultAffectedImagesRequest Clone() {
      return new ListDryRunLifecyclePolicyResultAffectedImagesRequest(this);
    }

    /// <summary>Field number for the "dry_run_lifecycle_policy_result_id" field.</summary>
    public const int DryRunLifecyclePolicyResultIdFieldNumber = 1;
    private string dryRunLifecyclePolicyResultId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DryRunLifecyclePolicyResultId {
      get { return dryRunLifecyclePolicyResultId_; }
      set {
        dryRunLifecyclePolicyResultId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDryRunLifecyclePolicyResultAffectedImagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDryRunLifecyclePolicyResultAffectedImagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DryRunLifecyclePolicyResultId != other.DryRunLifecyclePolicyResultId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DryRunLifecyclePolicyResultId.Length != 0) hash ^= DryRunLifecyclePolicyResultId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DryRunLifecyclePolicyResultId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DryRunLifecyclePolicyResultId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DryRunLifecyclePolicyResultId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DryRunLifecyclePolicyResultId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDryRunLifecyclePolicyResultAffectedImagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.DryRunLifecyclePolicyResultId.Length != 0) {
        DryRunLifecyclePolicyResultId = other.DryRunLifecyclePolicyResultId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DryRunLifecyclePolicyResultId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListDryRunLifecyclePolicyResultAffectedImagesResponse : pb::IMessage<ListDryRunLifecyclePolicyResultAffectedImagesResponse> {
    private static readonly pb::MessageParser<ListDryRunLifecyclePolicyResultAffectedImagesResponse> _parser = new pb::MessageParser<ListDryRunLifecyclePolicyResultAffectedImagesResponse>(() => new ListDryRunLifecyclePolicyResultAffectedImagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListDryRunLifecyclePolicyResultAffectedImagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.LifecyclePolicyServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultAffectedImagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultAffectedImagesResponse(ListDryRunLifecyclePolicyResultAffectedImagesResponse other) : this() {
      affectedImages_ = other.affectedImages_.Clone();
      dryRunLifecyclePolicyResultId_ = other.dryRunLifecyclePolicyResultId_;
      lifecyclePolicyId_ = other.lifecyclePolicyId_;
      runAt_ = other.runAt_ != null ? other.runAt_.Clone() : null;
      affectedImagesCount_ = other.affectedImagesCount_;
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListDryRunLifecyclePolicyResultAffectedImagesResponse Clone() {
      return new ListDryRunLifecyclePolicyResultAffectedImagesResponse(this);
    }

    /// <summary>Field number for the "affected_images" field.</summary>
    public const int AffectedImagesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Containerregistry.V1.Image> _repeated_affectedImages_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Containerregistry.V1.Image.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.Image> affectedImages_ = new pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.Image>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.Image> AffectedImages {
      get { return affectedImages_; }
    }

    /// <summary>Field number for the "dry_run_lifecycle_policy_result_id" field.</summary>
    public const int DryRunLifecyclePolicyResultIdFieldNumber = 2;
    private string dryRunLifecyclePolicyResultId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DryRunLifecyclePolicyResultId {
      get { return dryRunLifecyclePolicyResultId_; }
      set {
        dryRunLifecyclePolicyResultId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lifecycle_policy_id" field.</summary>
    public const int LifecyclePolicyIdFieldNumber = 3;
    private string lifecyclePolicyId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LifecyclePolicyId {
      get { return lifecyclePolicyId_; }
      set {
        lifecyclePolicyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "run_at" field.</summary>
    public const int RunAtFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp runAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp RunAt {
      get { return runAt_; }
      set {
        runAt_ = value;
      }
    }

    /// <summary>Field number for the "affected_images_count" field.</summary>
    public const int AffectedImagesCountFieldNumber = 5;
    private long affectedImagesCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long AffectedImagesCount {
      get { return affectedImagesCount_; }
      set {
        affectedImagesCount_ = value;
      }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 6;
    private string nextPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListDryRunLifecyclePolicyResultAffectedImagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListDryRunLifecyclePolicyResultAffectedImagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!affectedImages_.Equals(other.affectedImages_)) return false;
      if (DryRunLifecyclePolicyResultId != other.DryRunLifecyclePolicyResultId) return false;
      if (LifecyclePolicyId != other.LifecyclePolicyId) return false;
      if (!object.Equals(RunAt, other.RunAt)) return false;
      if (AffectedImagesCount != other.AffectedImagesCount) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= affectedImages_.GetHashCode();
      if (DryRunLifecyclePolicyResultId.Length != 0) hash ^= DryRunLifecyclePolicyResultId.GetHashCode();
      if (LifecyclePolicyId.Length != 0) hash ^= LifecyclePolicyId.GetHashCode();
      if (runAt_ != null) hash ^= RunAt.GetHashCode();
      if (AffectedImagesCount != 0L) hash ^= AffectedImagesCount.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      affectedImages_.WriteTo(output, _repeated_affectedImages_codec);
      if (DryRunLifecyclePolicyResultId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DryRunLifecyclePolicyResultId);
      }
      if (LifecyclePolicyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LifecyclePolicyId);
      }
      if (runAt_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(RunAt);
      }
      if (AffectedImagesCount != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(AffectedImagesCount);
      }
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += affectedImages_.CalculateSize(_repeated_affectedImages_codec);
      if (DryRunLifecyclePolicyResultId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DryRunLifecyclePolicyResultId);
      }
      if (LifecyclePolicyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LifecyclePolicyId);
      }
      if (runAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RunAt);
      }
      if (AffectedImagesCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(AffectedImagesCount);
      }
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListDryRunLifecyclePolicyResultAffectedImagesResponse other) {
      if (other == null) {
        return;
      }
      affectedImages_.Add(other.affectedImages_);
      if (other.DryRunLifecyclePolicyResultId.Length != 0) {
        DryRunLifecyclePolicyResultId = other.DryRunLifecyclePolicyResultId;
      }
      if (other.LifecyclePolicyId.Length != 0) {
        LifecyclePolicyId = other.LifecyclePolicyId;
      }
      if (other.runAt_ != null) {
        if (runAt_ == null) {
          RunAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        RunAt.MergeFrom(other.RunAt);
      }
      if (other.AffectedImagesCount != 0L) {
        AffectedImagesCount = other.AffectedImagesCount;
      }
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            affectedImages_.AddEntriesFrom(input, _repeated_affectedImages_codec);
            break;
          }
          case 18: {
            DryRunLifecyclePolicyResultId = input.ReadString();
            break;
          }
          case 26: {
            LifecyclePolicyId = input.ReadString();
            break;
          }
          case 34: {
            if (runAt_ == null) {
              RunAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(RunAt);
            break;
          }
          case 40: {
            AffectedImagesCount = input.ReadInt64();
            break;
          }
          case 50: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
