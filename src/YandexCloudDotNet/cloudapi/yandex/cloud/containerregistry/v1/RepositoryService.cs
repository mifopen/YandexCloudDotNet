// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/containerregistry/v1/repository_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Containerregistry.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/containerregistry/v1/repository_service.proto</summary>
  internal static partial class RepositoryServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/containerregistry/v1/repository_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RepositoryServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjp5YW5kZXgvY2xvdWQvY29udGFpbmVycmVnaXN0cnkvdjEvcmVwb3NpdG9y",
            "eV9zZXJ2aWNlLnByb3RvEiF5YW5kZXguY2xvdWQuY29udGFpbmVycmVnaXN0",
            "cnkudjEaIHlhbmRleC9jbG91ZC9hcGkvb3BlcmF0aW9uLnByb3RvGiB5YW5k",
            "ZXgvY2xvdWQvYWNjZXNzL2FjY2Vzcy5wcm90bxoyeWFuZGV4L2Nsb3VkL2Nv",
            "bnRhaW5lcnJlZ2lzdHJ5L3YxL3JlcG9zaXRvcnkucHJvdG8aJnlhbmRleC9j",
            "bG91ZC9vcGVyYXRpb24vb3BlcmF0aW9uLnByb3RvGh15YW5kZXgvY2xvdWQv",
            "dmFsaWRhdGlvbi5wcm90bxocZ29vZ2xlL2FwaS9hbm5vdGF0aW9ucy5wcm90",
            "byI7ChRHZXRSZXBvc2l0b3J5UmVxdWVzdBIjCg1yZXBvc2l0b3J5X2lkGAEg",
            "ASgJQgzoxzEBisgxBDw9NTAifQoaR2V0UmVwb3NpdG9yeUJ5TmFtZVJlcXVl",
            "c3QSXwoPcmVwb3NpdG9yeV9uYW1lGAEgASgJQkboxzEB8scxPlthLXowLTld",
            "Kyg/OlsuXy1dW2EtejAtOV0rKSooLyhbYS16MC05XSsoPzpbLl8tXVthLXow",
            "LTldKykqKSkqIswBChdMaXN0UmVwb3NpdG9yaWVzUmVxdWVzdBIdCgtyZWdp",
            "c3RyeV9pZBgBIAEoCUIIisgxBDw9NTASGwoJZm9sZGVyX2lkGAYgASgJQgiK",
            "yDEEPD01MBIdCglwYWdlX3NpemUYAiABKANCCvrHMQY8PTEwMDASHQoKcGFn",
            "ZV90b2tlbhgDIAEoCUIJisgxBTw9MTAwEhoKBmZpbHRlchgEIAEoCUIKisgx",
            "Bjw9MTAwMBIbCghvcmRlcl9ieRgFIAEoCUIJisgxBTw9MTAwIngKGExpc3RS",
            "ZXBvc2l0b3JpZXNSZXNwb25zZRJDCgxyZXBvc2l0b3JpZXMYASADKAsyLS55",
            "YW5kZXguY2xvdWQuY29udGFpbmVycmVnaXN0cnkudjEuUmVwb3NpdG9yeRIX",
            "Cg9uZXh0X3BhZ2VfdG9rZW4YAiABKAkyqAkKEVJlcG9zaXRvcnlTZXJ2aWNl",
            "EqoBCgNHZXQSNy55YW5kZXguY2xvdWQuY29udGFpbmVycmVnaXN0cnkudjEu",
            "R2V0UmVwb3NpdG9yeVJlcXVlc3QaLS55YW5kZXguY2xvdWQuY29udGFpbmVy",
            "cmVnaXN0cnkudjEuUmVwb3NpdG9yeSI7gtPkkwI1EjMvY29udGFpbmVyLXJl",
            "Z2lzdHJ5L3YxL3JlcG9zaXRvcmllcy97cmVwb3NpdG9yeV9pZH0SeQoJR2V0",
            "QnlOYW1lEj0ueWFuZGV4LmNsb3VkLmNvbnRhaW5lcnJlZ2lzdHJ5LnYxLkdl",
            "dFJlcG9zaXRvcnlCeU5hbWVSZXF1ZXN0Gi0ueWFuZGV4LmNsb3VkLmNvbnRh",
            "aW5lcnJlZ2lzdHJ5LnYxLlJlcG9zaXRvcnkSrAEKBExpc3QSOi55YW5kZXgu",
            "Y2xvdWQuY29udGFpbmVycmVnaXN0cnkudjEuTGlzdFJlcG9zaXRvcmllc1Jl",
            "cXVlc3QaOy55YW5kZXguY2xvdWQuY29udGFpbmVycmVnaXN0cnkudjEuTGlz",
            "dFJlcG9zaXRvcmllc1Jlc3BvbnNlIiuC0+STAiUSIy9jb250YWluZXItcmVn",
            "aXN0cnkvdjEvcmVwb3NpdG9yaWVzEsMBChJMaXN0QWNjZXNzQmluZGluZ3MS",
            "Li55YW5kZXguY2xvdWQuYWNjZXNzLkxpc3RBY2Nlc3NCaW5kaW5nc1JlcXVl",
            "c3QaLy55YW5kZXguY2xvdWQuYWNjZXNzLkxpc3RBY2Nlc3NCaW5kaW5nc1Jl",
            "c3BvbnNlIkyC0+STAkYSRC9jb250YWluZXItcmVnaXN0cnkvdjEvcmVwb3Np",
            "dG9yaWVzL3tyZXNvdXJjZV9pZH06bGlzdEFjY2Vzc0JpbmRpbmdzEvMBChFT",
            "ZXRBY2Nlc3NCaW5kaW5ncxItLnlhbmRleC5jbG91ZC5hY2Nlc3MuU2V0QWNj",
            "ZXNzQmluZGluZ3NSZXF1ZXN0GiEueWFuZGV4LmNsb3VkLm9wZXJhdGlvbi5P",
            "cGVyYXRpb24iiwGC0+STAkgiQy9jb250YWluZXItcmVnaXN0cnkvdjEvcmVw",
            "b3NpdG9yaWVzL3tyZXNvdXJjZV9pZH06c2V0QWNjZXNzQmluZGluZ3M6ASqy",
            "0io5CiBhY2Nlc3MuU2V0QWNjZXNzQmluZGluZ3NNZXRhZGF0YRIVZ29vZ2xl",
            "LnByb3RvYnVmLkVtcHR5Ev8BChRVcGRhdGVBY2Nlc3NCaW5kaW5ncxIwLnlh",
            "bmRleC5jbG91ZC5hY2Nlc3MuVXBkYXRlQWNjZXNzQmluZGluZ3NSZXF1ZXN0",
            "GiEueWFuZGV4LmNsb3VkLm9wZXJhdGlvbi5PcGVyYXRpb24ikQGC0+STAksi",
            "Ri9jb250YWluZXItcmVnaXN0cnkvdjEvcmVwb3NpdG9yaWVzL3tyZXNvdXJj",
            "ZV9pZH06dXBkYXRlQWNjZXNzQmluZGluZ3M6ASqy0io8CiNhY2Nlc3MuVXBk",
            "YXRlQWNjZXNzQmluZGluZ3NNZXRhZGF0YRIVZ29vZ2xlLnByb3RvYnVmLkVt",
            "cHR5QoABCiV5YW5kZXguY2xvdWQuYXBpLmNvbnRhaW5lcnJlZ2lzdHJ5LnYx",
            "WldnaXRodWIuY29tL3lhbmRleC1jbG91ZC9nby1nZW5wcm90by95YW5kZXgv",
            "Y2xvdWQvY29udGFpbmVycmVnaXN0cnkvdjE7Y29udGFpbmVycmVnaXN0cnli",
            "BnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Yandex.Cloud.Api.OperationReflection.Descriptor, global::Yandex.Cloud.Access.AccessReflection.Descriptor, global::Yandex.Cloud.Containerregistry.V1.RepositoryReflection.Descriptor, global::Yandex.Cloud.Operation.OperationReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.GetRepositoryRequest), global::Yandex.Cloud.Containerregistry.V1.GetRepositoryRequest.Parser, new[]{ "RepositoryId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.GetRepositoryByNameRequest), global::Yandex.Cloud.Containerregistry.V1.GetRepositoryByNameRequest.Parser, new[]{ "RepositoryName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.ListRepositoriesRequest), global::Yandex.Cloud.Containerregistry.V1.ListRepositoriesRequest.Parser, new[]{ "RegistryId", "FolderId", "PageSize", "PageToken", "Filter", "OrderBy" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Containerregistry.V1.ListRepositoriesResponse), global::Yandex.Cloud.Containerregistry.V1.ListRepositoriesResponse.Parser, new[]{ "Repositories", "NextPageToken" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class GetRepositoryRequest : pb::IMessage<GetRepositoryRequest> {
    private static readonly pb::MessageParser<GetRepositoryRequest> _parser = new pb::MessageParser<GetRepositoryRequest>(() => new GetRepositoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRepositoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.RepositoryServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRepositoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRepositoryRequest(GetRepositoryRequest other) : this() {
      repositoryId_ = other.repositoryId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRepositoryRequest Clone() {
      return new GetRepositoryRequest(this);
    }

    /// <summary>Field number for the "repository_id" field.</summary>
    public const int RepositoryIdFieldNumber = 1;
    private string repositoryId_ = "";
    /// <summary>
    /// ID of the Repository resource to return.
    ///
    /// To get the repository ID use a [RepositoryService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepositoryId {
      get { return repositoryId_; }
      set {
        repositoryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRepositoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRepositoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RepositoryId != other.RepositoryId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RepositoryId.Length != 0) hash ^= RepositoryId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RepositoryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RepositoryId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RepositoryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepositoryId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRepositoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.RepositoryId.Length != 0) {
        RepositoryId = other.RepositoryId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RepositoryId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetRepositoryByNameRequest : pb::IMessage<GetRepositoryByNameRequest> {
    private static readonly pb::MessageParser<GetRepositoryByNameRequest> _parser = new pb::MessageParser<GetRepositoryByNameRequest>(() => new GetRepositoryByNameRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetRepositoryByNameRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.RepositoryServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRepositoryByNameRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRepositoryByNameRequest(GetRepositoryByNameRequest other) : this() {
      repositoryName_ = other.repositoryName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetRepositoryByNameRequest Clone() {
      return new GetRepositoryByNameRequest(this);
    }

    /// <summary>Field number for the "repository_name" field.</summary>
    public const int RepositoryNameFieldNumber = 1;
    private string repositoryName_ = "";
    /// <summary>
    /// Name of the Repository resource to return.
    ///
    /// To get the repository name use a [RepositoryService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RepositoryName {
      get { return repositoryName_; }
      set {
        repositoryName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetRepositoryByNameRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetRepositoryByNameRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RepositoryName != other.RepositoryName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RepositoryName.Length != 0) hash ^= RepositoryName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RepositoryName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RepositoryName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RepositoryName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RepositoryName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetRepositoryByNameRequest other) {
      if (other == null) {
        return;
      }
      if (other.RepositoryName.Length != 0) {
        RepositoryName = other.RepositoryName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RepositoryName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListRepositoriesRequest : pb::IMessage<ListRepositoriesRequest> {
    private static readonly pb::MessageParser<ListRepositoriesRequest> _parser = new pb::MessageParser<ListRepositoriesRequest>(() => new ListRepositoriesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRepositoriesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.RepositoryServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRepositoriesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRepositoriesRequest(ListRepositoriesRequest other) : this() {
      registryId_ = other.registryId_;
      folderId_ = other.folderId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      orderBy_ = other.orderBy_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRepositoriesRequest Clone() {
      return new ListRepositoriesRequest(this);
    }

    /// <summary>Field number for the "registry_id" field.</summary>
    public const int RegistryIdFieldNumber = 1;
    private string registryId_ = "";
    /// <summary>
    /// ID of the registry to list repositories in.
    ///
    /// To get the registry ID use a [RegistryService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegistryId {
      get { return registryId_; }
      set {
        registryId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 6;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder to list registries in.
    ///
    /// [folder_id] is ignored if a [ListImagesRequest.registry_id] is specified in the request.
    ///
    /// To get the folder ID use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available
    /// results is larger than [page_size],
    /// the service returns a [ListRepositoriesResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// Default value: 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set [page_token] to the
    /// [ListRepositoriesResponse.next_page_token] returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// A filter expression that filters resources listed in the response.
    /// The expression must specify:
    /// 1. The field name. Currently you can use filtering only on [Repository.name] field.
    /// 2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
    /// 3. Value or a list of values to compare against the values of the field.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "order_by" field.</summary>
    public const int OrderByFieldNumber = 5;
    private string orderBy_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string OrderBy {
      get { return orderBy_; }
      set {
        orderBy_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRepositoriesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRepositoriesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RegistryId != other.RegistryId) return false;
      if (FolderId != other.FolderId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (OrderBy != other.OrderBy) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RegistryId.Length != 0) hash ^= RegistryId.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (OrderBy.Length != 0) hash ^= OrderBy.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RegistryId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RegistryId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (OrderBy.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(OrderBy);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(FolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RegistryId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegistryId);
      }
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (OrderBy.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(OrderBy);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRepositoriesRequest other) {
      if (other == null) {
        return;
      }
      if (other.RegistryId.Length != 0) {
        RegistryId = other.RegistryId;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      if (other.OrderBy.Length != 0) {
        OrderBy = other.OrderBy;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RegistryId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
          case 42: {
            OrderBy = input.ReadString();
            break;
          }
          case 50: {
            FolderId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListRepositoriesResponse : pb::IMessage<ListRepositoriesResponse> {
    private static readonly pb::MessageParser<ListRepositoriesResponse> _parser = new pb::MessageParser<ListRepositoriesResponse>(() => new ListRepositoriesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRepositoriesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Containerregistry.V1.RepositoryServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRepositoriesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRepositoriesResponse(ListRepositoriesResponse other) : this() {
      repositories_ = other.repositories_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRepositoriesResponse Clone() {
      return new ListRepositoriesResponse(this);
    }

    /// <summary>Field number for the "repositories" field.</summary>
    public const int RepositoriesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Containerregistry.V1.Repository> _repeated_repositories_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Containerregistry.V1.Repository.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.Repository> repositories_ = new pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.Repository>();
    /// <summary>
    /// List of Repository resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Containerregistry.V1.Repository> Repositories {
      get { return repositories_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListRepositoriesRequest.page_size], use
    /// the [next_page_token] as the value
    /// for the [ListRepositoriesRequest.page_token] query parameter
    /// in the next list request. Each subsequent list request will have its own
    /// [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRepositoriesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRepositoriesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!repositories_.Equals(other.repositories_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= repositories_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      repositories_.WriteTo(output, _repeated_repositories_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += repositories_.CalculateSize(_repeated_repositories_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRepositoriesResponse other) {
      if (other == null) {
        return;
      }
      repositories_.Add(other.repositories_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            repositories_.AddEntriesFrom(input, _repeated_repositories_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
