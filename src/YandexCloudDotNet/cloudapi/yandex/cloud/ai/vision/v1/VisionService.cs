// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/ai/vision/v1/vision_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Ai.Vision.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/ai/vision/v1/vision_service.proto</summary>
  internal static partial class VisionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/ai/vision/v1/vision_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static VisionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci55YW5kZXgvY2xvdWQvYWkvdmlzaW9uL3YxL3Zpc2lvbl9zZXJ2aWNlLnBy",
            "b3RvEhl5YW5kZXguY2xvdWQuYWkudmlzaW9uLnYxGi55YW5kZXgvY2xvdWQv",
            "YWkvdmlzaW9uL3YxL3RleHRfZGV0ZWN0aW9uLnByb3RvGi55YW5kZXgvY2xv",
            "dWQvYWkvdmlzaW9uL3YxL2NsYXNzaWZpY2F0aW9uLnByb3RvGi55YW5kZXgv",
            "Y2xvdWQvYWkvdmlzaW9uL3YxL2ZhY2VfZGV0ZWN0aW9uLnByb3RvGjF5YW5k",
            "ZXgvY2xvdWQvYWkvdmlzaW9uL3YxL2ltYWdlX2NvcHlfc2VhcmNoLnByb3Rv",
            "Gh15YW5kZXgvY2xvdWQvdmFsaWRhdGlvbi5wcm90bxocZ29vZ2xlL2FwaS9h",
            "bm5vdGF0aW9ucy5wcm90bxoXZ29vZ2xlL3JwYy9zdGF0dXMucHJvdG8iegoT",
            "QmF0Y2hBbmFseXplUmVxdWVzdBJGCg1hbmFseXplX3NwZWNzGAEgAygLMiYu",
            "eWFuZGV4LmNsb3VkLmFpLnZpc2lvbi52MS5BbmFseXplU3BlY0IHgsgxAzEt",
            "OBIbCglmb2xkZXJfaWQYAiABKAlCCIrIMQQ8PTUwIr8BCgtBbmFseXplU3Bl",
            "YxIhCgdjb250ZW50GAEgASgMQg6KyDEKPD0xMDQ4NTc2MEgAEiAKCXNpZ25h",
            "dHVyZRgFIAEoCUILisgxBzw9MTYzODRIABI9CghmZWF0dXJlcxgDIAMoCzIi",
            "LnlhbmRleC5jbG91ZC5haS52aXNpb24udjEuRmVhdHVyZUIHgsgxAzEtOBIc",
            "CgltaW1lX3R5cGUYBCABKAlCCYrIMQU8PTI1NUIOCgZzb3VyY2USBMDBMQEi",
            "7AIKB0ZlYXR1cmUSNQoEdHlwZRgBIAEoDjInLnlhbmRleC5jbG91ZC5haS52",
            "aXNpb24udjEuRmVhdHVyZS5UeXBlElcKFWNsYXNzaWZpY2F0aW9uX2NvbmZp",
            "ZxgCIAEoCzI2LnlhbmRleC5jbG91ZC5haS52aXNpb24udjEuRmVhdHVyZUNs",
            "YXNzaWZpY2F0aW9uQ29uZmlnSAASVgoVdGV4dF9kZXRlY3Rpb25fY29uZmln",
            "GAMgASgLMjUueWFuZGV4LmNsb3VkLmFpLnZpc2lvbi52MS5GZWF0dXJlVGV4",
            "dERldGVjdGlvbkNvbmZpZ0gAIm8KBFR5cGUSFAoQVFlQRV9VTlNQRUNJRklF",
            "RBAAEhIKDlRFWFRfREVURUNUSU9OEAESEgoOQ0xBU1NJRklDQVRJT04QAhIS",
            "Cg5GQUNFX0RFVEVDVElPThADEhUKEUlNQUdFX0NPUFlfU0VBUkNIEARCCAoG",
            "Y29uZmlnIjcKG0ZlYXR1cmVDbGFzc2lmaWNhdGlvbkNvbmZpZxIYCgVtb2Rl",
            "bBgBIAEoCUIJisgxBTw9MjU2Il0KGkZlYXR1cmVUZXh0RGV0ZWN0aW9uQ29u",
            "ZmlnEiYKDmxhbmd1YWdlX2NvZGVzGAEgAygJQg6CyDEDMS04isgxAzw9MxIX",
            "CgVtb2RlbBgCIAEoCUIIisgxBDw9NTAiUQoUQmF0Y2hBbmFseXplUmVzcG9u",
            "c2USOQoHcmVzdWx0cxgBIAMoCzIoLnlhbmRleC5jbG91ZC5haS52aXNpb24u",
            "djEuQW5hbHl6ZVJlc3VsdCJtCg1BbmFseXplUmVzdWx0EjkKB3Jlc3VsdHMY",
            "AiADKAsyKC55YW5kZXguY2xvdWQuYWkudmlzaW9uLnYxLkZlYXR1cmVSZXN1",
            "bHQSIQoFZXJyb3IYASABKAsyEi5nb29nbGUucnBjLlN0YXR1cyLgAgoNRmVh",
            "dHVyZVJlc3VsdBJDCg50ZXh0X2RldGVjdGlvbhgCIAEoCzIpLnlhbmRleC5j",
            "bG91ZC5haS52aXNpb24udjEuVGV4dEFubm90YXRpb25IABJECg5jbGFzc2lm",
            "aWNhdGlvbhgDIAEoCzIqLnlhbmRleC5jbG91ZC5haS52aXNpb24udjEuQ2xh",
            "c3NBbm5vdGF0aW9uSAASQwoOZmFjZV9kZXRlY3Rpb24YBCABKAsyKS55YW5k",
            "ZXguY2xvdWQuYWkudmlzaW9uLnYxLkZhY2VBbm5vdGF0aW9uSAASUQoRaW1h",
            "Z2VfY29weV9zZWFyY2gYBSABKAsyNC55YW5kZXguY2xvdWQuYWkudmlzaW9u",
            "LnYxLkltYWdlQ29weVNlYXJjaEFubm90YXRpb25IABIhCgVlcnJvchgBIAEo",
            "CzISLmdvb2dsZS5ycGMuU3RhdHVzQgkKB2ZlYXR1cmUypQEKDVZpc2lvblNl",
            "cnZpY2USkwEKDEJhdGNoQW5hbHl6ZRIuLnlhbmRleC5jbG91ZC5haS52aXNp",
            "b24udjEuQmF0Y2hBbmFseXplUmVxdWVzdBovLnlhbmRleC5jbG91ZC5haS52",
            "aXNpb24udjEuQmF0Y2hBbmFseXplUmVzcG9uc2UiIoLT5JMCHCIXL3Zpc2lv",
            "bi92MS9iYXRjaEFuYWx5emU6ASpCZQodeWFuZGV4LmNsb3VkLmFwaS5haS52",
            "aXNpb24udjFaRGdpdGh1Yi5jb20veWFuZGV4LWNsb3VkL2dvLWdlbnByb3Rv",
            "L3lhbmRleC9jbG91ZC9haS92aXNpb24vdjE7dmlzaW9uYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Yandex.Cloud.Ai.Vision.V1.TextDetectionReflection.Descriptor, global::Yandex.Cloud.Ai.Vision.V1.ClassificationReflection.Descriptor, global::Yandex.Cloud.Ai.Vision.V1.FaceDetectionReflection.Descriptor, global::Yandex.Cloud.Ai.Vision.V1.ImageCopySearchReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Rpc.StatusReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Ai.Vision.V1.BatchAnalyzeRequest), global::Yandex.Cloud.Ai.Vision.V1.BatchAnalyzeRequest.Parser, new[]{ "AnalyzeSpecs", "FolderId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Ai.Vision.V1.AnalyzeSpec), global::Yandex.Cloud.Ai.Vision.V1.AnalyzeSpec.Parser, new[]{ "Content", "Signature", "Features", "MimeType" }, new[]{ "Source" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Ai.Vision.V1.Feature), global::Yandex.Cloud.Ai.Vision.V1.Feature.Parser, new[]{ "Type", "ClassificationConfig", "TextDetectionConfig" }, new[]{ "Config" }, new[]{ typeof(global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type) }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Ai.Vision.V1.FeatureClassificationConfig), global::Yandex.Cloud.Ai.Vision.V1.FeatureClassificationConfig.Parser, new[]{ "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Ai.Vision.V1.FeatureTextDetectionConfig), global::Yandex.Cloud.Ai.Vision.V1.FeatureTextDetectionConfig.Parser, new[]{ "LanguageCodes", "Model" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Ai.Vision.V1.BatchAnalyzeResponse), global::Yandex.Cloud.Ai.Vision.V1.BatchAnalyzeResponse.Parser, new[]{ "Results" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Ai.Vision.V1.AnalyzeResult), global::Yandex.Cloud.Ai.Vision.V1.AnalyzeResult.Parser, new[]{ "Results", "Error" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Ai.Vision.V1.FeatureResult), global::Yandex.Cloud.Ai.Vision.V1.FeatureResult.Parser, new[]{ "TextDetection", "Classification", "FaceDetection", "ImageCopySearch", "Error" }, new[]{ "Feature" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class BatchAnalyzeRequest : pb::IMessage<BatchAnalyzeRequest> {
    private static readonly pb::MessageParser<BatchAnalyzeRequest> _parser = new pb::MessageParser<BatchAnalyzeRequest>(() => new BatchAnalyzeRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchAnalyzeRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Ai.Vision.V1.VisionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchAnalyzeRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchAnalyzeRequest(BatchAnalyzeRequest other) : this() {
      analyzeSpecs_ = other.analyzeSpecs_.Clone();
      folderId_ = other.folderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchAnalyzeRequest Clone() {
      return new BatchAnalyzeRequest(this);
    }

    /// <summary>Field number for the "analyze_specs" field.</summary>
    public const int AnalyzeSpecsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Ai.Vision.V1.AnalyzeSpec> _repeated_analyzeSpecs_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Ai.Vision.V1.AnalyzeSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.AnalyzeSpec> analyzeSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.AnalyzeSpec>();
    /// <summary>
    /// A list of specifications. Each specification contains the file to analyze and features to use for analysis.
    ///
    /// Restrictions:
    /// * Supported file formats: JPEG, PNG.
    /// * Maximum file size: 1 MB.
    /// * Image size should not exceed 20M pixels (length x width).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.AnalyzeSpec> AnalyzeSpecs {
      get { return analyzeSpecs_; }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder to which you have access.
    /// Required for authorization with a user account (see [yandex.cloud.iam.v1.UserAccount] resource).
    /// Don't specify this field if you make the request on behalf of a service account.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchAnalyzeRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchAnalyzeRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!analyzeSpecs_.Equals(other.analyzeSpecs_)) return false;
      if (FolderId != other.FolderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= analyzeSpecs_.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      analyzeSpecs_.WriteTo(output, _repeated_analyzeSpecs_codec);
      if (FolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += analyzeSpecs_.CalculateSize(_repeated_analyzeSpecs_codec);
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchAnalyzeRequest other) {
      if (other == null) {
        return;
      }
      analyzeSpecs_.Add(other.analyzeSpecs_);
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            analyzeSpecs_.AddEntriesFrom(input, _repeated_analyzeSpecs_codec);
            break;
          }
          case 18: {
            FolderId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AnalyzeSpec : pb::IMessage<AnalyzeSpec> {
    private static readonly pb::MessageParser<AnalyzeSpec> _parser = new pb::MessageParser<AnalyzeSpec>(() => new AnalyzeSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnalyzeSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Ai.Vision.V1.VisionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeSpec(AnalyzeSpec other) : this() {
      features_ = other.features_.Clone();
      mimeType_ = other.mimeType_;
      switch (other.SourceCase) {
        case SourceOneofCase.Content:
          Content = other.Content;
          break;
        case SourceOneofCase.Signature:
          Signature = other.Signature;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeSpec Clone() {
      return new AnalyzeSpec(this);
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 1;
    /// <summary>
    /// Image content, represented as a stream of bytes.
    /// Note: As with all bytes fields, protobuffers use a pure binary representation, whereas JSON representations use base64.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return sourceCase_ == SourceOneofCase.Content ? (pb::ByteString) source_ : pb::ByteString.Empty; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.Content;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 5;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Signature {
      get { return sourceCase_ == SourceOneofCase.Signature ? (string) source_ : ""; }
      set {
        source_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        sourceCase_ = SourceOneofCase.Signature;
      }
    }

    /// <summary>Field number for the "features" field.</summary>
    public const int FeaturesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Ai.Vision.V1.Feature> _repeated_features_codec
        = pb::FieldCodec.ForMessage(26, global::Yandex.Cloud.Ai.Vision.V1.Feature.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.Feature> features_ = new pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.Feature>();
    /// <summary>
    /// Requested features to use for analysis.
    ///
    /// Max count of requested features for one file is 8.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.Feature> Features {
      get { return features_; }
    }

    /// <summary>Field number for the "mime_type" field.</summary>
    public const int MimeTypeFieldNumber = 4;
    private string mimeType_ = "";
    /// <summary>
    /// [MIME type](https://en.wikipedia.org/wiki/Media_type) of content (for example, `` application/pdf ``).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object source_;
    /// <summary>Enum of possible cases for the "source" oneof.</summary>
    public enum SourceOneofCase {
      None = 0,
      Content = 1,
      Signature = 5,
    }
    private SourceOneofCase sourceCase_ = SourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SourceOneofCase SourceCase {
      get { return sourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearSource() {
      sourceCase_ = SourceOneofCase.None;
      source_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnalyzeSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnalyzeSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Content != other.Content) return false;
      if (Signature != other.Signature) return false;
      if(!features_.Equals(other.features_)) return false;
      if (MimeType != other.MimeType) return false;
      if (SourceCase != other.SourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (sourceCase_ == SourceOneofCase.Content) hash ^= Content.GetHashCode();
      if (sourceCase_ == SourceOneofCase.Signature) hash ^= Signature.GetHashCode();
      hash ^= features_.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      hash ^= (int) sourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (sourceCase_ == SourceOneofCase.Content) {
        output.WriteRawTag(10);
        output.WriteBytes(Content);
      }
      features_.WriteTo(output, _repeated_features_codec);
      if (MimeType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MimeType);
      }
      if (sourceCase_ == SourceOneofCase.Signature) {
        output.WriteRawTag(42);
        output.WriteString(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (sourceCase_ == SourceOneofCase.Content) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      if (sourceCase_ == SourceOneofCase.Signature) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Signature);
      }
      size += features_.CalculateSize(_repeated_features_codec);
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnalyzeSpec other) {
      if (other == null) {
        return;
      }
      features_.Add(other.features_);
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      switch (other.SourceCase) {
        case SourceOneofCase.Content:
          Content = other.Content;
          break;
        case SourceOneofCase.Signature:
          Signature = other.Signature;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Content = input.ReadBytes();
            break;
          }
          case 26: {
            features_.AddEntriesFrom(input, _repeated_features_codec);
            break;
          }
          case 34: {
            MimeType = input.ReadString();
            break;
          }
          case 42: {
            Signature = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Feature : pb::IMessage<Feature> {
    private static readonly pb::MessageParser<Feature> _parser = new pb::MessageParser<Feature>(() => new Feature());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Feature> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Ai.Vision.V1.VisionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature(Feature other) : this() {
      type_ = other.type_;
      switch (other.ConfigCase) {
        case ConfigOneofCase.ClassificationConfig:
          ClassificationConfig = other.ClassificationConfig.Clone();
          break;
        case ConfigOneofCase.TextDetectionConfig:
          TextDetectionConfig = other.TextDetectionConfig.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Feature Clone() {
      return new Feature(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type type_ = global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type.Unspecified;
    /// <summary>
    /// Type of requested feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "classification_config" field.</summary>
    public const int ClassificationConfigFieldNumber = 2;
    /// <summary>
    /// Required for the `CLASSIFICATION` type. Specifies configuration for the classification feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Ai.Vision.V1.FeatureClassificationConfig ClassificationConfig {
      get { return configCase_ == ConfigOneofCase.ClassificationConfig ? (global::Yandex.Cloud.Ai.Vision.V1.FeatureClassificationConfig) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.ClassificationConfig;
      }
    }

    /// <summary>Field number for the "text_detection_config" field.</summary>
    public const int TextDetectionConfigFieldNumber = 3;
    /// <summary>
    /// Required for the `TEXT_DETECTION` type. Specifies configuration for the text detection (OCR) feature.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Ai.Vision.V1.FeatureTextDetectionConfig TextDetectionConfig {
      get { return configCase_ == ConfigOneofCase.TextDetectionConfig ? (global::Yandex.Cloud.Ai.Vision.V1.FeatureTextDetectionConfig) config_ : null; }
      set {
        config_ = value;
        configCase_ = value == null ? ConfigOneofCase.None : ConfigOneofCase.TextDetectionConfig;
      }
    }

    private object config_;
    /// <summary>Enum of possible cases for the "config" oneof.</summary>
    public enum ConfigOneofCase {
      None = 0,
      ClassificationConfig = 2,
      TextDetectionConfig = 3,
    }
    private ConfigOneofCase configCase_ = ConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigOneofCase ConfigCase {
      get { return configCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearConfig() {
      configCase_ = ConfigOneofCase.None;
      config_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Feature);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Feature other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (!object.Equals(ClassificationConfig, other.ClassificationConfig)) return false;
      if (!object.Equals(TextDetectionConfig, other.TextDetectionConfig)) return false;
      if (ConfigCase != other.ConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type.Unspecified) hash ^= Type.GetHashCode();
      if (configCase_ == ConfigOneofCase.ClassificationConfig) hash ^= ClassificationConfig.GetHashCode();
      if (configCase_ == ConfigOneofCase.TextDetectionConfig) hash ^= TextDetectionConfig.GetHashCode();
      hash ^= (int) configCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (configCase_ == ConfigOneofCase.ClassificationConfig) {
        output.WriteRawTag(18);
        output.WriteMessage(ClassificationConfig);
      }
      if (configCase_ == ConfigOneofCase.TextDetectionConfig) {
        output.WriteRawTag(26);
        output.WriteMessage(TextDetectionConfig);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (configCase_ == ConfigOneofCase.ClassificationConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClassificationConfig);
      }
      if (configCase_ == ConfigOneofCase.TextDetectionConfig) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextDetectionConfig);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Feature other) {
      if (other == null) {
        return;
      }
      if (other.Type != global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type.Unspecified) {
        Type = other.Type;
      }
      switch (other.ConfigCase) {
        case ConfigOneofCase.ClassificationConfig:
          if (ClassificationConfig == null) {
            ClassificationConfig = new global::Yandex.Cloud.Ai.Vision.V1.FeatureClassificationConfig();
          }
          ClassificationConfig.MergeFrom(other.ClassificationConfig);
          break;
        case ConfigOneofCase.TextDetectionConfig:
          if (TextDetectionConfig == null) {
            TextDetectionConfig = new global::Yandex.Cloud.Ai.Vision.V1.FeatureTextDetectionConfig();
          }
          TextDetectionConfig.MergeFrom(other.TextDetectionConfig);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Yandex.Cloud.Ai.Vision.V1.Feature.Types.Type) input.ReadEnum();
            break;
          }
          case 18: {
            global::Yandex.Cloud.Ai.Vision.V1.FeatureClassificationConfig subBuilder = new global::Yandex.Cloud.Ai.Vision.V1.FeatureClassificationConfig();
            if (configCase_ == ConfigOneofCase.ClassificationConfig) {
              subBuilder.MergeFrom(ClassificationConfig);
            }
            input.ReadMessage(subBuilder);
            ClassificationConfig = subBuilder;
            break;
          }
          case 26: {
            global::Yandex.Cloud.Ai.Vision.V1.FeatureTextDetectionConfig subBuilder = new global::Yandex.Cloud.Ai.Vision.V1.FeatureTextDetectionConfig();
            if (configCase_ == ConfigOneofCase.TextDetectionConfig) {
              subBuilder.MergeFrom(TextDetectionConfig);
            }
            input.ReadMessage(subBuilder);
            TextDetectionConfig = subBuilder;
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Feature message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Type {
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Text detection (OCR) feature.
        /// </summary>
        [pbr::OriginalName("TEXT_DETECTION")] TextDetection = 1,
        /// <summary>
        /// Classification feature.
        /// </summary>
        [pbr::OriginalName("CLASSIFICATION")] Classification = 2,
        /// <summary>
        /// Face detection feature.
        /// </summary>
        [pbr::OriginalName("FACE_DETECTION")] FaceDetection = 3,
        /// <summary>
        /// Image copy search.
        /// </summary>
        [pbr::OriginalName("IMAGE_COPY_SEARCH")] ImageCopySearch = 4,
      }

    }
    #endregion

  }

  internal sealed partial class FeatureClassificationConfig : pb::IMessage<FeatureClassificationConfig> {
    private static readonly pb::MessageParser<FeatureClassificationConfig> _parser = new pb::MessageParser<FeatureClassificationConfig>(() => new FeatureClassificationConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureClassificationConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Ai.Vision.V1.VisionServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureClassificationConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureClassificationConfig(FeatureClassificationConfig other) : this() {
      model_ = other.model_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureClassificationConfig Clone() {
      return new FeatureClassificationConfig(this);
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 1;
    private string model_ = "";
    /// <summary>
    /// Model to use for image classification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureClassificationConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureClassificationConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Model != other.Model) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Model.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureClassificationConfig other) {
      if (other == null) {
        return;
      }
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Model = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class FeatureTextDetectionConfig : pb::IMessage<FeatureTextDetectionConfig> {
    private static readonly pb::MessageParser<FeatureTextDetectionConfig> _parser = new pb::MessageParser<FeatureTextDetectionConfig>(() => new FeatureTextDetectionConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureTextDetectionConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Ai.Vision.V1.VisionServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureTextDetectionConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureTextDetectionConfig(FeatureTextDetectionConfig other) : this() {
      languageCodes_ = other.languageCodes_.Clone();
      model_ = other.model_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureTextDetectionConfig Clone() {
      return new FeatureTextDetectionConfig(this);
    }

    /// <summary>Field number for the "language_codes" field.</summary>
    public const int LanguageCodesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_languageCodes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> languageCodes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of the languages to recognize text.
    /// Specified in [ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) format (for example, `` ru ``).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> LanguageCodes {
      get { return languageCodes_; }
    }

    /// <summary>Field number for the "model" field.</summary>
    public const int ModelFieldNumber = 2;
    private string model_ = "";
    /// <summary>
    /// Model to use for text detection.
    /// Possible values:
    /// * page (default) — this model is suitable for detecting multiple text entries in an image.
    /// * line — this model is suitable for cropped images with one line of text.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Model {
      get { return model_; }
      set {
        model_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureTextDetectionConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureTextDetectionConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!languageCodes_.Equals(other.languageCodes_)) return false;
      if (Model != other.Model) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= languageCodes_.GetHashCode();
      if (Model.Length != 0) hash ^= Model.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      languageCodes_.WriteTo(output, _repeated_languageCodes_codec);
      if (Model.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Model);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += languageCodes_.CalculateSize(_repeated_languageCodes_codec);
      if (Model.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Model);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureTextDetectionConfig other) {
      if (other == null) {
        return;
      }
      languageCodes_.Add(other.languageCodes_);
      if (other.Model.Length != 0) {
        Model = other.Model;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            languageCodes_.AddEntriesFrom(input, _repeated_languageCodes_codec);
            break;
          }
          case 18: {
            Model = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class BatchAnalyzeResponse : pb::IMessage<BatchAnalyzeResponse> {
    private static readonly pb::MessageParser<BatchAnalyzeResponse> _parser = new pb::MessageParser<BatchAnalyzeResponse>(() => new BatchAnalyzeResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BatchAnalyzeResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Ai.Vision.V1.VisionServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchAnalyzeResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchAnalyzeResponse(BatchAnalyzeResponse other) : this() {
      results_ = other.results_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BatchAnalyzeResponse Clone() {
      return new BatchAnalyzeResponse(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Ai.Vision.V1.AnalyzeResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Ai.Vision.V1.AnalyzeResult.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.AnalyzeResult> results_ = new pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.AnalyzeResult>();
    /// <summary>
    /// Request results.
    /// Results have the same order as specifications in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.AnalyzeResult> Results {
      get { return results_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BatchAnalyzeResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BatchAnalyzeResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BatchAnalyzeResponse other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AnalyzeResult : pb::IMessage<AnalyzeResult> {
    private static readonly pb::MessageParser<AnalyzeResult> _parser = new pb::MessageParser<AnalyzeResult>(() => new AnalyzeResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AnalyzeResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Ai.Vision.V1.VisionServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeResult(AnalyzeResult other) : this() {
      results_ = other.results_.Clone();
      error_ = other.error_ != null ? other.error_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AnalyzeResult Clone() {
      return new AnalyzeResult(this);
    }

    /// <summary>Field number for the "results" field.</summary>
    public const int ResultsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Ai.Vision.V1.FeatureResult> _repeated_results_codec
        = pb::FieldCodec.ForMessage(18, global::Yandex.Cloud.Ai.Vision.V1.FeatureResult.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.FeatureResult> results_ = new pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.FeatureResult>();
    /// <summary>
    /// Results for each requested feature.
    /// Feature results have the same order as in the request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Ai.Vision.V1.FeatureResult> Results {
      get { return results_; }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// Return error in case of error with file processing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AnalyzeResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AnalyzeResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!results_.Equals(other.results_)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= results_.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      results_.WriteTo(output, _repeated_results_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += results_.CalculateSize(_repeated_results_codec);
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AnalyzeResult other) {
      if (other == null) {
        return;
      }
      results_.Add(other.results_);
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            results_.AddEntriesFrom(input, _repeated_results_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class FeatureResult : pb::IMessage<FeatureResult> {
    private static readonly pb::MessageParser<FeatureResult> _parser = new pb::MessageParser<FeatureResult>(() => new FeatureResult());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<FeatureResult> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Ai.Vision.V1.VisionServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureResult() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureResult(FeatureResult other) : this() {
      error_ = other.error_ != null ? other.error_.Clone() : null;
      switch (other.FeatureCase) {
        case FeatureOneofCase.TextDetection:
          TextDetection = other.TextDetection.Clone();
          break;
        case FeatureOneofCase.Classification:
          Classification = other.Classification.Clone();
          break;
        case FeatureOneofCase.FaceDetection:
          FaceDetection = other.FaceDetection.Clone();
          break;
        case FeatureOneofCase.ImageCopySearch:
          ImageCopySearch = other.ImageCopySearch.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureResult Clone() {
      return new FeatureResult(this);
    }

    /// <summary>Field number for the "text_detection" field.</summary>
    public const int TextDetectionFieldNumber = 2;
    /// <summary>
    /// Text detection (OCR) result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Ai.Vision.V1.TextAnnotation TextDetection {
      get { return featureCase_ == FeatureOneofCase.TextDetection ? (global::Yandex.Cloud.Ai.Vision.V1.TextAnnotation) feature_ : null; }
      set {
        feature_ = value;
        featureCase_ = value == null ? FeatureOneofCase.None : FeatureOneofCase.TextDetection;
      }
    }

    /// <summary>Field number for the "classification" field.</summary>
    public const int ClassificationFieldNumber = 3;
    /// <summary>
    /// Classification result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Ai.Vision.V1.ClassAnnotation Classification {
      get { return featureCase_ == FeatureOneofCase.Classification ? (global::Yandex.Cloud.Ai.Vision.V1.ClassAnnotation) feature_ : null; }
      set {
        feature_ = value;
        featureCase_ = value == null ? FeatureOneofCase.None : FeatureOneofCase.Classification;
      }
    }

    /// <summary>Field number for the "face_detection" field.</summary>
    public const int FaceDetectionFieldNumber = 4;
    /// <summary>
    /// Face detection result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Ai.Vision.V1.FaceAnnotation FaceDetection {
      get { return featureCase_ == FeatureOneofCase.FaceDetection ? (global::Yandex.Cloud.Ai.Vision.V1.FaceAnnotation) feature_ : null; }
      set {
        feature_ = value;
        featureCase_ = value == null ? FeatureOneofCase.None : FeatureOneofCase.FaceDetection;
      }
    }

    /// <summary>Field number for the "image_copy_search" field.</summary>
    public const int ImageCopySearchFieldNumber = 5;
    /// <summary>
    /// Image Copy Search result.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Ai.Vision.V1.ImageCopySearchAnnotation ImageCopySearch {
      get { return featureCase_ == FeatureOneofCase.ImageCopySearch ? (global::Yandex.Cloud.Ai.Vision.V1.ImageCopySearchAnnotation) feature_ : null; }
      set {
        feature_ = value;
        featureCase_ = value == null ? FeatureOneofCase.None : FeatureOneofCase.ImageCopySearch;
      }
    }

    /// <summary>Field number for the "error" field.</summary>
    public const int ErrorFieldNumber = 1;
    private global::Google.Rpc.Status error_;
    /// <summary>
    /// Return error in case of error during the specified feature processing.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Rpc.Status Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    private object feature_;
    /// <summary>Enum of possible cases for the "feature" oneof.</summary>
    public enum FeatureOneofCase {
      None = 0,
      TextDetection = 2,
      Classification = 3,
      FaceDetection = 4,
      ImageCopySearch = 5,
    }
    private FeatureOneofCase featureCase_ = FeatureOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public FeatureOneofCase FeatureCase {
      get { return featureCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearFeature() {
      featureCase_ = FeatureOneofCase.None;
      feature_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as FeatureResult);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(FeatureResult other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(TextDetection, other.TextDetection)) return false;
      if (!object.Equals(Classification, other.Classification)) return false;
      if (!object.Equals(FaceDetection, other.FaceDetection)) return false;
      if (!object.Equals(ImageCopySearch, other.ImageCopySearch)) return false;
      if (!object.Equals(Error, other.Error)) return false;
      if (FeatureCase != other.FeatureCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (featureCase_ == FeatureOneofCase.TextDetection) hash ^= TextDetection.GetHashCode();
      if (featureCase_ == FeatureOneofCase.Classification) hash ^= Classification.GetHashCode();
      if (featureCase_ == FeatureOneofCase.FaceDetection) hash ^= FaceDetection.GetHashCode();
      if (featureCase_ == FeatureOneofCase.ImageCopySearch) hash ^= ImageCopySearch.GetHashCode();
      if (error_ != null) hash ^= Error.GetHashCode();
      hash ^= (int) featureCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (error_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Error);
      }
      if (featureCase_ == FeatureOneofCase.TextDetection) {
        output.WriteRawTag(18);
        output.WriteMessage(TextDetection);
      }
      if (featureCase_ == FeatureOneofCase.Classification) {
        output.WriteRawTag(26);
        output.WriteMessage(Classification);
      }
      if (featureCase_ == FeatureOneofCase.FaceDetection) {
        output.WriteRawTag(34);
        output.WriteMessage(FaceDetection);
      }
      if (featureCase_ == FeatureOneofCase.ImageCopySearch) {
        output.WriteRawTag(42);
        output.WriteMessage(ImageCopySearch);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (featureCase_ == FeatureOneofCase.TextDetection) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(TextDetection);
      }
      if (featureCase_ == FeatureOneofCase.Classification) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Classification);
      }
      if (featureCase_ == FeatureOneofCase.FaceDetection) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FaceDetection);
      }
      if (featureCase_ == FeatureOneofCase.ImageCopySearch) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ImageCopySearch);
      }
      if (error_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Error);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(FeatureResult other) {
      if (other == null) {
        return;
      }
      if (other.error_ != null) {
        if (error_ == null) {
          Error = new global::Google.Rpc.Status();
        }
        Error.MergeFrom(other.Error);
      }
      switch (other.FeatureCase) {
        case FeatureOneofCase.TextDetection:
          if (TextDetection == null) {
            TextDetection = new global::Yandex.Cloud.Ai.Vision.V1.TextAnnotation();
          }
          TextDetection.MergeFrom(other.TextDetection);
          break;
        case FeatureOneofCase.Classification:
          if (Classification == null) {
            Classification = new global::Yandex.Cloud.Ai.Vision.V1.ClassAnnotation();
          }
          Classification.MergeFrom(other.Classification);
          break;
        case FeatureOneofCase.FaceDetection:
          if (FaceDetection == null) {
            FaceDetection = new global::Yandex.Cloud.Ai.Vision.V1.FaceAnnotation();
          }
          FaceDetection.MergeFrom(other.FaceDetection);
          break;
        case FeatureOneofCase.ImageCopySearch:
          if (ImageCopySearch == null) {
            ImageCopySearch = new global::Yandex.Cloud.Ai.Vision.V1.ImageCopySearchAnnotation();
          }
          ImageCopySearch.MergeFrom(other.ImageCopySearch);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (error_ == null) {
              Error = new global::Google.Rpc.Status();
            }
            input.ReadMessage(Error);
            break;
          }
          case 18: {
            global::Yandex.Cloud.Ai.Vision.V1.TextAnnotation subBuilder = new global::Yandex.Cloud.Ai.Vision.V1.TextAnnotation();
            if (featureCase_ == FeatureOneofCase.TextDetection) {
              subBuilder.MergeFrom(TextDetection);
            }
            input.ReadMessage(subBuilder);
            TextDetection = subBuilder;
            break;
          }
          case 26: {
            global::Yandex.Cloud.Ai.Vision.V1.ClassAnnotation subBuilder = new global::Yandex.Cloud.Ai.Vision.V1.ClassAnnotation();
            if (featureCase_ == FeatureOneofCase.Classification) {
              subBuilder.MergeFrom(Classification);
            }
            input.ReadMessage(subBuilder);
            Classification = subBuilder;
            break;
          }
          case 34: {
            global::Yandex.Cloud.Ai.Vision.V1.FaceAnnotation subBuilder = new global::Yandex.Cloud.Ai.Vision.V1.FaceAnnotation();
            if (featureCase_ == FeatureOneofCase.FaceDetection) {
              subBuilder.MergeFrom(FaceDetection);
            }
            input.ReadMessage(subBuilder);
            FaceDetection = subBuilder;
            break;
          }
          case 42: {
            global::Yandex.Cloud.Ai.Vision.V1.ImageCopySearchAnnotation subBuilder = new global::Yandex.Cloud.Ai.Vision.V1.ImageCopySearchAnnotation();
            if (featureCase_ == FeatureOneofCase.ImageCopySearch) {
              subBuilder.MergeFrom(ImageCopySearch);
            }
            input.ReadMessage(subBuilder);
            ImageCopySearch = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
