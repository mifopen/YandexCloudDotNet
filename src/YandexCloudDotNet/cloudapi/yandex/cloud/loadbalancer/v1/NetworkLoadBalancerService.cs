// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/loadbalancer/v1/network_load_balancer_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Loadbalancer.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/loadbalancer/v1/network_load_balancer_service.proto</summary>
  internal static partial class NetworkLoadBalancerServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/loadbalancer/v1/network_load_balancer_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static NetworkLoadBalancerServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CkB5YW5kZXgvY2xvdWQvbG9hZGJhbGFuY2VyL3YxL25ldHdvcmtfbG9hZF9i",
            "YWxhbmNlcl9zZXJ2aWNlLnByb3RvEhx5YW5kZXguY2xvdWQubG9hZGJhbGFu",
            "Y2VyLnYxGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGiBnb29nbGUv",
            "cHJvdG9idWYvZmllbGRfbWFzay5wcm90bxogeWFuZGV4L2Nsb3VkL2FwaS9v",
            "cGVyYXRpb24ucHJvdG8aHXlhbmRleC9jbG91ZC92YWxpZGF0aW9uLnByb3Rv",
            "GiZ5YW5kZXgvY2xvdWQvb3BlcmF0aW9uL29wZXJhdGlvbi5wcm90bxo4eWFu",
            "ZGV4L2Nsb3VkL2xvYWRiYWxhbmNlci92MS9uZXR3b3JrX2xvYWRfYmFsYW5j",
            "ZXIucHJvdG8iSwodR2V0TmV0d29ya0xvYWRCYWxhbmNlclJlcXVlc3QSKgoY",
            "bmV0d29ya19sb2FkX2JhbGFuY2VyX2lkGAEgASgJQgiKyDEEPD01MCKcAQof",
            "TGlzdE5ldHdvcmtMb2FkQmFsYW5jZXJzUmVxdWVzdBIfCglmb2xkZXJfaWQY",
            "ASABKAlCDOjHMQGKyDEEPD01MBIdCglwYWdlX3NpemUYAiABKANCCvrHMQY8",
            "PTEwMDASHQoKcGFnZV90b2tlbhgDIAEoCUIJisgxBTw9MTAwEhoKBmZpbHRl",
            "chgEIAEoCUIKisgxBjw9MTAwMCKOAQogTGlzdE5ldHdvcmtMb2FkQmFsYW5j",
            "ZXJzUmVzcG9uc2USUQoWbmV0d29ya19sb2FkX2JhbGFuY2VycxgBIAMoCzIx",
            "LnlhbmRleC5jbG91ZC5sb2FkYmFsYW5jZXIudjEuTmV0d29ya0xvYWRCYWxh",
            "bmNlchIXCg9uZXh0X3BhZ2VfdG9rZW4YAiABKAki+AQKIENyZWF0ZU5ldHdv",
            "cmtMb2FkQmFsYW5jZXJSZXF1ZXN0Eh8KCWZvbGRlcl9pZBgBIAEoCUIM6Mcx",
            "AYrIMQQ8PTUwEi8KBG5hbWUYAiABKAlCIfLHMR18W2Etel1bLWEtejAtOV17",
            "MSw2MX1bYS16MC05XRIeCgtkZXNjcmlwdGlvbhgDIAEoCUIJisgxBTw9MjU2",
            "EpsBCgZsYWJlbHMYBCADKAsySi55YW5kZXguY2xvdWQubG9hZGJhbGFuY2Vy",
            "LnYxLkNyZWF0ZU5ldHdvcmtMb2FkQmFsYW5jZXJSZXF1ZXN0LkxhYmVsc0Vu",
            "dHJ5Qj+CyDEEPD02NIrIMQQ8PTYz8scxC1stXzAtOWEtel0qssgxBhoEMS02",
            "M7LIMRISEFthLXpdWy1fMC05YS16XSoSHwoJcmVnaW9uX2lkGAUgASgJQgzo",
            "xzEBisgxBDw9NTASSgoEdHlwZRgGIAEoDjI2LnlhbmRleC5jbG91ZC5sb2Fk",
            "YmFsYW5jZXIudjEuTmV0d29ya0xvYWRCYWxhbmNlci5UeXBlQgToxzEBEkwK",
            "Dmxpc3RlbmVyX3NwZWNzGAcgAygLMioueWFuZGV4LmNsb3VkLmxvYWRiYWxh",
            "bmNlci52MS5MaXN0ZW5lclNwZWNCCILIMQQ8PTEwEloKFmF0dGFjaGVkX3Rh",
            "cmdldF9ncm91cHMYCCADKAsyMS55YW5kZXguY2xvdWQubG9hZGJhbGFuY2Vy",
            "LnYxLkF0dGFjaGVkVGFyZ2V0R3JvdXBCB4LIMQM8PTEaLQoLTGFiZWxzRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJFCiFDcmVhdGVO",
            "ZXR3b3JrTG9hZEJhbGFuY2VyTWV0YWRhdGESIAoYbmV0d29ya19sb2FkX2Jh",
            "bGFuY2VyX2lkGAEgASgJIssECiBVcGRhdGVOZXR3b3JrTG9hZEJhbGFuY2Vy",
            "UmVxdWVzdBIuChhuZXR3b3JrX2xvYWRfYmFsYW5jZXJfaWQYASABKAlCDOjH",
            "MQGKyDEEPD01MBIvCgt1cGRhdGVfbWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90",
            "b2J1Zi5GaWVsZE1hc2sSLwoEbmFtZRgDIAEoCUIh8scxHXxbYS16XVstYS16",
            "MC05XXsxLDYxfVthLXowLTldEh4KC2Rlc2NyaXB0aW9uGAQgASgJQgmKyDEF",
            "PD0yNTYSmwEKBmxhYmVscxgFIAMoCzJKLnlhbmRleC5jbG91ZC5sb2FkYmFs",
            "YW5jZXIudjEuVXBkYXRlTmV0d29ya0xvYWRCYWxhbmNlclJlcXVlc3QuTGFi",
            "ZWxzRW50cnlCP4LIMQQ8PTY0isgxBDw9NjPyxzELWy1fMC05YS16XSqyyDEG",
            "GgQxLTYzssgxEhIQW2Etel1bLV8wLTlhLXpdKhJMCg5saXN0ZW5lcl9zcGVj",
            "cxgGIAMoCzIqLnlhbmRleC5jbG91ZC5sb2FkYmFsYW5jZXIudjEuTGlzdGVu",
            "ZXJTcGVjQgiCyDEEPD0xMBJaChZhdHRhY2hlZF90YXJnZXRfZ3JvdXBzGAcg",
            "AygLMjEueWFuZGV4LmNsb3VkLmxvYWRiYWxhbmNlci52MS5BdHRhY2hlZFRh",
            "cmdldEdyb3VwQgeCyDEDPD0xGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEo",
            "CRINCgV2YWx1ZRgCIAEoCToCOAEiRQohVXBkYXRlTmV0d29ya0xvYWRCYWxh",
            "bmNlck1ldGFkYXRhEiAKGG5ldHdvcmtfbG9hZF9iYWxhbmNlcl9pZBgBIAEo",
            "CSJSCiBEZWxldGVOZXR3b3JrTG9hZEJhbGFuY2VyUmVxdWVzdBIuChhuZXR3",
            "b3JrX2xvYWRfYmFsYW5jZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MCJFCiFE",
            "ZWxldGVOZXR3b3JrTG9hZEJhbGFuY2VyTWV0YWRhdGESIAoYbmV0d29ya19s",
            "b2FkX2JhbGFuY2VyX2lkGAEgASgJIlEKH1N0YXJ0TmV0d29ya0xvYWRCYWxh",
            "bmNlclJlcXVlc3QSLgoYbmV0d29ya19sb2FkX2JhbGFuY2VyX2lkGAEgASgJ",
            "QgzoxzEBisgxBDw9NTAiRAogU3RhcnROZXR3b3JrTG9hZEJhbGFuY2VyTWV0",
            "YWRhdGESIAoYbmV0d29ya19sb2FkX2JhbGFuY2VyX2lkGAEgASgJIlAKHlN0",
            "b3BOZXR3b3JrTG9hZEJhbGFuY2VyUmVxdWVzdBIuChhuZXR3b3JrX2xvYWRf",
            "YmFsYW5jZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MCJDCh9TdG9wTmV0d29y",
            "a0xvYWRCYWxhbmNlck1ldGFkYXRhEiAKGG5ldHdvcmtfbG9hZF9iYWxhbmNl",
            "cl9pZBgBIAEoCSK1AQorQXR0YWNoTmV0d29ya0xvYWRCYWxhbmNlclRhcmdl",
            "dEdyb3VwUmVxdWVzdBIuChhuZXR3b3JrX2xvYWRfYmFsYW5jZXJfaWQYASAB",
            "KAlCDOjHMQGKyDEEPD01MBJWChVhdHRhY2hlZF90YXJnZXRfZ3JvdXAYAiAB",
            "KAsyMS55YW5kZXguY2xvdWQubG9hZGJhbGFuY2VyLnYxLkF0dGFjaGVkVGFy",
            "Z2V0R3JvdXBCBOjHMQEiaQosQXR0YWNoTmV0d29ya0xvYWRCYWxhbmNlclRh",
            "cmdldEdyb3VwTWV0YWRhdGESIAoYbmV0d29ya19sb2FkX2JhbGFuY2VyX2lk",
            "GAEgASgJEhcKD3RhcmdldF9ncm91cF9pZBgCIAEoCSKEAQorRGV0YWNoTmV0",
            "d29ya0xvYWRCYWxhbmNlclRhcmdldEdyb3VwUmVxdWVzdBIuChhuZXR3b3Jr",
            "X2xvYWRfYmFsYW5jZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MBIlCg90YXJn",
            "ZXRfZ3JvdXBfaWQYAiABKAlCDOjHMQGKyDEEPD01MCJpCixEZXRhY2hOZXR3",
            "b3JrTG9hZEJhbGFuY2VyVGFyZ2V0R3JvdXBNZXRhZGF0YRIgChhuZXR3b3Jr",
            "X2xvYWRfYmFsYW5jZXJfaWQYASABKAkSFwoPdGFyZ2V0X2dyb3VwX2lkGAIg",
            "ASgJIqABCiVBZGROZXR3b3JrTG9hZEJhbGFuY2VyTGlzdGVuZXJSZXF1ZXN0",
            "Ei4KGG5ldHdvcmtfbG9hZF9iYWxhbmNlcl9pZBgBIAEoCUIM6McxAYrIMQQ8",
            "PTUwEkcKDWxpc3RlbmVyX3NwZWMYAiABKAsyKi55YW5kZXguY2xvdWQubG9h",
            "ZGJhbGFuY2VyLnYxLkxpc3RlbmVyU3BlY0IE6McxASJKCiZBZGROZXR3b3Jr",
            "TG9hZEJhbGFuY2VyTGlzdGVuZXJNZXRhZGF0YRIgChhuZXR3b3JrX2xvYWRf",
            "YmFsYW5jZXJfaWQYASABKAkimAEKKFJlbW92ZU5ldHdvcmtMb2FkQmFsYW5j",
            "ZXJMaXN0ZW5lclJlcXVlc3QSLgoYbmV0d29ya19sb2FkX2JhbGFuY2VyX2lk",
            "GAEgASgJQgzoxzEBisgxBDw9NTASPAoNbGlzdGVuZXJfbmFtZRgCIAEoCUIl",
            "6McxAfLHMR18W2Etel1bLWEtejAtOV17MSw2MX1bYS16MC05XSJNCilSZW1v",
            "dmVOZXR3b3JrTG9hZEJhbGFuY2VyTGlzdGVuZXJNZXRhZGF0YRIgChhuZXR3",
            "b3JrX2xvYWRfYmFsYW5jZXJfaWQYASABKAkimAEKKExpc3ROZXR3b3JrTG9h",
            "ZEJhbGFuY2VyT3BlcmF0aW9uc1JlcXVlc3QSLgoYbmV0d29ya19sb2FkX2Jh",
            "bGFuY2VyX2lkGAEgASgJQgzoxzEBisgxBDw9NTASHQoJcGFnZV9zaXplGAIg",
            "ASgDQgr6xzEGPD0xMDAwEh0KCnBhZ2VfdG9rZW4YAyABKAlCCYrIMQU8PTEw",
            "MCJ7CilMaXN0TmV0d29ya0xvYWRCYWxhbmNlck9wZXJhdGlvbnNSZXNwb25z",
            "ZRI1CgpvcGVyYXRpb25zGAEgAygLMiEueWFuZGV4LmNsb3VkLm9wZXJhdGlv",
            "bi5PcGVyYXRpb24SFwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJImcKFkdldFRh",
            "cmdldFN0YXRlc1JlcXVlc3QSKgoYbmV0d29ya19sb2FkX2JhbGFuY2VyX2lk",
            "GAEgASgJQgiKyDEEPD01MBIhCg90YXJnZXRfZ3JvdXBfaWQYAiABKAlCCIrI",
            "MQQ8PTUwIlsKF0dldFRhcmdldFN0YXRlc1Jlc3BvbnNlEkAKDXRhcmdldF9z",
            "dGF0ZXMYASADKAsyKS55YW5kZXguY2xvdWQubG9hZGJhbGFuY2VyLnYxLlRh",
            "cmdldFN0YXRlImMKE0V4dGVybmFsQWRkcmVzc1NwZWMSDwoHYWRkcmVzcxgB",
            "IAEoCRI7CgppcF92ZXJzaW9uGAIgASgOMicueWFuZGV4LmNsb3VkLmxvYWRi",
            "YWxhbmNlci52MS5JcFZlcnNpb24imwIKDExpc3RlbmVyU3BlYxIzCgRuYW1l",
            "GAEgASgJQiXoxzEB8scxHXxbYS16XVstYS16MC05XXsxLDYxfVthLXowLTld",
            "EhkKBHBvcnQYAiABKANCC/rHMQcxLTMyNzY3EkcKCHByb3RvY29sGAMgASgO",
            "Mi8ueWFuZGV4LmNsb3VkLmxvYWRiYWxhbmNlci52MS5MaXN0ZW5lci5Qcm90",
            "b2NvbEIE6McxARJSChVleHRlcm5hbF9hZGRyZXNzX3NwZWMYBCABKAsyMS55",
            "YW5kZXguY2xvdWQubG9hZGJhbGFuY2VyLnYxLkV4dGVybmFsQWRkcmVzc1Nw",
            "ZWNIABITCgt0YXJnZXRfcG9ydBgFIAEoA0IJCgdhZGRyZXNzMrkZChpOZXR3",
            "b3JrTG9hZEJhbGFuY2VyU2VydmljZRLAAQoDR2V0EjsueWFuZGV4LmNsb3Vk",
            "LmxvYWRiYWxhbmNlci52MS5HZXROZXR3b3JrTG9hZEJhbGFuY2VyUmVxdWVz",
            "dBoxLnlhbmRleC5jbG91ZC5sb2FkYmFsYW5jZXIudjEuTmV0d29ya0xvYWRC",
            "YWxhbmNlciJJgtPkkwJDEkEvbG9hZC1iYWxhbmNlci92MS9uZXR3b3JrTG9h",
            "ZEJhbGFuY2Vycy97bmV0d29ya19sb2FkX2JhbGFuY2VyX2lkfRK1AQoETGlz",
            "dBI9LnlhbmRleC5jbG91ZC5sb2FkYmFsYW5jZXIudjEuTGlzdE5ldHdvcmtM",
            "b2FkQmFsYW5jZXJzUmVxdWVzdBo+LnlhbmRleC5jbG91ZC5sb2FkYmFsYW5j",
            "ZXIudjEuTGlzdE5ldHdvcmtMb2FkQmFsYW5jZXJzUmVzcG9uc2UiLoLT5JMC",
            "KBImL2xvYWQtYmFsYW5jZXIvdjEvbmV0d29ya0xvYWRCYWxhbmNlcnMS2gEK",
            "BkNyZWF0ZRI+LnlhbmRleC5jbG91ZC5sb2FkYmFsYW5jZXIudjEuQ3JlYXRl",
            "TmV0d29ya0xvYWRCYWxhbmNlclJlcXVlc3QaIS55YW5kZXguY2xvdWQub3Bl",
            "cmF0aW9uLk9wZXJhdGlvbiJtgtPkkwIrIiYvbG9hZC1iYWxhbmNlci92MS9u",
            "ZXR3b3JrTG9hZEJhbGFuY2VyczoBKrLSKjgKIUNyZWF0ZU5ldHdvcmtMb2Fk",
            "QmFsYW5jZXJNZXRhZGF0YRITTmV0d29ya0xvYWRCYWxhbmNlchL2AQoGVXBk",
            "YXRlEj4ueWFuZGV4LmNsb3VkLmxvYWRiYWxhbmNlci52MS5VcGRhdGVOZXR3",
            "b3JrTG9hZEJhbGFuY2VyUmVxdWVzdBohLnlhbmRleC5jbG91ZC5vcGVyYXRp",
            "b24uT3BlcmF0aW9uIogBgtPkkwJGMkEvbG9hZC1iYWxhbmNlci92MS9uZXR3",
            "b3JrTG9hZEJhbGFuY2Vycy97bmV0d29ya19sb2FkX2JhbGFuY2VyX2lkfToB",
            "KrLSKjgKIVVwZGF0ZU5ldHdvcmtMb2FkQmFsYW5jZXJNZXRhZGF0YRITTmV0",
            "d29ya0xvYWRCYWxhbmNlchL1AQoGRGVsZXRlEj4ueWFuZGV4LmNsb3VkLmxv",
            "YWRiYWxhbmNlci52MS5EZWxldGVOZXR3b3JrTG9hZEJhbGFuY2VyUmVxdWVz",
            "dBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uIocBgtPkkwJD",
            "KkEvbG9hZC1iYWxhbmNlci92MS9uZXR3b3JrTG9hZEJhbGFuY2Vycy97bmV0",
            "d29ya19sb2FkX2JhbGFuY2VyX2lkfbLSKjoKIURlbGV0ZU5ldHdvcmtMb2Fk",
            "QmFsYW5jZXJNZXRhZGF0YRIVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EvgBCgVT",
            "dGFydBI9LnlhbmRleC5jbG91ZC5sb2FkYmFsYW5jZXIudjEuU3RhcnROZXR3",
            "b3JrTG9hZEJhbGFuY2VyUmVxdWVzdBohLnlhbmRleC5jbG91ZC5vcGVyYXRp",
            "b24uT3BlcmF0aW9uIowBgtPkkwJJIkcvbG9hZC1iYWxhbmNlci92MS9uZXR3",
            "b3JrTG9hZEJhbGFuY2Vycy97bmV0d29ya19sb2FkX2JhbGFuY2VyX2lkfTpz",
            "dGFydLLSKjkKIFN0YXJ0TmV0d29ya0xvYWRCYWxhbmNlck1ldGFkYXRhEhVn",
            "b29nbGUucHJvdG9idWYuRW1wdHkS9AEKBFN0b3ASPC55YW5kZXguY2xvdWQu",
            "bG9hZGJhbGFuY2VyLnYxLlN0b3BOZXR3b3JrTG9hZEJhbGFuY2VyUmVxdWVz",
            "dBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uIooBgtPkkwJI",
            "IkYvbG9hZC1iYWxhbmNlci92MS9uZXR3b3JrTG9hZEJhbGFuY2Vycy97bmV0",
            "d29ya19sb2FkX2JhbGFuY2VyX2lkfTpzdG9wstIqOAofU3RvcE5ldHdvcmtM",
            "b2FkQmFsYW5jZXJNZXRhZGF0YRIVZ29vZ2xlLnByb3RvYnVmLkVtcHR5EqkC",
            "ChFBdHRhY2hUYXJnZXRHcm91cBJJLnlhbmRleC5jbG91ZC5sb2FkYmFsYW5j",
            "ZXIudjEuQXR0YWNoTmV0d29ya0xvYWRCYWxhbmNlclRhcmdldEdyb3VwUmVx",
            "dWVzdBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uIqUBgtPk",
            "kwJYIlMvbG9hZC1iYWxhbmNlci92MS9uZXR3b3JrTG9hZEJhbGFuY2Vycy97",
            "bmV0d29ya19sb2FkX2JhbGFuY2VyX2lkfTphdHRhY2hUYXJnZXRHcm91cDoB",
            "KrLSKkMKLEF0dGFjaE5ldHdvcmtMb2FkQmFsYW5jZXJUYXJnZXRHcm91cE1l",
            "dGFkYXRhEhNOZXR3b3JrTG9hZEJhbGFuY2VyEqkCChFEZXRhY2hUYXJnZXRH",
            "cm91cBJJLnlhbmRleC5jbG91ZC5sb2FkYmFsYW5jZXIudjEuRGV0YWNoTmV0",
            "d29ya0xvYWRCYWxhbmNlclRhcmdldEdyb3VwUmVxdWVzdBohLnlhbmRleC5j",
            "bG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uIqUBgtPkkwJYIlMvbG9hZC1iYWxh",
            "bmNlci92MS9uZXR3b3JrTG9hZEJhbGFuY2Vycy97bmV0d29ya19sb2FkX2Jh",
            "bGFuY2VyX2lkfTpkZXRhY2hUYXJnZXRHcm91cDoBKrLSKkMKLERldGFjaE5l",
            "dHdvcmtMb2FkQmFsYW5jZXJUYXJnZXRHcm91cE1ldGFkYXRhEhNOZXR3b3Jr",
            "TG9hZEJhbGFuY2VyEtkBCg9HZXRUYXJnZXRTdGF0ZXMSNC55YW5kZXguY2xv",
            "dWQubG9hZGJhbGFuY2VyLnYxLkdldFRhcmdldFN0YXRlc1JlcXVlc3QaNS55",
            "YW5kZXguY2xvdWQubG9hZGJhbGFuY2VyLnYxLkdldFRhcmdldFN0YXRlc1Jl",
            "c3BvbnNlIlmC0+STAlMSUS9sb2FkLWJhbGFuY2VyL3YxL25ldHdvcmtMb2Fk",
            "QmFsYW5jZXJzL3tuZXR3b3JrX2xvYWRfYmFsYW5jZXJfaWR9OmdldFRhcmdl",
            "dFN0YXRlcxKRAgoLQWRkTGlzdGVuZXISQy55YW5kZXguY2xvdWQubG9hZGJh",
            "bGFuY2VyLnYxLkFkZE5ldHdvcmtMb2FkQmFsYW5jZXJMaXN0ZW5lclJlcXVl",
            "c3QaIS55YW5kZXguY2xvdWQub3BlcmF0aW9uLk9wZXJhdGlvbiKZAYLT5JMC",
            "UiJNL2xvYWQtYmFsYW5jZXIvdjEvbmV0d29ya0xvYWRCYWxhbmNlcnMve25l",
            "dHdvcmtfbG9hZF9iYWxhbmNlcl9pZH06YWRkTGlzdGVuZXI6ASqy0io9CiZB",
            "ZGROZXR3b3JrTG9hZEJhbGFuY2VyTGlzdGVuZXJNZXRhZGF0YRITTmV0d29y",
            "a0xvYWRCYWxhbmNlchKdAgoOUmVtb3ZlTGlzdGVuZXISRi55YW5kZXguY2xv",
            "dWQubG9hZGJhbGFuY2VyLnYxLlJlbW92ZU5ldHdvcmtMb2FkQmFsYW5jZXJM",
            "aXN0ZW5lclJlcXVlc3QaIS55YW5kZXguY2xvdWQub3BlcmF0aW9uLk9wZXJh",
            "dGlvbiKfAYLT5JMCVSJQL2xvYWQtYmFsYW5jZXIvdjEvbmV0d29ya0xvYWRC",
            "YWxhbmNlcnMve25ldHdvcmtfbG9hZF9iYWxhbmNlcl9pZH06cmVtb3ZlTGlz",
            "dGVuZXI6ASqy0ipACilSZW1vdmVOZXR3b3JrTG9hZEJhbGFuY2VyTGlzdGVu",
            "ZXJNZXRhZGF0YRITTmV0d29ya0xvYWRCYWxhbmNlchL3AQoOTGlzdE9wZXJh",
            "dGlvbnMSRi55YW5kZXguY2xvdWQubG9hZGJhbGFuY2VyLnYxLkxpc3ROZXR3",
            "b3JrTG9hZEJhbGFuY2VyT3BlcmF0aW9uc1JlcXVlc3QaRy55YW5kZXguY2xv",
            "dWQubG9hZGJhbGFuY2VyLnYxLkxpc3ROZXR3b3JrTG9hZEJhbGFuY2VyT3Bl",
            "cmF0aW9uc1Jlc3BvbnNlIlSC0+STAk4STC9sb2FkLWJhbGFuY2VyL3YxL25l",
            "dHdvcmtMb2FkQmFsYW5jZXJzL3tuZXR3b3JrX2xvYWRfYmFsYW5jZXJfaWR9",
            "L29wZXJhdGlvbnNCcQogeWFuZGV4LmNsb3VkLmFwaS5sb2FkYmFsYW5jZXIu",
            "djFaTWdpdGh1Yi5jb20veWFuZGV4LWNsb3VkL2dvLWdlbnByb3RvL3lhbmRl",
            "eC9jbG91ZC9sb2FkYmFsYW5jZXIvdjE7bG9hZGJhbGFuY2VyYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Yandex.Cloud.Api.OperationReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, global::Yandex.Cloud.Operation.OperationReflection.Descriptor, global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.GetNetworkLoadBalancerRequest), global::Yandex.Cloud.Loadbalancer.V1.GetNetworkLoadBalancerRequest.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.ListNetworkLoadBalancersRequest), global::Yandex.Cloud.Loadbalancer.V1.ListNetworkLoadBalancersRequest.Parser, new[]{ "FolderId", "PageSize", "PageToken", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.ListNetworkLoadBalancersResponse), global::Yandex.Cloud.Loadbalancer.V1.ListNetworkLoadBalancersResponse.Parser, new[]{ "NetworkLoadBalancers", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.CreateNetworkLoadBalancerRequest), global::Yandex.Cloud.Loadbalancer.V1.CreateNetworkLoadBalancerRequest.Parser, new[]{ "FolderId", "Name", "Description", "Labels", "RegionId", "Type", "ListenerSpecs", "AttachedTargetGroups" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.CreateNetworkLoadBalancerMetadata), global::Yandex.Cloud.Loadbalancer.V1.CreateNetworkLoadBalancerMetadata.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.UpdateNetworkLoadBalancerRequest), global::Yandex.Cloud.Loadbalancer.V1.UpdateNetworkLoadBalancerRequest.Parser, new[]{ "NetworkLoadBalancerId", "UpdateMask", "Name", "Description", "Labels", "ListenerSpecs", "AttachedTargetGroups" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.UpdateNetworkLoadBalancerMetadata), global::Yandex.Cloud.Loadbalancer.V1.UpdateNetworkLoadBalancerMetadata.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.DeleteNetworkLoadBalancerRequest), global::Yandex.Cloud.Loadbalancer.V1.DeleteNetworkLoadBalancerRequest.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.DeleteNetworkLoadBalancerMetadata), global::Yandex.Cloud.Loadbalancer.V1.DeleteNetworkLoadBalancerMetadata.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.StartNetworkLoadBalancerRequest), global::Yandex.Cloud.Loadbalancer.V1.StartNetworkLoadBalancerRequest.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.StartNetworkLoadBalancerMetadata), global::Yandex.Cloud.Loadbalancer.V1.StartNetworkLoadBalancerMetadata.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.StopNetworkLoadBalancerRequest), global::Yandex.Cloud.Loadbalancer.V1.StopNetworkLoadBalancerRequest.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.StopNetworkLoadBalancerMetadata), global::Yandex.Cloud.Loadbalancer.V1.StopNetworkLoadBalancerMetadata.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.AttachNetworkLoadBalancerTargetGroupRequest), global::Yandex.Cloud.Loadbalancer.V1.AttachNetworkLoadBalancerTargetGroupRequest.Parser, new[]{ "NetworkLoadBalancerId", "AttachedTargetGroup" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.AttachNetworkLoadBalancerTargetGroupMetadata), global::Yandex.Cloud.Loadbalancer.V1.AttachNetworkLoadBalancerTargetGroupMetadata.Parser, new[]{ "NetworkLoadBalancerId", "TargetGroupId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.DetachNetworkLoadBalancerTargetGroupRequest), global::Yandex.Cloud.Loadbalancer.V1.DetachNetworkLoadBalancerTargetGroupRequest.Parser, new[]{ "NetworkLoadBalancerId", "TargetGroupId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.DetachNetworkLoadBalancerTargetGroupMetadata), global::Yandex.Cloud.Loadbalancer.V1.DetachNetworkLoadBalancerTargetGroupMetadata.Parser, new[]{ "NetworkLoadBalancerId", "TargetGroupId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.AddNetworkLoadBalancerListenerRequest), global::Yandex.Cloud.Loadbalancer.V1.AddNetworkLoadBalancerListenerRequest.Parser, new[]{ "NetworkLoadBalancerId", "ListenerSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.AddNetworkLoadBalancerListenerMetadata), global::Yandex.Cloud.Loadbalancer.V1.AddNetworkLoadBalancerListenerMetadata.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.RemoveNetworkLoadBalancerListenerRequest), global::Yandex.Cloud.Loadbalancer.V1.RemoveNetworkLoadBalancerListenerRequest.Parser, new[]{ "NetworkLoadBalancerId", "ListenerName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.RemoveNetworkLoadBalancerListenerMetadata), global::Yandex.Cloud.Loadbalancer.V1.RemoveNetworkLoadBalancerListenerMetadata.Parser, new[]{ "NetworkLoadBalancerId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.ListNetworkLoadBalancerOperationsRequest), global::Yandex.Cloud.Loadbalancer.V1.ListNetworkLoadBalancerOperationsRequest.Parser, new[]{ "NetworkLoadBalancerId", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.ListNetworkLoadBalancerOperationsResponse), global::Yandex.Cloud.Loadbalancer.V1.ListNetworkLoadBalancerOperationsResponse.Parser, new[]{ "Operations", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.GetTargetStatesRequest), global::Yandex.Cloud.Loadbalancer.V1.GetTargetStatesRequest.Parser, new[]{ "NetworkLoadBalancerId", "TargetGroupId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.GetTargetStatesResponse), global::Yandex.Cloud.Loadbalancer.V1.GetTargetStatesResponse.Parser, new[]{ "TargetStates" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.ExternalAddressSpec), global::Yandex.Cloud.Loadbalancer.V1.ExternalAddressSpec.Parser, new[]{ "Address", "IpVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec), global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec.Parser, new[]{ "Name", "Port", "Protocol", "ExternalAddressSpec", "TargetPort" }, new[]{ "Address" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class GetNetworkLoadBalancerRequest : pb::IMessage<GetNetworkLoadBalancerRequest> {
    private static readonly pb::MessageParser<GetNetworkLoadBalancerRequest> _parser = new pb::MessageParser<GetNetworkLoadBalancerRequest>(() => new GetNetworkLoadBalancerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetNetworkLoadBalancerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNetworkLoadBalancerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNetworkLoadBalancerRequest(GetNetworkLoadBalancerRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetNetworkLoadBalancerRequest Clone() {
      return new GetNetworkLoadBalancerRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the NetworkLoadBalancer resource to return.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetNetworkLoadBalancerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetNetworkLoadBalancerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetNetworkLoadBalancerRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListNetworkLoadBalancersRequest : pb::IMessage<ListNetworkLoadBalancersRequest> {
    private static readonly pb::MessageParser<ListNetworkLoadBalancersRequest> _parser = new pb::MessageParser<ListNetworkLoadBalancersRequest>(() => new ListNetworkLoadBalancersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNetworkLoadBalancersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancersRequest(ListNetworkLoadBalancersRequest other) : this() {
      folderId_ = other.folderId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancersRequest Clone() {
      return new ListNetworkLoadBalancersRequest(this);
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 1;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder that the network load balancer belongs to.
    /// To get the folder ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available
    /// results is larger than [page_size],
    /// the service returns a [&lt;ResponseMessage>.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// Default value: 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set [page_token] to the
    /// [ListNetworkLoadBalancersResponse.next_page_token] returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// A filter expression that filters resources listed in the response.
    /// The expression must specify:
    /// 1. The field name. Currently you can only filter by the [NetworkLoadBalancer.name] field.
    /// 2. An operator. Can be either `=` or `!=` for single values, or `IN` or `NOT IN` for lists of values.
    /// 3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNetworkLoadBalancersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNetworkLoadBalancersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FolderId != other.FolderId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FolderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FolderId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNetworkLoadBalancersRequest other) {
      if (other == null) {
        return;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FolderId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListNetworkLoadBalancersResponse : pb::IMessage<ListNetworkLoadBalancersResponse> {
    private static readonly pb::MessageParser<ListNetworkLoadBalancersResponse> _parser = new pb::MessageParser<ListNetworkLoadBalancersResponse>(() => new ListNetworkLoadBalancersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNetworkLoadBalancersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancersResponse(ListNetworkLoadBalancersResponse other) : this() {
      networkLoadBalancers_ = other.networkLoadBalancers_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancersResponse Clone() {
      return new ListNetworkLoadBalancersResponse(this);
    }

    /// <summary>Field number for the "network_load_balancers" field.</summary>
    public const int NetworkLoadBalancersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancer> _repeated_networkLoadBalancers_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancer.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancer> networkLoadBalancers_ = new pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancer>();
    /// <summary>
    /// List of NetworkLoadBalancer resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancer> NetworkLoadBalancers {
      get { return networkLoadBalancers_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListNetworkLoadBalancersRequest.page_size], use
    /// the [next_page_token] as the value
    /// for the [ListNetworkLoadBalancersRequest.page_token] query parameter
    /// in the next list request. Each subsequent list request will have its own
    /// [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNetworkLoadBalancersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNetworkLoadBalancersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!networkLoadBalancers_.Equals(other.networkLoadBalancers_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= networkLoadBalancers_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      networkLoadBalancers_.WriteTo(output, _repeated_networkLoadBalancers_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += networkLoadBalancers_.CalculateSize(_repeated_networkLoadBalancers_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNetworkLoadBalancersResponse other) {
      if (other == null) {
        return;
      }
      networkLoadBalancers_.Add(other.networkLoadBalancers_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            networkLoadBalancers_.AddEntriesFrom(input, _repeated_networkLoadBalancers_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateNetworkLoadBalancerRequest : pb::IMessage<CreateNetworkLoadBalancerRequest> {
    private static readonly pb::MessageParser<CreateNetworkLoadBalancerRequest> _parser = new pb::MessageParser<CreateNetworkLoadBalancerRequest>(() => new CreateNetworkLoadBalancerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateNetworkLoadBalancerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNetworkLoadBalancerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNetworkLoadBalancerRequest(CreateNetworkLoadBalancerRequest other) : this() {
      folderId_ = other.folderId_;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      regionId_ = other.regionId_;
      type_ = other.type_;
      listenerSpecs_ = other.listenerSpecs_.Clone();
      attachedTargetGroups_ = other.attachedTargetGroups_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNetworkLoadBalancerRequest Clone() {
      return new CreateNetworkLoadBalancerRequest(this);
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 1;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder to create a network load balancer in.
    /// To get the folder ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the network load balancer.
    /// The name must be unique within the folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of the network load balancer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels as `` key:value `` pairs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "region_id" field.</summary>
    public const int RegionIdFieldNumber = 5;
    private string regionId_ = "";
    /// <summary>
    /// ID of the region where the network load balancer resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RegionId {
      get { return regionId_; }
      set {
        regionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 6;
    private global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancer.Types.Type type_ = 0;
    /// <summary>
    /// Type of the network load balancer. Only external network load balancers are currently available.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancer.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "listener_specs" field.</summary>
    public const int ListenerSpecsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec> _repeated_listenerSpecs_codec
        = pb::FieldCodec.ForMessage(58, global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec> listenerSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec>();
    /// <summary>
    /// List of listeners and their specs for the network load balancer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec> ListenerSpecs {
      get { return listenerSpecs_; }
    }

    /// <summary>Field number for the "attached_target_groups" field.</summary>
    public const int AttachedTargetGroupsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup> _repeated_attachedTargetGroups_codec
        = pb::FieldCodec.ForMessage(66, global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup> attachedTargetGroups_ = new pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup>();
    /// <summary>
    /// List of attached target groups for the network load balancer. For now, we accept only one target_group per NetworkLoadBalancer resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup> AttachedTargetGroups {
      get { return attachedTargetGroups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateNetworkLoadBalancerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateNetworkLoadBalancerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FolderId != other.FolderId) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (RegionId != other.RegionId) return false;
      if (Type != other.Type) return false;
      if(!listenerSpecs_.Equals(other.listenerSpecs_)) return false;
      if(!attachedTargetGroups_.Equals(other.attachedTargetGroups_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (RegionId.Length != 0) hash ^= RegionId.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= listenerSpecs_.GetHashCode();
      hash ^= attachedTargetGroups_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FolderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FolderId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (RegionId.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(RegionId);
      }
      if (Type != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Type);
      }
      listenerSpecs_.WriteTo(output, _repeated_listenerSpecs_codec);
      attachedTargetGroups_.WriteTo(output, _repeated_attachedTargetGroups_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (RegionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RegionId);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += listenerSpecs_.CalculateSize(_repeated_listenerSpecs_codec);
      size += attachedTargetGroups_.CalculateSize(_repeated_attachedTargetGroups_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateNetworkLoadBalancerRequest other) {
      if (other == null) {
        return;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      if (other.RegionId.Length != 0) {
        RegionId = other.RegionId;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      listenerSpecs_.Add(other.listenerSpecs_);
      attachedTargetGroups_.Add(other.attachedTargetGroups_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FolderId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 42: {
            RegionId = input.ReadString();
            break;
          }
          case 48: {
            Type = (global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancer.Types.Type) input.ReadEnum();
            break;
          }
          case 58: {
            listenerSpecs_.AddEntriesFrom(input, _repeated_listenerSpecs_codec);
            break;
          }
          case 66: {
            attachedTargetGroups_.AddEntriesFrom(input, _repeated_attachedTargetGroups_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateNetworkLoadBalancerMetadata : pb::IMessage<CreateNetworkLoadBalancerMetadata> {
    private static readonly pb::MessageParser<CreateNetworkLoadBalancerMetadata> _parser = new pb::MessageParser<CreateNetworkLoadBalancerMetadata>(() => new CreateNetworkLoadBalancerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateNetworkLoadBalancerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNetworkLoadBalancerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNetworkLoadBalancerMetadata(CreateNetworkLoadBalancerMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateNetworkLoadBalancerMetadata Clone() {
      return new CreateNetworkLoadBalancerMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer that is being created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateNetworkLoadBalancerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateNetworkLoadBalancerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateNetworkLoadBalancerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateNetworkLoadBalancerRequest : pb::IMessage<UpdateNetworkLoadBalancerRequest> {
    private static readonly pb::MessageParser<UpdateNetworkLoadBalancerRequest> _parser = new pb::MessageParser<UpdateNetworkLoadBalancerRequest>(() => new UpdateNetworkLoadBalancerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateNetworkLoadBalancerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNetworkLoadBalancerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNetworkLoadBalancerRequest(UpdateNetworkLoadBalancerRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      listenerSpecs_ = other.listenerSpecs_.Clone();
      attachedTargetGroups_ = other.attachedTargetGroups_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNetworkLoadBalancerRequest Clone() {
      return new UpdateNetworkLoadBalancerRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer to update.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Field mask that specifies which fields of the NetworkLoadBalancer resource are going to be updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// Name of the network load balancer.
    /// The name must be unique within the folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// Description of the network load balancer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 42);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels as `` key:value `` pairs.
    ///
    /// The existing set of `` labels `` is completely replaced with the provided set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "listener_specs" field.</summary>
    public const int ListenerSpecsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec> _repeated_listenerSpecs_codec
        = pb::FieldCodec.ForMessage(50, global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec> listenerSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec>();
    /// <summary>
    /// A list of listeners and their specs for the network load balancer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec> ListenerSpecs {
      get { return listenerSpecs_; }
    }

    /// <summary>Field number for the "attached_target_groups" field.</summary>
    public const int AttachedTargetGroupsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup> _repeated_attachedTargetGroups_codec
        = pb::FieldCodec.ForMessage(58, global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup> attachedTargetGroups_ = new pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup>();
    /// <summary>
    /// A list of attached target groups for the network load balancer. For now, we accept only one target_group per NetworkLoadBalancer resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup> AttachedTargetGroups {
      get { return attachedTargetGroups_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateNetworkLoadBalancerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateNetworkLoadBalancerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if(!listenerSpecs_.Equals(other.listenerSpecs_)) return false;
      if(!attachedTargetGroups_.Equals(other.attachedTargetGroups_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= listenerSpecs_.GetHashCode();
      hash ^= attachedTargetGroups_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      listenerSpecs_.WriteTo(output, _repeated_listenerSpecs_codec);
      attachedTargetGroups_.WriteTo(output, _repeated_attachedTargetGroups_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      size += listenerSpecs_.CalculateSize(_repeated_listenerSpecs_codec);
      size += attachedTargetGroups_.CalculateSize(_repeated_attachedTargetGroups_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateNetworkLoadBalancerRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      listenerSpecs_.Add(other.listenerSpecs_);
      attachedTargetGroups_.Add(other.attachedTargetGroups_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 50: {
            listenerSpecs_.AddEntriesFrom(input, _repeated_listenerSpecs_codec);
            break;
          }
          case 58: {
            attachedTargetGroups_.AddEntriesFrom(input, _repeated_attachedTargetGroups_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateNetworkLoadBalancerMetadata : pb::IMessage<UpdateNetworkLoadBalancerMetadata> {
    private static readonly pb::MessageParser<UpdateNetworkLoadBalancerMetadata> _parser = new pb::MessageParser<UpdateNetworkLoadBalancerMetadata>(() => new UpdateNetworkLoadBalancerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateNetworkLoadBalancerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNetworkLoadBalancerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNetworkLoadBalancerMetadata(UpdateNetworkLoadBalancerMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateNetworkLoadBalancerMetadata Clone() {
      return new UpdateNetworkLoadBalancerMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the NetworkLoadBalancer resource that is being updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateNetworkLoadBalancerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateNetworkLoadBalancerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateNetworkLoadBalancerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteNetworkLoadBalancerRequest : pb::IMessage<DeleteNetworkLoadBalancerRequest> {
    private static readonly pb::MessageParser<DeleteNetworkLoadBalancerRequest> _parser = new pb::MessageParser<DeleteNetworkLoadBalancerRequest>(() => new DeleteNetworkLoadBalancerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteNetworkLoadBalancerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNetworkLoadBalancerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNetworkLoadBalancerRequest(DeleteNetworkLoadBalancerRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNetworkLoadBalancerRequest Clone() {
      return new DeleteNetworkLoadBalancerRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer to delete.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteNetworkLoadBalancerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteNetworkLoadBalancerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteNetworkLoadBalancerRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteNetworkLoadBalancerMetadata : pb::IMessage<DeleteNetworkLoadBalancerMetadata> {
    private static readonly pb::MessageParser<DeleteNetworkLoadBalancerMetadata> _parser = new pb::MessageParser<DeleteNetworkLoadBalancerMetadata>(() => new DeleteNetworkLoadBalancerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteNetworkLoadBalancerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNetworkLoadBalancerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNetworkLoadBalancerMetadata(DeleteNetworkLoadBalancerMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteNetworkLoadBalancerMetadata Clone() {
      return new DeleteNetworkLoadBalancerMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the NetworkLoadBalancer resource that is being deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteNetworkLoadBalancerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteNetworkLoadBalancerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteNetworkLoadBalancerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StartNetworkLoadBalancerRequest : pb::IMessage<StartNetworkLoadBalancerRequest> {
    private static readonly pb::MessageParser<StartNetworkLoadBalancerRequest> _parser = new pb::MessageParser<StartNetworkLoadBalancerRequest>(() => new StartNetworkLoadBalancerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartNetworkLoadBalancerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNetworkLoadBalancerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNetworkLoadBalancerRequest(StartNetworkLoadBalancerRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNetworkLoadBalancerRequest Clone() {
      return new StartNetworkLoadBalancerRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer to start.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartNetworkLoadBalancerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartNetworkLoadBalancerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartNetworkLoadBalancerRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StartNetworkLoadBalancerMetadata : pb::IMessage<StartNetworkLoadBalancerMetadata> {
    private static readonly pb::MessageParser<StartNetworkLoadBalancerMetadata> _parser = new pb::MessageParser<StartNetworkLoadBalancerMetadata>(() => new StartNetworkLoadBalancerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartNetworkLoadBalancerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNetworkLoadBalancerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNetworkLoadBalancerMetadata(StartNetworkLoadBalancerMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartNetworkLoadBalancerMetadata Clone() {
      return new StartNetworkLoadBalancerMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the NetworkLoadBalancer resource that is being started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartNetworkLoadBalancerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartNetworkLoadBalancerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartNetworkLoadBalancerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StopNetworkLoadBalancerRequest : pb::IMessage<StopNetworkLoadBalancerRequest> {
    private static readonly pb::MessageParser<StopNetworkLoadBalancerRequest> _parser = new pb::MessageParser<StopNetworkLoadBalancerRequest>(() => new StopNetworkLoadBalancerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopNetworkLoadBalancerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNetworkLoadBalancerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNetworkLoadBalancerRequest(StopNetworkLoadBalancerRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNetworkLoadBalancerRequest Clone() {
      return new StopNetworkLoadBalancerRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer to stop.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopNetworkLoadBalancerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopNetworkLoadBalancerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopNetworkLoadBalancerRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StopNetworkLoadBalancerMetadata : pb::IMessage<StopNetworkLoadBalancerMetadata> {
    private static readonly pb::MessageParser<StopNetworkLoadBalancerMetadata> _parser = new pb::MessageParser<StopNetworkLoadBalancerMetadata>(() => new StopNetworkLoadBalancerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopNetworkLoadBalancerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNetworkLoadBalancerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNetworkLoadBalancerMetadata(StopNetworkLoadBalancerMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopNetworkLoadBalancerMetadata Clone() {
      return new StopNetworkLoadBalancerMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the NetworkLoadBalancer resource that is being stopped.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopNetworkLoadBalancerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopNetworkLoadBalancerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopNetworkLoadBalancerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AttachNetworkLoadBalancerTargetGroupRequest : pb::IMessage<AttachNetworkLoadBalancerTargetGroupRequest> {
    private static readonly pb::MessageParser<AttachNetworkLoadBalancerTargetGroupRequest> _parser = new pb::MessageParser<AttachNetworkLoadBalancerTargetGroupRequest>(() => new AttachNetworkLoadBalancerTargetGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachNetworkLoadBalancerTargetGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachNetworkLoadBalancerTargetGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachNetworkLoadBalancerTargetGroupRequest(AttachNetworkLoadBalancerTargetGroupRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      attachedTargetGroup_ = other.attachedTargetGroup_ != null ? other.attachedTargetGroup_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachNetworkLoadBalancerTargetGroupRequest Clone() {
      return new AttachNetworkLoadBalancerTargetGroupRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer to attach the target group to.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "attached_target_group" field.</summary>
    public const int AttachedTargetGroupFieldNumber = 2;
    private global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup attachedTargetGroup_;
    /// <summary>
    /// ID of the attached target group to attach to the network load balancer.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup AttachedTargetGroup {
      get { return attachedTargetGroup_; }
      set {
        attachedTargetGroup_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachNetworkLoadBalancerTargetGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachNetworkLoadBalancerTargetGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (!object.Equals(AttachedTargetGroup, other.AttachedTargetGroup)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (attachedTargetGroup_ != null) hash ^= AttachedTargetGroup.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (attachedTargetGroup_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AttachedTargetGroup);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (attachedTargetGroup_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AttachedTargetGroup);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachNetworkLoadBalancerTargetGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.attachedTargetGroup_ != null) {
        if (attachedTargetGroup_ == null) {
          AttachedTargetGroup = new global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup();
        }
        AttachedTargetGroup.MergeFrom(other.AttachedTargetGroup);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 18: {
            if (attachedTargetGroup_ == null) {
              AttachedTargetGroup = new global::Yandex.Cloud.Loadbalancer.V1.AttachedTargetGroup();
            }
            input.ReadMessage(AttachedTargetGroup);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AttachNetworkLoadBalancerTargetGroupMetadata : pb::IMessage<AttachNetworkLoadBalancerTargetGroupMetadata> {
    private static readonly pb::MessageParser<AttachNetworkLoadBalancerTargetGroupMetadata> _parser = new pb::MessageParser<AttachNetworkLoadBalancerTargetGroupMetadata>(() => new AttachNetworkLoadBalancerTargetGroupMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachNetworkLoadBalancerTargetGroupMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachNetworkLoadBalancerTargetGroupMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachNetworkLoadBalancerTargetGroupMetadata(AttachNetworkLoadBalancerTargetGroupMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      targetGroupId_ = other.targetGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachNetworkLoadBalancerTargetGroupMetadata Clone() {
      return new AttachNetworkLoadBalancerTargetGroupMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer that the target group is being attached to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_group_id" field.</summary>
    public const int TargetGroupIdFieldNumber = 2;
    private string targetGroupId_ = "";
    /// <summary>
    /// ID of the target group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGroupId {
      get { return targetGroupId_; }
      set {
        targetGroupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachNetworkLoadBalancerTargetGroupMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachNetworkLoadBalancerTargetGroupMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (TargetGroupId != other.TargetGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (TargetGroupId.Length != 0) hash ^= TargetGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (TargetGroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (TargetGroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachNetworkLoadBalancerTargetGroupMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.TargetGroupId.Length != 0) {
        TargetGroupId = other.TargetGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 18: {
            TargetGroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DetachNetworkLoadBalancerTargetGroupRequest : pb::IMessage<DetachNetworkLoadBalancerTargetGroupRequest> {
    private static readonly pb::MessageParser<DetachNetworkLoadBalancerTargetGroupRequest> _parser = new pb::MessageParser<DetachNetworkLoadBalancerTargetGroupRequest>(() => new DetachNetworkLoadBalancerTargetGroupRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetachNetworkLoadBalancerTargetGroupRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetachNetworkLoadBalancerTargetGroupRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetachNetworkLoadBalancerTargetGroupRequest(DetachNetworkLoadBalancerTargetGroupRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      targetGroupId_ = other.targetGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetachNetworkLoadBalancerTargetGroupRequest Clone() {
      return new DetachNetworkLoadBalancerTargetGroupRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer to detach the target group from.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_group_id" field.</summary>
    public const int TargetGroupIdFieldNumber = 2;
    private string targetGroupId_ = "";
    /// <summary>
    /// ID of the target group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGroupId {
      get { return targetGroupId_; }
      set {
        targetGroupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetachNetworkLoadBalancerTargetGroupRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetachNetworkLoadBalancerTargetGroupRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (TargetGroupId != other.TargetGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (TargetGroupId.Length != 0) hash ^= TargetGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (TargetGroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (TargetGroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetachNetworkLoadBalancerTargetGroupRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.TargetGroupId.Length != 0) {
        TargetGroupId = other.TargetGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 18: {
            TargetGroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DetachNetworkLoadBalancerTargetGroupMetadata : pb::IMessage<DetachNetworkLoadBalancerTargetGroupMetadata> {
    private static readonly pb::MessageParser<DetachNetworkLoadBalancerTargetGroupMetadata> _parser = new pb::MessageParser<DetachNetworkLoadBalancerTargetGroupMetadata>(() => new DetachNetworkLoadBalancerTargetGroupMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DetachNetworkLoadBalancerTargetGroupMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetachNetworkLoadBalancerTargetGroupMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetachNetworkLoadBalancerTargetGroupMetadata(DetachNetworkLoadBalancerTargetGroupMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      targetGroupId_ = other.targetGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DetachNetworkLoadBalancerTargetGroupMetadata Clone() {
      return new DetachNetworkLoadBalancerTargetGroupMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer that the target group is being detached from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_group_id" field.</summary>
    public const int TargetGroupIdFieldNumber = 2;
    private string targetGroupId_ = "";
    /// <summary>
    /// ID of the target group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGroupId {
      get { return targetGroupId_; }
      set {
        targetGroupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DetachNetworkLoadBalancerTargetGroupMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DetachNetworkLoadBalancerTargetGroupMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (TargetGroupId != other.TargetGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (TargetGroupId.Length != 0) hash ^= TargetGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (TargetGroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (TargetGroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DetachNetworkLoadBalancerTargetGroupMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.TargetGroupId.Length != 0) {
        TargetGroupId = other.TargetGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 18: {
            TargetGroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AddNetworkLoadBalancerListenerRequest : pb::IMessage<AddNetworkLoadBalancerListenerRequest> {
    private static readonly pb::MessageParser<AddNetworkLoadBalancerListenerRequest> _parser = new pb::MessageParser<AddNetworkLoadBalancerListenerRequest>(() => new AddNetworkLoadBalancerListenerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddNetworkLoadBalancerListenerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNetworkLoadBalancerListenerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNetworkLoadBalancerListenerRequest(AddNetworkLoadBalancerListenerRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      listenerSpec_ = other.listenerSpec_ != null ? other.listenerSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNetworkLoadBalancerListenerRequest Clone() {
      return new AddNetworkLoadBalancerListenerRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer to add a listener to.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listener_spec" field.</summary>
    public const int ListenerSpecFieldNumber = 2;
    private global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec listenerSpec_;
    /// <summary>
    /// Listener spec.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec ListenerSpec {
      get { return listenerSpec_; }
      set {
        listenerSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddNetworkLoadBalancerListenerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddNetworkLoadBalancerListenerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (!object.Equals(ListenerSpec, other.ListenerSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (listenerSpec_ != null) hash ^= ListenerSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (listenerSpec_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ListenerSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (listenerSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ListenerSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddNetworkLoadBalancerListenerRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.listenerSpec_ != null) {
        if (listenerSpec_ == null) {
          ListenerSpec = new global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec();
        }
        ListenerSpec.MergeFrom(other.ListenerSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 18: {
            if (listenerSpec_ == null) {
              ListenerSpec = new global::Yandex.Cloud.Loadbalancer.V1.ListenerSpec();
            }
            input.ReadMessage(ListenerSpec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AddNetworkLoadBalancerListenerMetadata : pb::IMessage<AddNetworkLoadBalancerListenerMetadata> {
    private static readonly pb::MessageParser<AddNetworkLoadBalancerListenerMetadata> _parser = new pb::MessageParser<AddNetworkLoadBalancerListenerMetadata>(() => new AddNetworkLoadBalancerListenerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddNetworkLoadBalancerListenerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNetworkLoadBalancerListenerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNetworkLoadBalancerListenerMetadata(AddNetworkLoadBalancerListenerMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddNetworkLoadBalancerListenerMetadata Clone() {
      return new AddNetworkLoadBalancerListenerMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer that the listener is being added to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddNetworkLoadBalancerListenerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddNetworkLoadBalancerListenerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddNetworkLoadBalancerListenerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RemoveNetworkLoadBalancerListenerRequest : pb::IMessage<RemoveNetworkLoadBalancerListenerRequest> {
    private static readonly pb::MessageParser<RemoveNetworkLoadBalancerListenerRequest> _parser = new pb::MessageParser<RemoveNetworkLoadBalancerListenerRequest>(() => new RemoveNetworkLoadBalancerListenerRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveNetworkLoadBalancerListenerRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNetworkLoadBalancerListenerRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNetworkLoadBalancerListenerRequest(RemoveNetworkLoadBalancerListenerRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      listenerName_ = other.listenerName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNetworkLoadBalancerListenerRequest Clone() {
      return new RemoveNetworkLoadBalancerListenerRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer to remove the listener from.
    /// To get the network load balancer ID, use a [NetworkLoadBalancerService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "listener_name" field.</summary>
    public const int ListenerNameFieldNumber = 2;
    private string listenerName_ = "";
    /// <summary>
    /// Name of the listener to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ListenerName {
      get { return listenerName_; }
      set {
        listenerName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveNetworkLoadBalancerListenerRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveNetworkLoadBalancerListenerRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (ListenerName != other.ListenerName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (ListenerName.Length != 0) hash ^= ListenerName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (ListenerName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ListenerName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (ListenerName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ListenerName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveNetworkLoadBalancerListenerRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.ListenerName.Length != 0) {
        ListenerName = other.ListenerName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 18: {
            ListenerName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RemoveNetworkLoadBalancerListenerMetadata : pb::IMessage<RemoveNetworkLoadBalancerListenerMetadata> {
    private static readonly pb::MessageParser<RemoveNetworkLoadBalancerListenerMetadata> _parser = new pb::MessageParser<RemoveNetworkLoadBalancerListenerMetadata>(() => new RemoveNetworkLoadBalancerListenerMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveNetworkLoadBalancerListenerMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNetworkLoadBalancerListenerMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNetworkLoadBalancerListenerMetadata(RemoveNetworkLoadBalancerListenerMetadata other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveNetworkLoadBalancerListenerMetadata Clone() {
      return new RemoveNetworkLoadBalancerListenerMetadata(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the network load balancer that the listener is being removed from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveNetworkLoadBalancerListenerMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveNetworkLoadBalancerListenerMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveNetworkLoadBalancerListenerMetadata other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListNetworkLoadBalancerOperationsRequest : pb::IMessage<ListNetworkLoadBalancerOperationsRequest> {
    private static readonly pb::MessageParser<ListNetworkLoadBalancerOperationsRequest> _parser = new pb::MessageParser<ListNetworkLoadBalancerOperationsRequest>(() => new ListNetworkLoadBalancerOperationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNetworkLoadBalancerOperationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancerOperationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancerOperationsRequest(ListNetworkLoadBalancerOperationsRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancerOperationsRequest Clone() {
      return new ListNetworkLoadBalancerOperationsRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the NetworkLoadBalancer resource to list operations for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page that should be returned. If the number of available
    /// results is larger than [page_size], the service returns a [ListNetworkLoadBalancerOperationsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// Default value: 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set [page_token] to the
    /// [ListNetworkLoadBalancerOperationsResponse.next_page_token] returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNetworkLoadBalancerOperationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNetworkLoadBalancerOperationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNetworkLoadBalancerOperationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListNetworkLoadBalancerOperationsResponse : pb::IMessage<ListNetworkLoadBalancerOperationsResponse> {
    private static readonly pb::MessageParser<ListNetworkLoadBalancerOperationsResponse> _parser = new pb::MessageParser<ListNetworkLoadBalancerOperationsResponse>(() => new ListNetworkLoadBalancerOperationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListNetworkLoadBalancerOperationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancerOperationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancerOperationsResponse(ListNetworkLoadBalancerOperationsResponse other) : this() {
      operations_ = other.operations_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListNetworkLoadBalancerOperationsResponse Clone() {
      return new ListNetworkLoadBalancerOperationsResponse(this);
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Operation.Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Operation.Operation.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation> operations_ = new pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation>();
    /// <summary>
    /// List of operations for the specified network load balancer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation> Operations {
      get { return operations_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListNetworkLoadBalancerOperationsRequest.page_size], use the [next_page_token] as the value
    /// for the [ListNetworkLoadBalancerOperationsRequest.page_token] query parameter in the next list request.
    /// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListNetworkLoadBalancerOperationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListNetworkLoadBalancerOperationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!operations_.Equals(other.operations_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= operations_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      operations_.WriteTo(output, _repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += operations_.CalculateSize(_repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListNetworkLoadBalancerOperationsResponse other) {
      if (other == null) {
        return;
      }
      operations_.Add(other.operations_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetTargetStatesRequest : pb::IMessage<GetTargetStatesRequest> {
    private static readonly pb::MessageParser<GetTargetStatesRequest> _parser = new pb::MessageParser<GetTargetStatesRequest>(() => new GetTargetStatesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTargetStatesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTargetStatesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTargetStatesRequest(GetTargetStatesRequest other) : this() {
      networkLoadBalancerId_ = other.networkLoadBalancerId_;
      targetGroupId_ = other.targetGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTargetStatesRequest Clone() {
      return new GetTargetStatesRequest(this);
    }

    /// <summary>Field number for the "network_load_balancer_id" field.</summary>
    public const int NetworkLoadBalancerIdFieldNumber = 1;
    private string networkLoadBalancerId_ = "";
    /// <summary>
    /// ID of the NetworkLoadBalancer resource with an attached target group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkLoadBalancerId {
      get { return networkLoadBalancerId_; }
      set {
        networkLoadBalancerId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "target_group_id" field.</summary>
    public const int TargetGroupIdFieldNumber = 2;
    private string targetGroupId_ = "";
    /// <summary>
    /// ID of the target group to get states of resources from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string TargetGroupId {
      get { return targetGroupId_; }
      set {
        targetGroupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTargetStatesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTargetStatesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (NetworkLoadBalancerId != other.NetworkLoadBalancerId) return false;
      if (TargetGroupId != other.TargetGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (NetworkLoadBalancerId.Length != 0) hash ^= NetworkLoadBalancerId.GetHashCode();
      if (TargetGroupId.Length != 0) hash ^= TargetGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (NetworkLoadBalancerId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(NetworkLoadBalancerId);
      }
      if (TargetGroupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(TargetGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (NetworkLoadBalancerId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkLoadBalancerId);
      }
      if (TargetGroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TargetGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTargetStatesRequest other) {
      if (other == null) {
        return;
      }
      if (other.NetworkLoadBalancerId.Length != 0) {
        NetworkLoadBalancerId = other.NetworkLoadBalancerId;
      }
      if (other.TargetGroupId.Length != 0) {
        TargetGroupId = other.TargetGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            NetworkLoadBalancerId = input.ReadString();
            break;
          }
          case 18: {
            TargetGroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetTargetStatesResponse : pb::IMessage<GetTargetStatesResponse> {
    private static readonly pb::MessageParser<GetTargetStatesResponse> _parser = new pb::MessageParser<GetTargetStatesResponse>(() => new GetTargetStatesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetTargetStatesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTargetStatesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTargetStatesResponse(GetTargetStatesResponse other) : this() {
      targetStates_ = other.targetStates_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetTargetStatesResponse Clone() {
      return new GetTargetStatesResponse(this);
    }

    /// <summary>Field number for the "target_states" field.</summary>
    public const int TargetStatesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Loadbalancer.V1.TargetState> _repeated_targetStates_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Loadbalancer.V1.TargetState.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.TargetState> targetStates_ = new pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.TargetState>();
    /// <summary>
    /// List of states of targets within the target group that is specified in the [GetTargetStatesRequest] message.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Loadbalancer.V1.TargetState> TargetStates {
      get { return targetStates_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetTargetStatesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetTargetStatesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!targetStates_.Equals(other.targetStates_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= targetStates_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      targetStates_.WriteTo(output, _repeated_targetStates_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += targetStates_.CalculateSize(_repeated_targetStates_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetTargetStatesResponse other) {
      if (other == null) {
        return;
      }
      targetStates_.Add(other.targetStates_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            targetStates_.AddEntriesFrom(input, _repeated_targetStates_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// External address specification that is used by [ListenerSpec].
  /// </summary>
  internal sealed partial class ExternalAddressSpec : pb::IMessage<ExternalAddressSpec> {
    private static readonly pb::MessageParser<ExternalAddressSpec> _parser = new pb::MessageParser<ExternalAddressSpec>(() => new ExternalAddressSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ExternalAddressSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalAddressSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalAddressSpec(ExternalAddressSpec other) : this() {
      address_ = other.address_;
      ipVersion_ = other.ipVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ExternalAddressSpec Clone() {
      return new ExternalAddressSpec(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// Public IP address for a listener.
    /// If you provide a static public IP address for the [NetworkLoadBalancerService.Update]
    /// method, it will replace the existing listener address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip_version" field.</summary>
    public const int IpVersionFieldNumber = 2;
    private global::Yandex.Cloud.Loadbalancer.V1.IpVersion ipVersion_ = 0;
    /// <summary>
    /// IP version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Loadbalancer.V1.IpVersion IpVersion {
      get { return ipVersion_; }
      set {
        ipVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ExternalAddressSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ExternalAddressSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (IpVersion != other.IpVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (IpVersion != 0) hash ^= IpVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (IpVersion != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) IpVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (IpVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IpVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ExternalAddressSpec other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.IpVersion != 0) {
        IpVersion = other.IpVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            IpVersion = (global::Yandex.Cloud.Loadbalancer.V1.IpVersion) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Listener specification that will be used by a network load balancer.
  /// </summary>
  internal sealed partial class ListenerSpec : pb::IMessage<ListenerSpec> {
    private static readonly pb::MessageParser<ListenerSpec> _parser = new pb::MessageParser<ListenerSpec>(() => new ListenerSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListenerSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Loadbalancer.V1.NetworkLoadBalancerServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenerSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenerSpec(ListenerSpec other) : this() {
      name_ = other.name_;
      port_ = other.port_;
      protocol_ = other.protocol_;
      targetPort_ = other.targetPort_;
      switch (other.AddressCase) {
        case AddressOneofCase.ExternalAddressSpec:
          ExternalAddressSpec = other.ExternalAddressSpec.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListenerSpec Clone() {
      return new ListenerSpec(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the listener. The name must be unique for each listener on a single load balancer. 3-63 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "port" field.</summary>
    public const int PortFieldNumber = 2;
    private long port_;
    /// <summary>
    /// Port for incoming traffic.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Port {
      get { return port_; }
      set {
        port_ = value;
      }
    }

    /// <summary>Field number for the "protocol" field.</summary>
    public const int ProtocolFieldNumber = 3;
    private global::Yandex.Cloud.Loadbalancer.V1.Listener.Types.Protocol protocol_ = 0;
    /// <summary>
    /// Protocol for incoming traffic.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Loadbalancer.V1.Listener.Types.Protocol Protocol {
      get { return protocol_; }
      set {
        protocol_ = value;
      }
    }

    /// <summary>Field number for the "external_address_spec" field.</summary>
    public const int ExternalAddressSpecFieldNumber = 4;
    /// <summary>
    /// External IP address specification.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Loadbalancer.V1.ExternalAddressSpec ExternalAddressSpec {
      get { return addressCase_ == AddressOneofCase.ExternalAddressSpec ? (global::Yandex.Cloud.Loadbalancer.V1.ExternalAddressSpec) address_ : null; }
      set {
        address_ = value;
        addressCase_ = value == null ? AddressOneofCase.None : AddressOneofCase.ExternalAddressSpec;
      }
    }

    /// <summary>Field number for the "target_port" field.</summary>
    public const int TargetPortFieldNumber = 5;
    private long targetPort_;
    /// <summary>
    /// Port of a target.
    /// Acceptable values are 1 to 32767, inclusive.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TargetPort {
      get { return targetPort_; }
      set {
        targetPort_ = value;
      }
    }

    private object address_;
    /// <summary>Enum of possible cases for the "address" oneof.</summary>
    public enum AddressOneofCase {
      None = 0,
      ExternalAddressSpec = 4,
    }
    private AddressOneofCase addressCase_ = AddressOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddressOneofCase AddressCase {
      get { return addressCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearAddress() {
      addressCase_ = AddressOneofCase.None;
      address_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListenerSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListenerSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Port != other.Port) return false;
      if (Protocol != other.Protocol) return false;
      if (!object.Equals(ExternalAddressSpec, other.ExternalAddressSpec)) return false;
      if (TargetPort != other.TargetPort) return false;
      if (AddressCase != other.AddressCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Port != 0L) hash ^= Port.GetHashCode();
      if (Protocol != 0) hash ^= Protocol.GetHashCode();
      if (addressCase_ == AddressOneofCase.ExternalAddressSpec) hash ^= ExternalAddressSpec.GetHashCode();
      if (TargetPort != 0L) hash ^= TargetPort.GetHashCode();
      hash ^= (int) addressCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Port != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Port);
      }
      if (Protocol != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Protocol);
      }
      if (addressCase_ == AddressOneofCase.ExternalAddressSpec) {
        output.WriteRawTag(34);
        output.WriteMessage(ExternalAddressSpec);
      }
      if (TargetPort != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TargetPort);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Port != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Port);
      }
      if (Protocol != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Protocol);
      }
      if (addressCase_ == AddressOneofCase.ExternalAddressSpec) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExternalAddressSpec);
      }
      if (TargetPort != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TargetPort);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListenerSpec other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Port != 0L) {
        Port = other.Port;
      }
      if (other.Protocol != 0) {
        Protocol = other.Protocol;
      }
      if (other.TargetPort != 0L) {
        TargetPort = other.TargetPort;
      }
      switch (other.AddressCase) {
        case AddressOneofCase.ExternalAddressSpec:
          if (ExternalAddressSpec == null) {
            ExternalAddressSpec = new global::Yandex.Cloud.Loadbalancer.V1.ExternalAddressSpec();
          }
          ExternalAddressSpec.MergeFrom(other.ExternalAddressSpec);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 16: {
            Port = input.ReadInt64();
            break;
          }
          case 24: {
            Protocol = (global::Yandex.Cloud.Loadbalancer.V1.Listener.Types.Protocol) input.ReadEnum();
            break;
          }
          case 34: {
            global::Yandex.Cloud.Loadbalancer.V1.ExternalAddressSpec subBuilder = new global::Yandex.Cloud.Loadbalancer.V1.ExternalAddressSpec();
            if (addressCase_ == AddressOneofCase.ExternalAddressSpec) {
              subBuilder.MergeFrom(ExternalAddressSpec);
            }
            input.ReadMessage(subBuilder);
            ExternalAddressSpec = subBuilder;
            break;
          }
          case 40: {
            TargetPort = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
