// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/mdb/clickhouse/v1/format_schema_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Mdb.Clickhouse.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/mdb/clickhouse/v1/format_schema_service.proto</summary>
  internal static partial class FormatSchemaServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/mdb/clickhouse/v1/format_schema_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FormatSchemaServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjp5YW5kZXgvY2xvdWQvbWRiL2NsaWNraG91c2UvdjEvZm9ybWF0X3NjaGVt",
            "YV9zZXJ2aWNlLnByb3RvEh55YW5kZXguY2xvdWQubWRiLmNsaWNraG91c2Uu",
            "djEaHGdvb2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aIGdvb2dsZS9wcm90",
            "b2J1Zi9maWVsZF9tYXNrLnByb3RvGiB5YW5kZXgvY2xvdWQvYXBpL29wZXJh",
            "dGlvbi5wcm90bxomeWFuZGV4L2Nsb3VkL29wZXJhdGlvbi9vcGVyYXRpb24u",
            "cHJvdG8aHXlhbmRleC9jbG91ZC92YWxpZGF0aW9uLnByb3RvGjJ5YW5kZXgv",
            "Y2xvdWQvbWRiL2NsaWNraG91c2UvdjEvZm9ybWF0X3NjaGVtYS5wcm90byJ2",
            "ChZHZXRGb3JtYXRTY2hlbWFSZXF1ZXN0EiAKCmNsdXN0ZXJfaWQYASABKAlC",
            "DOjHMQGKyDEEPD01MBI6ChJmb3JtYXRfc2NoZW1hX25hbWUYAiABKAlCHujH",
            "MQGKyDEEPD02M/LHMQ5bYS16QS1aMC05Xy1dKiJ6ChhMaXN0Rm9ybWF0U2No",
            "ZW1hc1JlcXVlc3QSIAoKY2x1c3Rlcl9pZBgBIAEoCUIM6McxAYrIMQQ8PTUw",
            "Eh0KCXBhZ2Vfc2l6ZRgCIAEoA0IK+scxBjw9MTAwMBIdCgpwYWdlX3Rva2Vu",
            "GAMgASgJQgmKyDEFPD0xMDAiegoZTGlzdEZvcm1hdFNjaGVtYXNSZXNwb25z",
            "ZRJECg5mb3JtYXRfc2NoZW1hcxgBIAMoCzIsLnlhbmRleC5jbG91ZC5tZGIu",
            "Y2xpY2tob3VzZS52MS5Gb3JtYXRTY2hlbWESFwoPbmV4dF9wYWdlX3Rva2Vu",
            "GAIgASgJItIBChlDcmVhdGVGb3JtYXRTY2hlbWFSZXF1ZXN0EiAKCmNsdXN0",
            "ZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MBI6ChJmb3JtYXRfc2NoZW1hX25h",
            "bWUYAiABKAlCHujHMQGKyDEEPD02M/LHMQ5bYS16QS1aMC05Xy1dKhJECgR0",
            "eXBlGAMgASgOMjAueWFuZGV4LmNsb3VkLm1kYi5jbGlja2hvdXNlLnYxLkZv",
            "cm1hdFNjaGVtYVR5cGVCBOjHMQESEQoDdXJpGAQgASgJQgToxzEBIkwKGkNy",
            "ZWF0ZUZvcm1hdFNjaGVtYU1ldGFkYXRhEhIKCmNsdXN0ZXJfaWQYASABKAkS",
            "GgoSZm9ybWF0X3NjaGVtYV9uYW1lGAIgASgJIrcBChlVcGRhdGVGb3JtYXRT",
            "Y2hlbWFSZXF1ZXN0EiAKCmNsdXN0ZXJfaWQYASABKAlCDOjHMQGKyDEEPD01",
            "MBI6ChJmb3JtYXRfc2NoZW1hX25hbWUYAiABKAlCHujHMQGKyDEEPD02M/LH",
            "MQ5bYS16QS1aMC05Xy1dKhIvCgt1cGRhdGVfbWFzaxgDIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5GaWVsZE1hc2sSCwoDdXJpGAQgASgJIkwKGlVwZGF0ZUZv",
            "cm1hdFNjaGVtYU1ldGFkYXRhEhIKCmNsdXN0ZXJfaWQYASABKAkSGgoSZm9y",
            "bWF0X3NjaGVtYV9uYW1lGAIgASgJInkKGURlbGV0ZUZvcm1hdFNjaGVtYVJl",
            "cXVlc3QSIAoKY2x1c3Rlcl9pZBgBIAEoCUIM6McxAYrIMQQ8PTUwEjoKEmZv",
            "cm1hdF9zY2hlbWFfbmFtZRgCIAEoCUIe6McxAYrIMQQ8PTYz8scxDlthLXpB",
            "LVowLTlfLV0qIkwKGkRlbGV0ZUZvcm1hdFNjaGVtYU1ldGFkYXRhEhIKCmNs",
            "dXN0ZXJfaWQYASABKAkSGgoSZm9ybWF0X3NjaGVtYV9uYW1lGAIgASgJMuoI",
            "ChNGb3JtYXRTY2hlbWFTZXJ2aWNlEsQBCgNHZXQSNi55YW5kZXguY2xvdWQu",
            "bWRiLmNsaWNraG91c2UudjEuR2V0Rm9ybWF0U2NoZW1hUmVxdWVzdBosLnlh",
            "bmRleC5jbG91ZC5tZGIuY2xpY2tob3VzZS52MS5Gb3JtYXRTY2hlbWEiV4LT",
            "5JMCURJPL21hbmFnZWQtY2xpY2tob3VzZS92MS9jbHVzdGVycy97Y2x1c3Rl",
            "cl9pZH0vZm9ybWF0U2NoZW1hcy97Zm9ybWF0X3NjaGVtYV9uYW1lfRK/AQoE",
            "TGlzdBI4LnlhbmRleC5jbG91ZC5tZGIuY2xpY2tob3VzZS52MS5MaXN0Rm9y",
            "bWF0U2NoZW1hc1JlcXVlc3QaOS55YW5kZXguY2xvdWQubWRiLmNsaWNraG91",
            "c2UudjEuTGlzdEZvcm1hdFNjaGVtYXNSZXNwb25zZSJCgtPkkwI8EjovbWFu",
            "YWdlZC1jbGlja2hvdXNlL3YxL2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9mb3Jt",
            "YXRTY2hlbWFzEtsBCgZDcmVhdGUSOS55YW5kZXguY2xvdWQubWRiLmNsaWNr",
            "aG91c2UudjEuQ3JlYXRlRm9ybWF0U2NoZW1hUmVxdWVzdBohLnlhbmRleC5j",
            "bG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uInOC0+STAj8iOi9tYW5hZ2VkLWNs",
            "aWNraG91c2UvdjEvY2x1c3RlcnMve2NsdXN0ZXJfaWR9L2Zvcm1hdFNjaGVt",
            "YXM6ASqy0ioqChpDcmVhdGVGb3JtYXRTY2hlbWFNZXRhZGF0YRIMRm9ybWF0",
            "U2NoZW1hEvEBCgZVcGRhdGUSOS55YW5kZXguY2xvdWQubWRiLmNsaWNraG91",
            "c2UudjEuVXBkYXRlRm9ybWF0U2NoZW1hUmVxdWVzdBohLnlhbmRleC5jbG91",
            "ZC5vcGVyYXRpb24uT3BlcmF0aW9uIogBgtPkkwJUMk8vbWFuYWdlZC1jbGlj",
            "a2hvdXNlL3YxL2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9mb3JtYXRTY2hlbWFz",
            "L3tmb3JtYXRfc2NoZW1hX25hbWV9OgEqstIqKgoaVXBkYXRlRm9ybWF0U2No",
            "ZW1hTWV0YWRhdGESDEZvcm1hdFNjaGVtYRL3AQoGRGVsZXRlEjkueWFuZGV4",
            "LmNsb3VkLm1kYi5jbGlja2hvdXNlLnYxLkRlbGV0ZUZvcm1hdFNjaGVtYVJl",
            "cXVlc3QaIS55YW5kZXguY2xvdWQub3BlcmF0aW9uLk9wZXJhdGlvbiKOAYLT",
            "5JMCUSpPL21hbmFnZWQtY2xpY2tob3VzZS92MS9jbHVzdGVycy97Y2x1c3Rl",
            "cl9pZH0vZm9ybWF0U2NoZW1hcy97Zm9ybWF0X3NjaGVtYV9uYW1lfbLSKjMK",
            "GkRlbGV0ZUZvcm1hdFNjaGVtYU1ldGFkYXRhEhVnb29nbGUucHJvdG9idWYu",
            "RW1wdHlCcwoieWFuZGV4LmNsb3VkLmFwaS5tZGIuY2xpY2tob3VzZS52MVpN",
            "Z2l0aHViLmNvbS95YW5kZXgtY2xvdWQvZ28tZ2VucHJvdG8veWFuZGV4L2Ns",
            "b3VkL21kYi9jbGlja2hvdXNlL3YxO2NsaWNraG91c2ViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Yandex.Cloud.Api.OperationReflection.Descriptor, global::Yandex.Cloud.Operation.OperationReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.GetFormatSchemaRequest), global::Yandex.Cloud.Mdb.Clickhouse.V1.GetFormatSchemaRequest.Parser, new[]{ "ClusterId", "FormatSchemaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.ListFormatSchemasRequest), global::Yandex.Cloud.Mdb.Clickhouse.V1.ListFormatSchemasRequest.Parser, new[]{ "ClusterId", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.ListFormatSchemasResponse), global::Yandex.Cloud.Mdb.Clickhouse.V1.ListFormatSchemasResponse.Parser, new[]{ "FormatSchemas", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.CreateFormatSchemaRequest), global::Yandex.Cloud.Mdb.Clickhouse.V1.CreateFormatSchemaRequest.Parser, new[]{ "ClusterId", "FormatSchemaName", "Type", "Uri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.CreateFormatSchemaMetadata), global::Yandex.Cloud.Mdb.Clickhouse.V1.CreateFormatSchemaMetadata.Parser, new[]{ "ClusterId", "FormatSchemaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.UpdateFormatSchemaRequest), global::Yandex.Cloud.Mdb.Clickhouse.V1.UpdateFormatSchemaRequest.Parser, new[]{ "ClusterId", "FormatSchemaName", "UpdateMask", "Uri" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.UpdateFormatSchemaMetadata), global::Yandex.Cloud.Mdb.Clickhouse.V1.UpdateFormatSchemaMetadata.Parser, new[]{ "ClusterId", "FormatSchemaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.DeleteFormatSchemaRequest), global::Yandex.Cloud.Mdb.Clickhouse.V1.DeleteFormatSchemaRequest.Parser, new[]{ "ClusterId", "FormatSchemaName" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.DeleteFormatSchemaMetadata), global::Yandex.Cloud.Mdb.Clickhouse.V1.DeleteFormatSchemaMetadata.Parser, new[]{ "ClusterId", "FormatSchemaName" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class GetFormatSchemaRequest : pb::IMessage<GetFormatSchemaRequest> {
    private static readonly pb::MessageParser<GetFormatSchemaRequest> _parser = new pb::MessageParser<GetFormatSchemaRequest>(() => new GetFormatSchemaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFormatSchemaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFormatSchemaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFormatSchemaRequest(GetFormatSchemaRequest other) : this() {
      clusterId_ = other.clusterId_;
      formatSchemaName_ = other.formatSchemaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFormatSchemaRequest Clone() {
      return new GetFormatSchemaRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format_schema_name" field.</summary>
    public const int FormatSchemaNameFieldNumber = 2;
    private string formatSchemaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormatSchemaName {
      get { return formatSchemaName_; }
      set {
        formatSchemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFormatSchemaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFormatSchemaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (FormatSchemaName != other.FormatSchemaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (FormatSchemaName.Length != 0) hash ^= FormatSchemaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FormatSchemaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatSchemaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFormatSchemaRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.FormatSchemaName.Length != 0) {
        FormatSchemaName = other.FormatSchemaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            FormatSchemaName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFormatSchemasRequest : pb::IMessage<ListFormatSchemasRequest> {
    private static readonly pb::MessageParser<ListFormatSchemasRequest> _parser = new pb::MessageParser<ListFormatSchemasRequest>(() => new ListFormatSchemasRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFormatSchemasRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFormatSchemasRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFormatSchemasRequest(ListFormatSchemasRequest other) : this() {
      clusterId_ = other.clusterId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFormatSchemasRequest Clone() {
      return new ListFormatSchemasRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFormatSchemasRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFormatSchemasRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFormatSchemasRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFormatSchemasResponse : pb::IMessage<ListFormatSchemasResponse> {
    private static readonly pb::MessageParser<ListFormatSchemasResponse> _parser = new pb::MessageParser<ListFormatSchemasResponse>(() => new ListFormatSchemasResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFormatSchemasResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFormatSchemasResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFormatSchemasResponse(ListFormatSchemasResponse other) : this() {
      formatSchemas_ = other.formatSchemas_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFormatSchemasResponse Clone() {
      return new ListFormatSchemasResponse(this);
    }

    /// <summary>Field number for the "format_schemas" field.</summary>
    public const int FormatSchemasFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchema> _repeated_formatSchemas_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchema.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchema> formatSchemas_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchema>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchema> FormatSchemas {
      get { return formatSchemas_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFormatSchemasResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFormatSchemasResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!formatSchemas_.Equals(other.formatSchemas_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= formatSchemas_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      formatSchemas_.WriteTo(output, _repeated_formatSchemas_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += formatSchemas_.CalculateSize(_repeated_formatSchemas_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFormatSchemasResponse other) {
      if (other == null) {
        return;
      }
      formatSchemas_.Add(other.formatSchemas_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            formatSchemas_.AddEntriesFrom(input, _repeated_formatSchemas_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateFormatSchemaRequest : pb::IMessage<CreateFormatSchemaRequest> {
    private static readonly pb::MessageParser<CreateFormatSchemaRequest> _parser = new pb::MessageParser<CreateFormatSchemaRequest>(() => new CreateFormatSchemaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFormatSchemaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFormatSchemaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFormatSchemaRequest(CreateFormatSchemaRequest other) : this() {
      clusterId_ = other.clusterId_;
      formatSchemaName_ = other.formatSchemaName_;
      type_ = other.type_;
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFormatSchemaRequest Clone() {
      return new CreateFormatSchemaRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format_schema_name" field.</summary>
    public const int FormatSchemaNameFieldNumber = 2;
    private string formatSchemaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormatSchemaName {
      get { return formatSchemaName_; }
      set {
        formatSchemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 3;
    private global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaType type_ = global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaType.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 4;
    private string uri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFormatSchemaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFormatSchemaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (FormatSchemaName != other.FormatSchemaName) return false;
      if (Type != other.Type) return false;
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (FormatSchemaName.Length != 0) hash ^= FormatSchemaName.GetHashCode();
      if (Type != global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaType.Unspecified) hash ^= Type.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FormatSchemaName);
      }
      if (Type != global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaType.Unspecified) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Type);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatSchemaName);
      }
      if (Type != global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaType.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFormatSchemaRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.FormatSchemaName.Length != 0) {
        FormatSchemaName = other.FormatSchemaName;
      }
      if (other.Type != global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaType.Unspecified) {
        Type = other.Type;
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            FormatSchemaName = input.ReadString();
            break;
          }
          case 24: {
            Type = (global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaType) input.ReadEnum();
            break;
          }
          case 34: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateFormatSchemaMetadata : pb::IMessage<CreateFormatSchemaMetadata> {
    private static readonly pb::MessageParser<CreateFormatSchemaMetadata> _parser = new pb::MessageParser<CreateFormatSchemaMetadata>(() => new CreateFormatSchemaMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFormatSchemaMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFormatSchemaMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFormatSchemaMetadata(CreateFormatSchemaMetadata other) : this() {
      clusterId_ = other.clusterId_;
      formatSchemaName_ = other.formatSchemaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFormatSchemaMetadata Clone() {
      return new CreateFormatSchemaMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format_schema_name" field.</summary>
    public const int FormatSchemaNameFieldNumber = 2;
    private string formatSchemaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormatSchemaName {
      get { return formatSchemaName_; }
      set {
        formatSchemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFormatSchemaMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFormatSchemaMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (FormatSchemaName != other.FormatSchemaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (FormatSchemaName.Length != 0) hash ^= FormatSchemaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FormatSchemaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatSchemaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFormatSchemaMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.FormatSchemaName.Length != 0) {
        FormatSchemaName = other.FormatSchemaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            FormatSchemaName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateFormatSchemaRequest : pb::IMessage<UpdateFormatSchemaRequest> {
    private static readonly pb::MessageParser<UpdateFormatSchemaRequest> _parser = new pb::MessageParser<UpdateFormatSchemaRequest>(() => new UpdateFormatSchemaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFormatSchemaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFormatSchemaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFormatSchemaRequest(UpdateFormatSchemaRequest other) : this() {
      clusterId_ = other.clusterId_;
      formatSchemaName_ = other.formatSchemaName_;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      uri_ = other.uri_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFormatSchemaRequest Clone() {
      return new UpdateFormatSchemaRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format_schema_name" field.</summary>
    public const int FormatSchemaNameFieldNumber = 2;
    private string formatSchemaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormatSchemaName {
      get { return formatSchemaName_; }
      set {
        formatSchemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "uri" field.</summary>
    public const int UriFieldNumber = 4;
    private string uri_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Uri {
      get { return uri_; }
      set {
        uri_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFormatSchemaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFormatSchemaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (FormatSchemaName != other.FormatSchemaName) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (Uri != other.Uri) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (FormatSchemaName.Length != 0) hash ^= FormatSchemaName.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (Uri.Length != 0) hash ^= Uri.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FormatSchemaName);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(UpdateMask);
      }
      if (Uri.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Uri);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatSchemaName);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (Uri.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Uri);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFormatSchemaRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.FormatSchemaName.Length != 0) {
        FormatSchemaName = other.FormatSchemaName;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.Uri.Length != 0) {
        Uri = other.Uri;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            FormatSchemaName = input.ReadString();
            break;
          }
          case 26: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 34: {
            Uri = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateFormatSchemaMetadata : pb::IMessage<UpdateFormatSchemaMetadata> {
    private static readonly pb::MessageParser<UpdateFormatSchemaMetadata> _parser = new pb::MessageParser<UpdateFormatSchemaMetadata>(() => new UpdateFormatSchemaMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFormatSchemaMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFormatSchemaMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFormatSchemaMetadata(UpdateFormatSchemaMetadata other) : this() {
      clusterId_ = other.clusterId_;
      formatSchemaName_ = other.formatSchemaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFormatSchemaMetadata Clone() {
      return new UpdateFormatSchemaMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format_schema_name" field.</summary>
    public const int FormatSchemaNameFieldNumber = 2;
    private string formatSchemaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormatSchemaName {
      get { return formatSchemaName_; }
      set {
        formatSchemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFormatSchemaMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFormatSchemaMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (FormatSchemaName != other.FormatSchemaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (FormatSchemaName.Length != 0) hash ^= FormatSchemaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FormatSchemaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatSchemaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFormatSchemaMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.FormatSchemaName.Length != 0) {
        FormatSchemaName = other.FormatSchemaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            FormatSchemaName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteFormatSchemaRequest : pb::IMessage<DeleteFormatSchemaRequest> {
    private static readonly pb::MessageParser<DeleteFormatSchemaRequest> _parser = new pb::MessageParser<DeleteFormatSchemaRequest>(() => new DeleteFormatSchemaRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFormatSchemaRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFormatSchemaRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFormatSchemaRequest(DeleteFormatSchemaRequest other) : this() {
      clusterId_ = other.clusterId_;
      formatSchemaName_ = other.formatSchemaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFormatSchemaRequest Clone() {
      return new DeleteFormatSchemaRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format_schema_name" field.</summary>
    public const int FormatSchemaNameFieldNumber = 2;
    private string formatSchemaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormatSchemaName {
      get { return formatSchemaName_; }
      set {
        formatSchemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFormatSchemaRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFormatSchemaRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (FormatSchemaName != other.FormatSchemaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (FormatSchemaName.Length != 0) hash ^= FormatSchemaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FormatSchemaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatSchemaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFormatSchemaRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.FormatSchemaName.Length != 0) {
        FormatSchemaName = other.FormatSchemaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            FormatSchemaName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteFormatSchemaMetadata : pb::IMessage<DeleteFormatSchemaMetadata> {
    private static readonly pb::MessageParser<DeleteFormatSchemaMetadata> _parser = new pb::MessageParser<DeleteFormatSchemaMetadata>(() => new DeleteFormatSchemaMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFormatSchemaMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.FormatSchemaServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFormatSchemaMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFormatSchemaMetadata(DeleteFormatSchemaMetadata other) : this() {
      clusterId_ = other.clusterId_;
      formatSchemaName_ = other.formatSchemaName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFormatSchemaMetadata Clone() {
      return new DeleteFormatSchemaMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "format_schema_name" field.</summary>
    public const int FormatSchemaNameFieldNumber = 2;
    private string formatSchemaName_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FormatSchemaName {
      get { return formatSchemaName_; }
      set {
        formatSchemaName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFormatSchemaMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFormatSchemaMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (FormatSchemaName != other.FormatSchemaName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (FormatSchemaName.Length != 0) hash ^= FormatSchemaName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FormatSchemaName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (FormatSchemaName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FormatSchemaName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFormatSchemaMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.FormatSchemaName.Length != 0) {
        FormatSchemaName = other.FormatSchemaName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            FormatSchemaName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
