// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/mdb/mysql/v1alpha/cluster_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Yandex.Cloud.Mdb.Mysql.V1Alpha {
  /// <summary>
  /// A set of methods for managing MySQL clusters.
  /// </summary>
  internal static partial class ClusterService
  {
    static readonly string __ServiceName = "yandex.cloud.mdb.mysql.v1alpha.ClusterService";

    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.GetClusterRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_GetClusterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.GetClusterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.Cluster> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_Cluster = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.Cluster.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClustersRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersResponse> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClustersResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.CreateClusterRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_CreateClusterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.CreateClusterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Operation.Operation> __Marshaller_yandex_cloud_operation_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Operation.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.UpdateClusterRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_UpdateClusterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.UpdateClusterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_DeleteClusterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StartClusterRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_StartClusterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StartClusterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StopClusterRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_StopClusterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StopClusterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.BackupClusterRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_BackupClusterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.BackupClusterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.RestoreClusterRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_RestoreClusterRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.RestoreClusterRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterLogsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsResponse> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterLogsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterOperationsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsResponse> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterOperationsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterBackupsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsResponse> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterBackupsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterHostsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsResponse> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterHostsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.AddClusterHostsRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_AddClusterHostsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.AddClusterHostsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterHostsRequest> __Marshaller_yandex_cloud_mdb_mysql_v1alpha_DeleteClusterHostsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterHostsRequest.Parser.ParseFrom);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.GetClusterRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.Cluster> __Method_Get = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.GetClusterRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.Cluster>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_GetClusterRequest,
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_Cluster);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersResponse> __Method_List = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClustersRequest,
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClustersResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.CreateClusterRequest, global::Yandex.Cloud.Operation.Operation> __Method_Create = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.CreateClusterRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_CreateClusterRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.UpdateClusterRequest, global::Yandex.Cloud.Operation.Operation> __Method_Update = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.UpdateClusterRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_UpdateClusterRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterRequest, global::Yandex.Cloud.Operation.Operation> __Method_Delete = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_DeleteClusterRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StartClusterRequest, global::Yandex.Cloud.Operation.Operation> __Method_Start = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StartClusterRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Start",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_StartClusterRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StopClusterRequest, global::Yandex.Cloud.Operation.Operation> __Method_Stop = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StopClusterRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Stop",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_StopClusterRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.BackupClusterRequest, global::Yandex.Cloud.Operation.Operation> __Method_Backup = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.BackupClusterRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Backup",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_BackupClusterRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.RestoreClusterRequest, global::Yandex.Cloud.Operation.Operation> __Method_Restore = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.RestoreClusterRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Restore",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_RestoreClusterRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsResponse> __Method_ListLogs = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListLogs",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterLogsRequest,
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterLogsResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsResponse> __Method_ListOperations = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOperations",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterOperationsRequest,
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterOperationsResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsResponse> __Method_ListBackups = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListBackups",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterBackupsRequest,
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterBackupsResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsResponse> __Method_ListHosts = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsRequest, global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListHosts",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterHostsRequest,
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_ListClusterHostsResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.AddClusterHostsRequest, global::Yandex.Cloud.Operation.Operation> __Method_AddHosts = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.AddClusterHostsRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "AddHosts",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_AddClusterHostsRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterHostsRequest, global::Yandex.Cloud.Operation.Operation> __Method_DeleteHosts = new grpc::Method<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterHostsRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "DeleteHosts",
        __Marshaller_yandex_cloud_mdb_mysql_v1alpha_DeleteClusterHostsRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ClusterServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for ClusterService</summary>
    public partial class ClusterServiceClient : grpc::ClientBase<ClusterServiceClient>
    {
      /// <summary>Creates a new client for ClusterService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public ClusterServiceClient(grpc::ChannelBase channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for ClusterService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public ClusterServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected ClusterServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected ClusterServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the specified MySQL cluster.
      ///
      /// To get the list of available MySQL clusters, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.Cluster Get(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.GetClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified MySQL cluster.
      ///
      /// To get the list of available MySQL clusters, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.Cluster Get(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.GetClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Returns the specified MySQL cluster.
      ///
      /// To get the list of available MySQL clusters, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.Cluster> GetAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.GetClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified MySQL cluster.
      ///
      /// To get the list of available MySQL clusters, make a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.Cluster> GetAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.GetClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of MySQL clusters that belong to the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersResponse List(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of MySQL clusters that belong to the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersResponse List(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of MySQL clusters that belong to the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersResponse> ListAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of MySQL clusters that belong to the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersResponse> ListAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClustersRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// Creates a MySQL cluster in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Create(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.CreateClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a MySQL cluster in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Create(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.CreateClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      /// <summary>
      /// Creates a MySQL cluster in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> CreateAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.CreateClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a MySQL cluster in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> CreateAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.CreateClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      /// <summary>
      /// Modifies the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Update(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.UpdateClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modifies the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Update(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.UpdateClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      /// <summary>
      /// Modifies the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.UpdateClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Modifies the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.UpdateClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      /// <summary>
      /// Deletes the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Delete(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Delete(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      /// Deletes the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DeleteAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DeleteAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      /// Starts the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Start(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StartClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Start(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Start(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StartClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Start, null, options, request);
      }
      /// <summary>
      /// Starts the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> StartAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StartClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StartAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Starts the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> StartAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StartClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Start, null, options, request);
      }
      /// <summary>
      /// Stops the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Stop(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StopClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Stop(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Stop(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StopClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>
      /// Stops the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> StopAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StopClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return StopAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Stops the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> StopAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.StopClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Stop, null, options, request);
      }
      /// <summary>
      /// Creates a backup for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Backup(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.BackupClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Backup(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a backup for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Backup(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.BackupClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Backup, null, options, request);
      }
      /// <summary>
      /// Creates a backup for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> BackupAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.BackupClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return BackupAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a backup for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> BackupAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.BackupClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Backup, null, options, request);
      }
      /// <summary>
      /// Creates a new MySQL cluster using the specified backup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Restore(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.RestoreClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Restore(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new MySQL cluster using the specified backup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Restore(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.RestoreClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Restore, null, options, request);
      }
      /// <summary>
      /// Creates a new MySQL cluster using the specified backup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> RestoreAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.RestoreClusterRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return RestoreAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a new MySQL cluster using the specified backup.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> RestoreAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.RestoreClusterRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Restore, null, options, request);
      }
      /// <summary>
      /// Retrieves logs for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsResponse ListLogs(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLogs(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves logs for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsResponse ListLogs(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListLogs, null, options, request);
      }
      /// <summary>
      /// Retrieves logs for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsResponse> ListLogsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListLogsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves logs for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsResponse> ListLogsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterLogsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListLogs, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of operations for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsResponse ListOperations(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of operations for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsResponse ListOperations(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOperations, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of operations for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsResponse> ListOperationsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of operations for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsResponse> ListOperationsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOperations, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of available backups for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsResponse ListBackups(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBackups(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of available backups for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsResponse ListBackups(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListBackups, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of available backups for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsResponse> ListBackupsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListBackupsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of available backups for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsResponse> ListBackupsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterBackupsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListBackups, null, options, request);
      }
      /// <summary>
      /// Retrieves a list of hosts for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsResponse ListHosts(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListHosts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a list of hosts for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsResponse ListHosts(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListHosts, null, options, request);
      }
      /// <summary>
      /// Retrieves a list of hosts for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsResponse> ListHostsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListHostsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves a list of hosts for the specified MySQL cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsResponse> ListHostsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.ListClusterHostsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListHosts, null, options, request);
      }
      /// <summary>
      /// Creates new hosts for a cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation AddHosts(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.AddClusterHostsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddHosts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates new hosts for a cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation AddHosts(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.AddClusterHostsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_AddHosts, null, options, request);
      }
      /// <summary>
      /// Creates new hosts for a cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> AddHostsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.AddClusterHostsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return AddHostsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates new hosts for a cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> AddHostsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.AddClusterHostsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_AddHosts, null, options, request);
      }
      /// <summary>
      /// Deletes the specified hosts for a cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation DeleteHosts(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterHostsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHosts(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified hosts for a cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation DeleteHosts(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterHostsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_DeleteHosts, null, options, request);
      }
      /// <summary>
      /// Deletes the specified hosts for a cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DeleteHostsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterHostsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteHostsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified hosts for a cluster.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DeleteHostsAsync(global::Yandex.Cloud.Mdb.Mysql.V1Alpha.DeleteClusterHostsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_DeleteHosts, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override ClusterServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new ClusterServiceClient(configuration);
      }
    }

  }
}
#endregion
