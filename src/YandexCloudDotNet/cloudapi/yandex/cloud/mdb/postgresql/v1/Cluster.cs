// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/mdb/postgresql/v1/cluster.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Mdb.Postgresql.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/mdb/postgresql/v1/cluster.proto</summary>
  internal static partial class ClusterReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/mdb/postgresql/v1/cluster.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClusterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cix5YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvY2x1c3Rlci5wcm90",
            "bxIeeWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxGh9nb29nbGUvcHJv",
            "dG9idWYvdGltZXN0YW1wLnByb3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBl",
            "cnMucHJvdG8aG2dvb2dsZS90eXBlL3RpbWVvZmRheS5wcm90bxo5eWFuZGV4",
            "L2Nsb3VkL21kYi9wb3N0Z3Jlc3FsL3YxL2NvbmZpZy9wb3N0Z3Jlc3FsOV82",
            "LnByb3RvGjh5YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvY29uZmln",
            "L3Bvc3RncmVzcWwxMC5wcm90bxo7eWFuZGV4L2Nsb3VkL21kYi9wb3N0Z3Jl",
            "c3FsL3YxL2NvbmZpZy9wb3N0Z3Jlc3FsMTBfMWMucHJvdG8aOHlhbmRleC9j",
            "bG91ZC9tZGIvcG9zdGdyZXNxbC92MS9jb25maWcvcG9zdGdyZXNxbDExLnBy",
            "b3RvGjh5YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvY29uZmlnL3Bv",
            "c3RncmVzcWwxMi5wcm90bxozeWFuZGV4L2Nsb3VkL21kYi9wb3N0Z3Jlc3Fs",
            "L3YxL2NvbmZpZy9ob3N0OV82LnByb3RvGjJ5YW5kZXgvY2xvdWQvbWRiL3Bv",
            "c3RncmVzcWwvdjEvY29uZmlnL2hvc3QxMC5wcm90bxo1eWFuZGV4L2Nsb3Vk",
            "L21kYi9wb3N0Z3Jlc3FsL3YxL2NvbmZpZy9ob3N0MTBfMWMucHJvdG8aMnlh",
            "bmRleC9jbG91ZC9tZGIvcG9zdGdyZXNxbC92MS9jb25maWcvaG9zdDExLnBy",
            "b3RvGjJ5YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvY29uZmlnL2hv",
            "c3QxMi5wcm90byLTBgoHQ2x1c3RlchIKCgJpZBgBIAEoCRIRCglmb2xkZXJf",
            "aWQYAiABKAkSLgoKY3JlYXRlZF9hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASDAoEbmFtZRgEIAEoCRITCgtkZXNjcmlwdGlvbhgFIAEo",
            "CRJDCgZsYWJlbHMYBiADKAsyMy55YW5kZXguY2xvdWQubWRiLnBvc3RncmVz",
            "cWwudjEuQ2x1c3Rlci5MYWJlbHNFbnRyeRJICgtlbnZpcm9ubWVudBgHIAEo",
            "DjIzLnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5DbHVzdGVyLkVu",
            "dmlyb25tZW50Ej4KCm1vbml0b3JpbmcYCCADKAsyKi55YW5kZXguY2xvdWQu",
            "bWRiLnBvc3RncmVzcWwudjEuTW9uaXRvcmluZxI9CgZjb25maWcYCSABKAsy",
            "LS55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuQ2x1c3RlckNvbmZp",
            "ZxISCgpuZXR3b3JrX2lkGAogASgJEj4KBmhlYWx0aBgLIAEoDjIuLnlhbmRl",
            "eC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5DbHVzdGVyLkhlYWx0aBI+CgZz",
            "dGF0dXMYDCABKA4yLi55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEu",
            "Q2x1c3Rlci5TdGF0dXMaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJEg0K",
            "BXZhbHVlGAIgASgJOgI4ASJJCgtFbnZpcm9ubWVudBIbChdFTlZJUk9OTUVO",
            "VF9VTlNQRUNJRklFRBAAEg4KClBST0RVQ1RJT04QARINCglQUkVTVEFCTEUQ",
            "AiI/CgZIZWFsdGgSEgoOSEVBTFRIX1VOS05PV04QABIJCgVBTElWRRABEggK",
            "BERFQUQQAhIMCghERUdSQURFRBADInkKBlN0YXR1cxISCg5TVEFUVVNfVU5L",
            "Tk9XThAAEgwKCENSRUFUSU5HEAESCwoHUlVOTklORxACEgkKBUVSUk9SEAMS",
            "DAoIVVBEQVRJTkcQBBIMCghTVE9QUElORxAFEgsKB1NUT1BQRUQQBhIMCghT",
            "VEFSVElORxAHIj0KCk1vbml0b3JpbmcSDAoEbmFtZRgBIAEoCRITCgtkZXNj",
            "cmlwdGlvbhgCIAEoCRIMCgRsaW5rGAMgASgJIr8GCg1DbHVzdGVyQ29uZmln",
            "Eg8KB3ZlcnNpb24YASABKAkSXgoVcG9zdGdyZXNxbF9jb25maWdfOV82GAIg",
            "ASgLMj0ueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Q",
            "b3N0Z3Jlc3FsQ29uZmlnU2V0OV82SAASYgoXcG9zdGdyZXNxbF9jb25maWdf",
            "MTBfMWMYCiABKAsyPy55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEu",
            "Y29uZmlnLlBvc3RncmVzcWxDb25maWdTZXQxMF8xQ0gAElwKFHBvc3RncmVz",
            "cWxfY29uZmlnXzEwGAMgASgLMjwueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jl",
            "c3FsLnYxLmNvbmZpZy5Qb3N0Z3Jlc3FsQ29uZmlnU2V0MTBIABJcChRwb3N0",
            "Z3Jlc3FsX2NvbmZpZ18xMRgIIAEoCzI8LnlhbmRleC5jbG91ZC5tZGIucG9z",
            "dGdyZXNxbC52MS5jb25maWcuUG9zdGdyZXNxbENvbmZpZ1NldDExSAASXAoU",
            "cG9zdGdyZXNxbF9jb25maWdfMTIYCyABKAsyPC55YW5kZXguY2xvdWQubWRi",
            "LnBvc3RncmVzcWwudjEuY29uZmlnLlBvc3RncmVzcWxDb25maWdTZXQxMkgA",
            "Ek0KDXBvb2xlcl9jb25maWcYBCABKAsyNi55YW5kZXguY2xvdWQubWRiLnBv",
            "c3RncmVzcWwudjEuQ29ubmVjdGlvblBvb2xlckNvbmZpZxI8CglyZXNvdXJj",
            "ZXMYBSABKAsyKS55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuUmVz",
            "b3VyY2VzEjAKDGF1dG9mYWlsb3ZlchgGIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5Cb29sVmFsdWUSMwoTYmFja3VwX3dpbmRvd19zdGFydBgHIAEoCzIWLmdv",
            "b2dsZS50eXBlLlRpbWVPZkRheRI2CgZhY2Nlc3MYCSABKAsyJi55YW5kZXgu",
            "Y2xvdWQubWRiLnBvc3RncmVzcWwudjEuQWNjZXNzQhMKEXBvc3RncmVzcWxf",
            "Y29uZmlnIv4BChZDb25uZWN0aW9uUG9vbGVyQ29uZmlnElgKDHBvb2xpbmdf",
            "bW9kZRgBIAEoDjJCLnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5D",
            "b25uZWN0aW9uUG9vbGVyQ29uZmlnLlBvb2xpbmdNb2RlEjAKDHBvb2xfZGlz",
            "Y2FyZBgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUiWAoLUG9v",
            "bGluZ01vZGUSHAoYUE9PTElOR19NT0RFX1VOU1BFQ0lGSUVEEAASCwoHU0VT",
            "U0lPThABEg8KC1RSQU5TQUNUSU9OEAISDQoJU1RBVEVNRU5UEAMi1gUKBEhv",
            "c3QSDAoEbmFtZRgBIAEoCRISCgpjbHVzdGVyX2lkGAIgASgJEg8KB3pvbmVf",
            "aWQYAyABKAkSPAoJcmVzb3VyY2VzGAQgASgLMikueWFuZGV4LmNsb3VkLm1k",
            "Yi5wb3N0Z3Jlc3FsLnYxLlJlc291cmNlcxI3CgRyb2xlGAUgASgOMikueWFu",
            "ZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkhvc3QuUm9sZRI7CgZoZWFs",
            "dGgYBiABKA4yKy55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuSG9z",
            "dC5IZWFsdGgSOQoIc2VydmljZXMYByADKAsyJy55YW5kZXguY2xvdWQubWRi",
            "LnBvc3RncmVzcWwudjEuU2VydmljZRIRCglzdWJuZXRfaWQYCCABKAkSGgoS",
            "cmVwbGljYXRpb25fc291cmNlGAkgASgJEi0KCHByaW9yaXR5GAogASgLMhsu",
            "Z29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSOgoGY29uZmlnGAsgASgLMiou",
            "eWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkhvc3RDb25maWcSGAoQ",
            "YXNzaWduX3B1YmxpY19pcBgMIAEoCBJGCgxyZXBsaWNhX3R5cGUYDSABKA4y",
            "MC55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuSG9zdC5SZXBsaWNh",
            "VHlwZSIxCgRSb2xlEhAKDFJPTEVfVU5LTk9XThAAEgoKBk1BU1RFUhABEgsK",
            "B1JFUExJQ0EQAiI8CgtSZXBsaWNhVHlwZRIYChRSRVBMSUNBX1RZUEVfVU5L",
            "Tk9XThAAEgkKBUFTWU5DEAESCAoEU1lOQxACIj8KBkhlYWx0aBISCg5IRUFM",
            "VEhfVU5LTk9XThAAEgkKBUFMSVZFEAESCAoEREVBRBACEgwKCERFR1JBREVE",
            "EAMihAQKCkhvc3RDb25maWcSXwoVcG9zdGdyZXNxbF9jb25maWdfOV82GAEg",
            "ASgLMj4ueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Q",
            "b3N0Z3Jlc3FsSG9zdENvbmZpZzlfNkgAEmMKF3Bvc3RncmVzcWxfY29uZmln",
            "XzEwXzFjGAQgASgLMkAueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYx",
            "LmNvbmZpZy5Qb3N0Z3Jlc3FsSG9zdENvbmZpZzEwXzFDSAASXQoUcG9zdGdy",
            "ZXNxbF9jb25maWdfMTAYAiABKAsyPS55YW5kZXguY2xvdWQubWRiLnBvc3Rn",
            "cmVzcWwudjEuY29uZmlnLlBvc3RncmVzcWxIb3N0Q29uZmlnMTBIABJdChRw",
            "b3N0Z3Jlc3FsX2NvbmZpZ18xMRgDIAEoCzI9LnlhbmRleC5jbG91ZC5tZGIu",
            "cG9zdGdyZXNxbC52MS5jb25maWcuUG9zdGdyZXNxbEhvc3RDb25maWcxMUgA",
            "El0KFHBvc3RncmVzcWxfY29uZmlnXzEyGAUgASgLMj0ueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0Z3Jlc3FsSG9zdENvbmZp",
            "ZzEySABCEwoRcG9zdGdyZXNxbF9jb25maWci8gEKB1NlcnZpY2USOgoEdHlw",
            "ZRgBIAEoDjIsLnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5TZXJ2",
            "aWNlLlR5cGUSPgoGaGVhbHRoGAIgASgOMi4ueWFuZGV4LmNsb3VkLm1kYi5w",
            "b3N0Z3Jlc3FsLnYxLlNlcnZpY2UuSGVhbHRoIjgKBFR5cGUSFAoQVFlQRV9V",
            "TlNQRUNJRklFRBAAEg4KClBPU1RHUkVTUUwQARIKCgZQT09MRVIQAiIxCgZI",
            "ZWFsdGgSEgoOSEVBTFRIX1VOS05PV04QABIJCgVBTElWRRABEggKBERFQUQQ",
            "AiJQCglSZXNvdXJjZXMSGgoScmVzb3VyY2VfcHJlc2V0X2lkGAEgASgJEhEK",
            "CWRpc2tfc2l6ZRgCIAEoAxIUCgxkaXNrX3R5cGVfaWQYAyABKAkiGwoGQWNj",
            "ZXNzEhEKCWRhdGFfbGVucxgBIAEoCEJzCiJ5YW5kZXguY2xvdWQuYXBpLm1k",
            "Yi5wb3N0Z3Jlc3FsLnYxWk1naXRodWIuY29tL3lhbmRleC1jbG91ZC9nby1n",
            "ZW5wcm90by95YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjE7cG9zdGdy",
            "ZXNxbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql96Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql10Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql101CReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql11Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql12Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host96Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host10Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host101CReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host11Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host12Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster), global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Parser, new[]{ "Id", "FolderId", "CreatedAt", "Name", "Description", "Labels", "Environment", "Monitoring", "Config", "NetworkId", "Health", "Status" }, null, new[]{ typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Health), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Monitoring), global::Yandex.Cloud.Mdb.Postgresql.V1.Monitoring.Parser, new[]{ "Name", "Description", "Link" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterConfig), global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterConfig.Parser, new[]{ "Version", "PostgresqlConfig96", "PostgresqlConfig101C", "PostgresqlConfig10", "PostgresqlConfig11", "PostgresqlConfig12", "PoolerConfig", "Resources", "Autofailover", "BackupWindowStart", "Access" }, new[]{ "PostgresqlConfig" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig), global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig.Parser, new[]{ "PoolingMode", "PoolDiscard" }, null, new[]{ typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig.Types.PoolingMode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Host), global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Parser, new[]{ "Name", "ClusterId", "ZoneId", "Resources", "Role", "Health", "Services", "SubnetId", "ReplicationSource", "Priority", "Config", "AssignPublicIp", "ReplicaType" }, null, new[]{ typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.Role), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.ReplicaType), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.Health) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.HostConfig), global::Yandex.Cloud.Mdb.Postgresql.V1.HostConfig.Parser, new[]{ "PostgresqlConfig96", "PostgresqlConfig101C", "PostgresqlConfig10", "PostgresqlConfig11", "PostgresqlConfig12" }, new[]{ "PostgresqlConfig" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Service), global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Parser, new[]{ "Type", "Health" }, null, new[]{ typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Types.Type), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Types.Health) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Resources), global::Yandex.Cloud.Mdb.Postgresql.V1.Resources.Parser, new[]{ "ResourcePresetId", "DiskSize", "DiskTypeId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Access), global::Yandex.Cloud.Mdb.Postgresql.V1.Access.Parser, new[]{ "DataLens" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A PostgreSQL Cluster resource. For more information, see
  /// the [Concepts](/docs/managed-postgresql/concepts) section of the documentation.
  /// </summary>
  internal sealed partial class Cluster : pb::IMessage<Cluster> {
    private static readonly pb::MessageParser<Cluster> _parser = new pb::MessageParser<Cluster>(() => new Cluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster(Cluster other) : this() {
      id_ = other.id_;
      folderId_ = other.folderId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      environment_ = other.environment_;
      monitoring_ = other.monitoring_.Clone();
      config_ = other.config_ != null ? other.config_.Clone() : null;
      networkId_ = other.networkId_;
      health_ = other.health_;
      status_ = other.status_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster Clone() {
      return new Cluster(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster.
    /// This ID is assigned by MDB at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder that the PostgreSQL cluster belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Name of the PostgreSQL cluster.
    /// The name is unique within the folder. 1-63 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of the PostgreSQL cluster. 0-256 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom labels for the PostgreSQL cluster as `` key:value `` pairs.
    /// Maximum 64 per resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "environment" field.</summary>
    public const int EnvironmentFieldNumber = 7;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment environment_ = 0;
    /// <summary>
    /// Deployment environment of the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment Environment {
      get { return environment_; }
      set {
        environment_ = value;
      }
    }

    /// <summary>Field number for the "monitoring" field.</summary>
    public const int MonitoringFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Monitoring> _repeated_monitoring_codec
        = pb::FieldCodec.ForMessage(66, global::Yandex.Cloud.Mdb.Postgresql.V1.Monitoring.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Monitoring> monitoring_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Monitoring>();
    /// <summary>
    /// Description of monitoring systems relevant to the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Monitoring> Monitoring {
      get { return monitoring_; }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 9;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterConfig config_;
    /// <summary>
    /// Configuration of the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "network_id" field.</summary>
    public const int NetworkIdFieldNumber = 10;
    private string networkId_ = "";
    /// <summary>
    /// ID of the network that the cluster belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkId {
      get { return networkId_; }
      set {
        networkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 11;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Health health_ = 0;
    /// <summary>
    /// Aggregated cluster health.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Health Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 12;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Status status_ = 0;
    /// <summary>
    /// Current state of the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FolderId != other.FolderId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (Environment != other.Environment) return false;
      if(!monitoring_.Equals(other.monitoring_)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (NetworkId != other.NetworkId) return false;
      if (Health != other.Health) return false;
      if (Status != other.Status) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (Environment != 0) hash ^= Environment.GetHashCode();
      hash ^= monitoring_.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (NetworkId.Length != 0) hash ^= NetworkId.GetHashCode();
      if (Health != 0) hash ^= Health.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FolderId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (Environment != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Environment);
      }
      monitoring_.WriteTo(output, _repeated_monitoring_codec);
      if (config_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Config);
      }
      if (NetworkId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(NetworkId);
      }
      if (Health != 0) {
        output.WriteRawTag(88);
        output.WriteEnum((int) Health);
      }
      if (Status != 0) {
        output.WriteRawTag(96);
        output.WriteEnum((int) Status);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (Environment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Environment);
      }
      size += monitoring_.CalculateSize(_repeated_monitoring_codec);
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (NetworkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkId);
      }
      if (Health != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cluster other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      if (other.Environment != 0) {
        Environment = other.Environment;
      }
      monitoring_.Add(other.monitoring_);
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.NetworkId.Length != 0) {
        NetworkId = other.NetworkId;
      }
      if (other.Health != 0) {
        Health = other.Health;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FolderId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 56: {
            Environment = (global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment) input.ReadEnum();
            break;
          }
          case 66: {
            monitoring_.AddEntriesFrom(input, _repeated_monitoring_codec);
            break;
          }
          case 74: {
            if (config_ == null) {
              Config = new global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 82: {
            NetworkId = input.ReadString();
            break;
          }
          case 88: {
            Health = (global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Health) input.ReadEnum();
            break;
          }
          case 96: {
            Status = (global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Status) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Cluster message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Environment {
        [pbr::OriginalName("ENVIRONMENT_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Stable environment with a conservative update policy:
        /// only hotfixes are applied during regular maintenance.
        /// </summary>
        [pbr::OriginalName("PRODUCTION")] Production = 1,
        /// <summary>
        /// Environment with more aggressive update policy: new versions
        /// are rolled out irrespective of backward compatibility.
        /// </summary>
        [pbr::OriginalName("PRESTABLE")] Prestable = 2,
      }

      internal enum Health {
        /// <summary>
        /// State of the cluster is unknown ([Host.health] for every host in the cluster is UNKNOWN).
        /// </summary>
        [pbr::OriginalName("HEALTH_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Cluster is alive and well ([Host.health] for every host in the cluster is ALIVE).
        /// </summary>
        [pbr::OriginalName("ALIVE")] Alive = 1,
        /// <summary>
        /// Cluster is inoperable ([Host.health] for every host in the cluster is DEAD).
        /// </summary>
        [pbr::OriginalName("DEAD")] Dead = 2,
        /// <summary>
        /// Cluster is working below capacity ([Host.health] for at least one host in the cluster is not ALIVE).
        /// </summary>
        [pbr::OriginalName("DEGRADED")] Degraded = 3,
      }

      internal enum Status {
        /// <summary>
        /// Cluster state is unknown.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Cluster is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// Cluster is running normally.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// Cluster encountered a problem and cannot operate.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 3,
        /// <summary>
        /// Cluster is being updated.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 4,
        /// <summary>
        /// Cluster is stopping.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 5,
        /// <summary>
        /// Cluster stopped.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 6,
        /// <summary>
        /// Cluster is starting.
        /// </summary>
        [pbr::OriginalName("STARTING")] Starting = 7,
      }

    }
    #endregion

  }

  /// <summary>
  /// Monitoring system.
  /// </summary>
  internal sealed partial class Monitoring : pb::IMessage<Monitoring> {
    private static readonly pb::MessageParser<Monitoring> _parser = new pb::MessageParser<Monitoring>(() => new Monitoring());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Monitoring> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monitoring() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monitoring(Monitoring other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      link_ = other.link_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monitoring Clone() {
      return new Monitoring(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the monitoring system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Description of the monitoring system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 3;
    private string link_ = "";
    /// <summary>
    /// Link to the monitoring system charts for the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Link {
      get { return link_; }
      set {
        link_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Monitoring);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Monitoring other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Link != other.Link) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Link.Length != 0) hash ^= Link.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Link.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Link);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Link.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Link);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Monitoring other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Link.Length != 0) {
        Link = other.Link;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Link = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ClusterConfig : pb::IMessage<ClusterConfig> {
    private static readonly pb::MessageParser<ClusterConfig> _parser = new pb::MessageParser<ClusterConfig>(() => new ClusterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig(ClusterConfig other) : this() {
      version_ = other.version_;
      poolerConfig_ = other.poolerConfig_ != null ? other.poolerConfig_.Clone() : null;
      resources_ = other.resources_ != null ? other.resources_.Clone() : null;
      Autofailover = other.Autofailover;
      backupWindowStart_ = other.backupWindowStart_ != null ? other.backupWindowStart_.Clone() : null;
      access_ = other.access_ != null ? other.access_.Clone() : null;
      switch (other.PostgresqlConfigCase) {
        case PostgresqlConfigOneofCase.PostgresqlConfig96:
          PostgresqlConfig96 = other.PostgresqlConfig96.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig101C:
          PostgresqlConfig101C = other.PostgresqlConfig101C.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig10:
          PostgresqlConfig10 = other.PostgresqlConfig10.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig11:
          PostgresqlConfig11 = other.PostgresqlConfig11.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig12:
          PostgresqlConfig12 = other.PostgresqlConfig12.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig Clone() {
      return new ClusterConfig(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    /// <summary>
    /// Version of PostgreSQL server software.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "postgresql_config_9_6" field.</summary>
    public const int PostgresqlConfig96FieldNumber = 2;
    /// <summary>
    /// Configuration of a PostgreSQL 9.6 server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet9_6 PostgresqlConfig96 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet9_6) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig96;
      }
    }

    /// <summary>Field number for the "postgresql_config_10_1c" field.</summary>
    public const int PostgresqlConfig101CFieldNumber = 10;
    /// <summary>
    /// Configuration of a PostgreSQL 10 1C server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10_1C PostgresqlConfig101C {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10_1C) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig101C;
      }
    }

    /// <summary>Field number for the "postgresql_config_10" field.</summary>
    public const int PostgresqlConfig10FieldNumber = 3;
    /// <summary>
    /// Configuration of a PostgreSQL 10 server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10 PostgresqlConfig10 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig10;
      }
    }

    /// <summary>Field number for the "postgresql_config_11" field.</summary>
    public const int PostgresqlConfig11FieldNumber = 8;
    /// <summary>
    /// Configuration of a PostgreSQL 11 server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet11 PostgresqlConfig11 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet11) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig11;
      }
    }

    /// <summary>Field number for the "postgresql_config_12" field.</summary>
    public const int PostgresqlConfig12FieldNumber = 11;
    /// <summary>
    /// Configuration of a PostgreSQL 12 server.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet12 PostgresqlConfig12 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet12) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig12;
      }
    }

    /// <summary>Field number for the "pooler_config" field.</summary>
    public const int PoolerConfigFieldNumber = 4;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig poolerConfig_;
    /// <summary>
    /// Configuration of the connection pooler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig PoolerConfig {
      get { return poolerConfig_; }
      set {
        poolerConfig_ = value;
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 5;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Resources resources_;
    /// <summary>
    /// Resources allocated to PostgreSQL hosts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Resources Resources {
      get { return resources_; }
      set {
        resources_ = value;
      }
    }

    /// <summary>Field number for the "autofailover" field.</summary>
    public const int AutofailoverFieldNumber = 6;
    private static readonly pb::FieldCodec<bool?> _single_autofailover_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
    private bool? autofailover_;
    /// <summary>
    /// Configuration setting which enables/disables autofailover in cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Autofailover {
      get { return autofailover_; }
      set {
        autofailover_ = value;
      }
    }


    /// <summary>Field number for the "backup_window_start" field.</summary>
    public const int BackupWindowStartFieldNumber = 7;
    private global::Google.Type.TimeOfDay backupWindowStart_;
    /// <summary>
    /// Time to start the daily backup, in the UTC timezone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.TimeOfDay BackupWindowStart {
      get { return backupWindowStart_; }
      set {
        backupWindowStart_ = value;
      }
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 9;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Access access_;
    /// <summary>
    /// Access policy to DB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Access Access {
      get { return access_; }
      set {
        access_ = value;
      }
    }

    private object postgresqlConfig_;
    /// <summary>Enum of possible cases for the "postgresql_config" oneof.</summary>
    public enum PostgresqlConfigOneofCase {
      None = 0,
      PostgresqlConfig96 = 2,
      PostgresqlConfig101C = 10,
      PostgresqlConfig10 = 3,
      PostgresqlConfig11 = 8,
      PostgresqlConfig12 = 11,
    }
    private PostgresqlConfigOneofCase postgresqlConfigCase_ = PostgresqlConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresqlConfigOneofCase PostgresqlConfigCase {
      get { return postgresqlConfigCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostgresqlConfig() {
      postgresqlConfigCase_ = PostgresqlConfigOneofCase.None;
      postgresqlConfig_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(PostgresqlConfig96, other.PostgresqlConfig96)) return false;
      if (!object.Equals(PostgresqlConfig101C, other.PostgresqlConfig101C)) return false;
      if (!object.Equals(PostgresqlConfig10, other.PostgresqlConfig10)) return false;
      if (!object.Equals(PostgresqlConfig11, other.PostgresqlConfig11)) return false;
      if (!object.Equals(PostgresqlConfig12, other.PostgresqlConfig12)) return false;
      if (!object.Equals(PoolerConfig, other.PoolerConfig)) return false;
      if (!object.Equals(Resources, other.Resources)) return false;
      if (Autofailover != other.Autofailover) return false;
      if (!object.Equals(BackupWindowStart, other.BackupWindowStart)) return false;
      if (!object.Equals(Access, other.Access)) return false;
      if (PostgresqlConfigCase != other.PostgresqlConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) hash ^= PostgresqlConfig96.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) hash ^= PostgresqlConfig101C.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) hash ^= PostgresqlConfig10.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) hash ^= PostgresqlConfig11.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) hash ^= PostgresqlConfig12.GetHashCode();
      if (poolerConfig_ != null) hash ^= PoolerConfig.GetHashCode();
      if (resources_ != null) hash ^= Resources.GetHashCode();
      if (autofailover_ != null) hash ^= Autofailover.GetHashCode();
      if (backupWindowStart_ != null) hash ^= BackupWindowStart.GetHashCode();
      if (access_ != null) hash ^= Access.GetHashCode();
      hash ^= (int) postgresqlConfigCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
        output.WriteRawTag(18);
        output.WriteMessage(PostgresqlConfig96);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
        output.WriteRawTag(26);
        output.WriteMessage(PostgresqlConfig10);
      }
      if (poolerConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PoolerConfig);
      }
      if (resources_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Resources);
      }
      if (autofailover_ != null) {
        _single_autofailover_codec.WriteTagAndValue(output, Autofailover);
      }
      if (backupWindowStart_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(BackupWindowStart);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
        output.WriteRawTag(66);
        output.WriteMessage(PostgresqlConfig11);
      }
      if (access_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Access);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
        output.WriteRawTag(82);
        output.WriteMessage(PostgresqlConfig101C);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
        output.WriteRawTag(90);
        output.WriteMessage(PostgresqlConfig12);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig96);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig101C);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig10);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig11);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig12);
      }
      if (poolerConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolerConfig);
      }
      if (resources_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resources);
      }
      if (autofailover_ != null) {
        size += _single_autofailover_codec.CalculateSizeWithTag(Autofailover);
      }
      if (backupWindowStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackupWindowStart);
      }
      if (access_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Access);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterConfig other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.poolerConfig_ != null) {
        if (poolerConfig_ == null) {
          PoolerConfig = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig();
        }
        PoolerConfig.MergeFrom(other.PoolerConfig);
      }
      if (other.resources_ != null) {
        if (resources_ == null) {
          Resources = new global::Yandex.Cloud.Mdb.Postgresql.V1.Resources();
        }
        Resources.MergeFrom(other.Resources);
      }
      if (other.autofailover_ != null) {
        if (autofailover_ == null || other.Autofailover != false) {
          Autofailover = other.Autofailover;
        }
      }
      if (other.backupWindowStart_ != null) {
        if (backupWindowStart_ == null) {
          BackupWindowStart = new global::Google.Type.TimeOfDay();
        }
        BackupWindowStart.MergeFrom(other.BackupWindowStart);
      }
      if (other.access_ != null) {
        if (access_ == null) {
          Access = new global::Yandex.Cloud.Mdb.Postgresql.V1.Access();
        }
        Access.MergeFrom(other.Access);
      }
      switch (other.PostgresqlConfigCase) {
        case PostgresqlConfigOneofCase.PostgresqlConfig96:
          if (PostgresqlConfig96 == null) {
            PostgresqlConfig96 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet9_6();
          }
          PostgresqlConfig96.MergeFrom(other.PostgresqlConfig96);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig101C:
          if (PostgresqlConfig101C == null) {
            PostgresqlConfig101C = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10_1C();
          }
          PostgresqlConfig101C.MergeFrom(other.PostgresqlConfig101C);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig10:
          if (PostgresqlConfig10 == null) {
            PostgresqlConfig10 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10();
          }
          PostgresqlConfig10.MergeFrom(other.PostgresqlConfig10);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig11:
          if (PostgresqlConfig11 == null) {
            PostgresqlConfig11 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet11();
          }
          PostgresqlConfig11.MergeFrom(other.PostgresqlConfig11);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig12:
          if (PostgresqlConfig12 == null) {
            PostgresqlConfig12 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet12();
          }
          PostgresqlConfig12.MergeFrom(other.PostgresqlConfig12);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet9_6 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet9_6();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
              subBuilder.MergeFrom(PostgresqlConfig96);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig96 = subBuilder;
            break;
          }
          case 26: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
              subBuilder.MergeFrom(PostgresqlConfig10);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig10 = subBuilder;
            break;
          }
          case 34: {
            if (poolerConfig_ == null) {
              PoolerConfig = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig();
            }
            input.ReadMessage(PoolerConfig);
            break;
          }
          case 42: {
            if (resources_ == null) {
              Resources = new global::Yandex.Cloud.Mdb.Postgresql.V1.Resources();
            }
            input.ReadMessage(Resources);
            break;
          }
          case 50: {
            bool? value = _single_autofailover_codec.Read(input);
            if (autofailover_ == null || value != false) {
              Autofailover = value;
            }
            break;
          }
          case 58: {
            if (backupWindowStart_ == null) {
              BackupWindowStart = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(BackupWindowStart);
            break;
          }
          case 66: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet11 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet11();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
              subBuilder.MergeFrom(PostgresqlConfig11);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig11 = subBuilder;
            break;
          }
          case 74: {
            if (access_ == null) {
              Access = new global::Yandex.Cloud.Mdb.Postgresql.V1.Access();
            }
            input.ReadMessage(Access);
            break;
          }
          case 82: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10_1C subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet10_1C();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
              subBuilder.MergeFrom(PostgresqlConfig101C);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig101C = subBuilder;
            break;
          }
          case 90: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet12 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfigSet12();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
              subBuilder.MergeFrom(PostgresqlConfig12);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig12 = subBuilder;
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ConnectionPoolerConfig : pb::IMessage<ConnectionPoolerConfig> {
    private static readonly pb::MessageParser<ConnectionPoolerConfig> _parser = new pb::MessageParser<ConnectionPoolerConfig>(() => new ConnectionPoolerConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConnectionPoolerConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionPoolerConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionPoolerConfig(ConnectionPoolerConfig other) : this() {
      poolingMode_ = other.poolingMode_;
      PoolDiscard = other.PoolDiscard;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConnectionPoolerConfig Clone() {
      return new ConnectionPoolerConfig(this);
    }

    /// <summary>Field number for the "pooling_mode" field.</summary>
    public const int PoolingModeFieldNumber = 1;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig.Types.PoolingMode poolingMode_ = 0;
    /// <summary>
    /// Mode that the connection pooler is working in.
    /// See descriptions of all modes in the [documentation for PgBouncer](https://pgbouncer.github.io/usage).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig.Types.PoolingMode PoolingMode {
      get { return poolingMode_; }
      set {
        poolingMode_ = value;
      }
    }

    /// <summary>Field number for the "pool_discard" field.</summary>
    public const int PoolDiscardFieldNumber = 2;
    private static readonly pb::FieldCodec<bool?> _single_poolDiscard_codec = pb::FieldCodec.ForStructWrapper<bool>(18);
    private bool? poolDiscard_;
    /// <summary>
    /// Setting `server_reset_query_always` parameter in PgBouncer.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? PoolDiscard {
      get { return poolDiscard_; }
      set {
        poolDiscard_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConnectionPoolerConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConnectionPoolerConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (PoolingMode != other.PoolingMode) return false;
      if (PoolDiscard != other.PoolDiscard) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (PoolingMode != 0) hash ^= PoolingMode.GetHashCode();
      if (poolDiscard_ != null) hash ^= PoolDiscard.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (PoolingMode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) PoolingMode);
      }
      if (poolDiscard_ != null) {
        _single_poolDiscard_codec.WriteTagAndValue(output, PoolDiscard);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (PoolingMode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) PoolingMode);
      }
      if (poolDiscard_ != null) {
        size += _single_poolDiscard_codec.CalculateSizeWithTag(PoolDiscard);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConnectionPoolerConfig other) {
      if (other == null) {
        return;
      }
      if (other.PoolingMode != 0) {
        PoolingMode = other.PoolingMode;
      }
      if (other.poolDiscard_ != null) {
        if (poolDiscard_ == null || other.PoolDiscard != false) {
          PoolDiscard = other.PoolDiscard;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            PoolingMode = (global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig.Types.PoolingMode) input.ReadEnum();
            break;
          }
          case 18: {
            bool? value = _single_poolDiscard_codec.Read(input);
            if (poolDiscard_ == null || value != false) {
              PoolDiscard = value;
            }
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ConnectionPoolerConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum PoolingMode {
        [pbr::OriginalName("POOLING_MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Session pooling mode.
        /// </summary>
        [pbr::OriginalName("SESSION")] Session = 1,
        /// <summary>
        /// Transaction pooling mode.
        /// </summary>
        [pbr::OriginalName("TRANSACTION")] Transaction = 2,
        /// <summary>
        /// Statement pooling mode.
        /// </summary>
        [pbr::OriginalName("STATEMENT")] Statement = 3,
      }

    }
    #endregion

  }

  internal sealed partial class Host : pb::IMessage<Host> {
    private static readonly pb::MessageParser<Host> _parser = new pb::MessageParser<Host>(() => new Host());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Host> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host(Host other) : this() {
      name_ = other.name_;
      clusterId_ = other.clusterId_;
      zoneId_ = other.zoneId_;
      resources_ = other.resources_ != null ? other.resources_.Clone() : null;
      role_ = other.role_;
      health_ = other.health_;
      services_ = other.services_.Clone();
      subnetId_ = other.subnetId_;
      replicationSource_ = other.replicationSource_;
      Priority = other.Priority;
      config_ = other.config_ != null ? other.config_.Clone() : null;
      assignPublicIp_ = other.assignPublicIp_;
      replicaType_ = other.replicaType_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host Clone() {
      return new Host(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the PostgreSQL host. The host name is assigned by MDB at creation time, and cannot be changed.
    /// 1-63 characters long.
    ///
    /// The name is unique across all existing MDB hosts in Yandex.Cloud, as it defines the FQDN of the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 2;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL host. The ID is assigned by MDB at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 3;
    private string zoneId_ = "";
    /// <summary>
    /// ID of the availability zone where the PostgreSQL host resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 4;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Resources resources_;
    /// <summary>
    /// Resources allocated to the PostgreSQL host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Resources Resources {
      get { return resources_; }
      set {
        resources_ = value;
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 5;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.Role role_ = 0;
    /// <summary>
    /// Role of the host in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.Role Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 6;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.Health health_ = 0;
    /// <summary>
    /// Status code of the aggregated health of the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.Health Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Service> _repeated_services_codec
        = pb::FieldCodec.ForMessage(58, global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Service> services_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Service>();
    /// <summary>
    /// Services provided by the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Service> Services {
      get { return services_; }
    }

    /// <summary>Field number for the "subnet_id" field.</summary>
    public const int SubnetIdFieldNumber = 8;
    private string subnetId_ = "";
    /// <summary>
    /// ID of the subnet that the host belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetId {
      get { return subnetId_; }
      set {
        subnetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replication_source" field.</summary>
    public const int ReplicationSourceFieldNumber = 9;
    private string replicationSource_ = "";
    /// <summary>
    /// Name of the host to be used as the replication source for cascading replication.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplicationSource {
      get { return replicationSource_; }
      set {
        replicationSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 10;
    private static readonly pb::FieldCodec<long?> _single_priority_codec = pb::FieldCodec.ForStructWrapper<long>(82);
    private long? priority_;
    /// <summary>
    /// Priority of the host as a replica. Higher value means higher priority.
    ///
    /// The host with the highest priority is the synchronous replica. All others are asynchronous.
    /// The synchronous replica replaces the master when needed.
    ///
    /// When a replica becomes the master, its priority is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }


    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 11;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.HostConfig config_;
    /// <summary>
    /// Configuration of a PostgreSQL server for the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.HostConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "assign_public_ip" field.</summary>
    public const int AssignPublicIpFieldNumber = 12;
    private bool assignPublicIp_;
    /// <summary>
    /// Flag showing public IP assignment status to this host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssignPublicIp {
      get { return assignPublicIp_; }
      set {
        assignPublicIp_ = value;
      }
    }

    /// <summary>Field number for the "replica_type" field.</summary>
    public const int ReplicaTypeFieldNumber = 13;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.ReplicaType replicaType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.ReplicaType ReplicaType {
      get { return replicaType_; }
      set {
        replicaType_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Host);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Host other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ClusterId != other.ClusterId) return false;
      if (ZoneId != other.ZoneId) return false;
      if (!object.Equals(Resources, other.Resources)) return false;
      if (Role != other.Role) return false;
      if (Health != other.Health) return false;
      if(!services_.Equals(other.services_)) return false;
      if (SubnetId != other.SubnetId) return false;
      if (ReplicationSource != other.ReplicationSource) return false;
      if (Priority != other.Priority) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (AssignPublicIp != other.AssignPublicIp) return false;
      if (ReplicaType != other.ReplicaType) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (ZoneId.Length != 0) hash ^= ZoneId.GetHashCode();
      if (resources_ != null) hash ^= Resources.GetHashCode();
      if (Role != 0) hash ^= Role.GetHashCode();
      if (Health != 0) hash ^= Health.GetHashCode();
      hash ^= services_.GetHashCode();
      if (SubnetId.Length != 0) hash ^= SubnetId.GetHashCode();
      if (ReplicationSource.Length != 0) hash ^= ReplicationSource.GetHashCode();
      if (priority_ != null) hash ^= Priority.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (AssignPublicIp != false) hash ^= AssignPublicIp.GetHashCode();
      if (ReplicaType != 0) hash ^= ReplicaType.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterId);
      }
      if (ZoneId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ZoneId);
      }
      if (resources_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(Resources);
      }
      if (Role != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Role);
      }
      if (Health != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) Health);
      }
      services_.WriteTo(output, _repeated_services_codec);
      if (SubnetId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(SubnetId);
      }
      if (ReplicationSource.Length != 0) {
        output.WriteRawTag(74);
        output.WriteString(ReplicationSource);
      }
      if (priority_ != null) {
        _single_priority_codec.WriteTagAndValue(output, Priority);
      }
      if (config_ != null) {
        output.WriteRawTag(90);
        output.WriteMessage(Config);
      }
      if (AssignPublicIp != false) {
        output.WriteRawTag(96);
        output.WriteBool(AssignPublicIp);
      }
      if (ReplicaType != 0) {
        output.WriteRawTag(104);
        output.WriteEnum((int) ReplicaType);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (ZoneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneId);
      }
      if (resources_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resources);
      }
      if (Role != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (Health != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      size += services_.CalculateSize(_repeated_services_codec);
      if (SubnetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetId);
      }
      if (ReplicationSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplicationSource);
      }
      if (priority_ != null) {
        size += _single_priority_codec.CalculateSizeWithTag(Priority);
      }
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (AssignPublicIp != false) {
        size += 1 + 1;
      }
      if (ReplicaType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ReplicaType);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Host other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.ZoneId.Length != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.resources_ != null) {
        if (resources_ == null) {
          Resources = new global::Yandex.Cloud.Mdb.Postgresql.V1.Resources();
        }
        Resources.MergeFrom(other.Resources);
      }
      if (other.Role != 0) {
        Role = other.Role;
      }
      if (other.Health != 0) {
        Health = other.Health;
      }
      services_.Add(other.services_);
      if (other.SubnetId.Length != 0) {
        SubnetId = other.SubnetId;
      }
      if (other.ReplicationSource.Length != 0) {
        ReplicationSource = other.ReplicationSource;
      }
      if (other.priority_ != null) {
        if (priority_ == null || other.Priority != 0L) {
          Priority = other.Priority;
        }
      }
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Yandex.Cloud.Mdb.Postgresql.V1.HostConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.AssignPublicIp != false) {
        AssignPublicIp = other.AssignPublicIp;
      }
      if (other.ReplicaType != 0) {
        ReplicaType = other.ReplicaType;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ClusterId = input.ReadString();
            break;
          }
          case 26: {
            ZoneId = input.ReadString();
            break;
          }
          case 34: {
            if (resources_ == null) {
              Resources = new global::Yandex.Cloud.Mdb.Postgresql.V1.Resources();
            }
            input.ReadMessage(Resources);
            break;
          }
          case 40: {
            Role = (global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.Role) input.ReadEnum();
            break;
          }
          case 48: {
            Health = (global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.Health) input.ReadEnum();
            break;
          }
          case 58: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
          case 66: {
            SubnetId = input.ReadString();
            break;
          }
          case 74: {
            ReplicationSource = input.ReadString();
            break;
          }
          case 82: {
            long? value = _single_priority_codec.Read(input);
            if (priority_ == null || value != 0L) {
              Priority = value;
            }
            break;
          }
          case 90: {
            if (config_ == null) {
              Config = new global::Yandex.Cloud.Mdb.Postgresql.V1.HostConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 96: {
            AssignPublicIp = input.ReadBool();
            break;
          }
          case 104: {
            ReplicaType = (global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Types.ReplicaType) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Host message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Role {
        /// <summary>
        /// Role of the host in the cluster is unknown.
        /// </summary>
        [pbr::OriginalName("ROLE_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Host is the master PostgreSQL server in the cluster.
        /// </summary>
        [pbr::OriginalName("MASTER")] Master = 1,
        /// <summary>
        /// Host is a replica (standby) PostgreSQL server in the cluster.
        /// </summary>
        [pbr::OriginalName("REPLICA")] Replica = 2,
      }

      internal enum ReplicaType {
        /// <summary>
        /// Replica type is unknown (we have no data) or it's master
        /// </summary>
        [pbr::OriginalName("REPLICA_TYPE_UNKNOWN")] Unknown = 0,
        [pbr::OriginalName("ASYNC")] Async = 1,
        [pbr::OriginalName("SYNC")] Sync = 2,
      }

      internal enum Health {
        /// <summary>
        /// Health of the host is unknown.
        /// </summary>
        [pbr::OriginalName("HEALTH_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The host is performing all its functions normally.
        /// </summary>
        [pbr::OriginalName("ALIVE")] Alive = 1,
        /// <summary>
        /// The host is inoperable, and cannot perform any of its essential functions.
        /// </summary>
        [pbr::OriginalName("DEAD")] Dead = 2,
        /// <summary>
        /// The host is degraded, and can perform only some of its essential functions.
        /// </summary>
        [pbr::OriginalName("DEGRADED")] Degraded = 3,
      }

    }
    #endregion

  }

  internal sealed partial class HostConfig : pb::IMessage<HostConfig> {
    private static readonly pb::MessageParser<HostConfig> _parser = new pb::MessageParser<HostConfig>(() => new HostConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HostConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostConfig(HostConfig other) : this() {
      switch (other.PostgresqlConfigCase) {
        case PostgresqlConfigOneofCase.PostgresqlConfig96:
          PostgresqlConfig96 = other.PostgresqlConfig96.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig101C:
          PostgresqlConfig101C = other.PostgresqlConfig101C.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig10:
          PostgresqlConfig10 = other.PostgresqlConfig10.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig11:
          PostgresqlConfig11 = other.PostgresqlConfig11.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig12:
          PostgresqlConfig12 = other.PostgresqlConfig12.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostConfig Clone() {
      return new HostConfig(this);
    }

    /// <summary>Field number for the "postgresql_config_9_6" field.</summary>
    public const int PostgresqlConfig96FieldNumber = 1;
    /// <summary>
    /// Configuration for a host with PostgreSQL 9.6 server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6 PostgresqlConfig96 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig96;
      }
    }

    /// <summary>Field number for the "postgresql_config_10_1c" field.</summary>
    public const int PostgresqlConfig101CFieldNumber = 4;
    /// <summary>
    /// Configuration for a host with PostgreSQL 10 1C server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C PostgresqlConfig101C {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig101C;
      }
    }

    /// <summary>Field number for the "postgresql_config_10" field.</summary>
    public const int PostgresqlConfig10FieldNumber = 2;
    /// <summary>
    /// Configuration for a host with PostgreSQL 10 server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10 PostgresqlConfig10 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig10;
      }
    }

    /// <summary>Field number for the "postgresql_config_11" field.</summary>
    public const int PostgresqlConfig11FieldNumber = 3;
    /// <summary>
    /// Configuration for a host with PostgreSQL 11 server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11 PostgresqlConfig11 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig11;
      }
    }

    /// <summary>Field number for the "postgresql_config_12" field.</summary>
    public const int PostgresqlConfig12FieldNumber = 5;
    /// <summary>
    /// Configuration for a host with PostgreSQL 12 server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12 PostgresqlConfig12 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig12;
      }
    }

    private object postgresqlConfig_;
    /// <summary>Enum of possible cases for the "postgresql_config" oneof.</summary>
    public enum PostgresqlConfigOneofCase {
      None = 0,
      PostgresqlConfig96 = 1,
      PostgresqlConfig101C = 4,
      PostgresqlConfig10 = 2,
      PostgresqlConfig11 = 3,
      PostgresqlConfig12 = 5,
    }
    private PostgresqlConfigOneofCase postgresqlConfigCase_ = PostgresqlConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresqlConfigOneofCase PostgresqlConfigCase {
      get { return postgresqlConfigCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostgresqlConfig() {
      postgresqlConfigCase_ = PostgresqlConfigOneofCase.None;
      postgresqlConfig_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HostConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HostConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PostgresqlConfig96, other.PostgresqlConfig96)) return false;
      if (!object.Equals(PostgresqlConfig101C, other.PostgresqlConfig101C)) return false;
      if (!object.Equals(PostgresqlConfig10, other.PostgresqlConfig10)) return false;
      if (!object.Equals(PostgresqlConfig11, other.PostgresqlConfig11)) return false;
      if (!object.Equals(PostgresqlConfig12, other.PostgresqlConfig12)) return false;
      if (PostgresqlConfigCase != other.PostgresqlConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) hash ^= PostgresqlConfig96.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) hash ^= PostgresqlConfig101C.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) hash ^= PostgresqlConfig10.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) hash ^= PostgresqlConfig11.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) hash ^= PostgresqlConfig12.GetHashCode();
      hash ^= (int) postgresqlConfigCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
        output.WriteRawTag(10);
        output.WriteMessage(PostgresqlConfig96);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
        output.WriteRawTag(18);
        output.WriteMessage(PostgresqlConfig10);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
        output.WriteRawTag(26);
        output.WriteMessage(PostgresqlConfig11);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
        output.WriteRawTag(34);
        output.WriteMessage(PostgresqlConfig101C);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
        output.WriteRawTag(42);
        output.WriteMessage(PostgresqlConfig12);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig96);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig101C);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig10);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig11);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig12);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HostConfig other) {
      if (other == null) {
        return;
      }
      switch (other.PostgresqlConfigCase) {
        case PostgresqlConfigOneofCase.PostgresqlConfig96:
          if (PostgresqlConfig96 == null) {
            PostgresqlConfig96 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6();
          }
          PostgresqlConfig96.MergeFrom(other.PostgresqlConfig96);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig101C:
          if (PostgresqlConfig101C == null) {
            PostgresqlConfig101C = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C();
          }
          PostgresqlConfig101C.MergeFrom(other.PostgresqlConfig101C);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig10:
          if (PostgresqlConfig10 == null) {
            PostgresqlConfig10 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10();
          }
          PostgresqlConfig10.MergeFrom(other.PostgresqlConfig10);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig11:
          if (PostgresqlConfig11 == null) {
            PostgresqlConfig11 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11();
          }
          PostgresqlConfig11.MergeFrom(other.PostgresqlConfig11);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig12:
          if (PostgresqlConfig12 == null) {
            PostgresqlConfig12 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12();
          }
          PostgresqlConfig12.MergeFrom(other.PostgresqlConfig12);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
              subBuilder.MergeFrom(PostgresqlConfig96);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig96 = subBuilder;
            break;
          }
          case 18: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
              subBuilder.MergeFrom(PostgresqlConfig10);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig10 = subBuilder;
            break;
          }
          case 26: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
              subBuilder.MergeFrom(PostgresqlConfig11);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig11 = subBuilder;
            break;
          }
          case 34: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
              subBuilder.MergeFrom(PostgresqlConfig101C);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig101C = subBuilder;
            break;
          }
          case 42: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
              subBuilder.MergeFrom(PostgresqlConfig12);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig12 = subBuilder;
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Service : pb::IMessage<Service> {
    private static readonly pb::MessageParser<Service> _parser = new pb::MessageParser<Service>(() => new Service());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Service> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service(Service other) : this() {
      type_ = other.type_;
      health_ = other.health_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Service Clone() {
      return new Service(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Types.Type type_ = 0;
    /// <summary>
    /// Type of the service provided by the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 2;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Types.Health health_ = 0;
    /// <summary>
    /// Status code of server availability.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Types.Health Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Service);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Service other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if (Health != other.Health) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Health != 0) hash ^= Health.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      if (Health != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Health);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Health != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Service other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Health != 0) {
        Health = other.Health;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Type = (global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Types.Type) input.ReadEnum();
            break;
          }
          case 16: {
            Health = (global::Yandex.Cloud.Mdb.Postgresql.V1.Service.Types.Health) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Service message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Type {
        [pbr::OriginalName("TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// The host is a PostgreSQL server.
        /// </summary>
        [pbr::OriginalName("POSTGRESQL")] Postgresql = 1,
        /// <summary>
        /// The host is a PgBouncer server.
        /// </summary>
        [pbr::OriginalName("POOLER")] Pooler = 2,
      }

      internal enum Health {
        /// <summary>
        /// Health of the server is unknown.
        /// </summary>
        [pbr::OriginalName("HEALTH_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// The server is working normally.
        /// </summary>
        [pbr::OriginalName("ALIVE")] Alive = 1,
        /// <summary>
        /// The server is dead or unresponsive.
        /// </summary>
        [pbr::OriginalName("DEAD")] Dead = 2,
      }

    }
    #endregion

  }

  internal sealed partial class Resources : pb::IMessage<Resources> {
    private static readonly pb::MessageParser<Resources> _parser = new pb::MessageParser<Resources>(() => new Resources());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resources> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resources() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resources(Resources other) : this() {
      resourcePresetId_ = other.resourcePresetId_;
      diskSize_ = other.diskSize_;
      diskTypeId_ = other.diskTypeId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resources Clone() {
      return new Resources(this);
    }

    /// <summary>Field number for the "resource_preset_id" field.</summary>
    public const int ResourcePresetIdFieldNumber = 1;
    private string resourcePresetId_ = "";
    /// <summary>
    /// ID of the preset for computational resources available to a host (CPU, memory etc.).
    /// All available presets are listed in the [documentation](/docs/managed-postgresql/concepts/instance-types).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourcePresetId {
      get { return resourcePresetId_; }
      set {
        resourcePresetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "disk_size" field.</summary>
    public const int DiskSizeFieldNumber = 2;
    private long diskSize_;
    /// <summary>
    /// Volume of the storage available to a host, in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DiskSize {
      get { return diskSize_; }
      set {
        diskSize_ = value;
      }
    }

    /// <summary>Field number for the "disk_type_id" field.</summary>
    public const int DiskTypeIdFieldNumber = 3;
    private string diskTypeId_ = "";
    /// <summary>
    /// Type of the storage environment for the host.
    /// Possible values:
    /// * network-hdd — network HDD drive,
    /// * network-ssd — network SSD drive,
    /// * local-ssd — local SSD storage.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiskTypeId {
      get { return diskTypeId_; }
      set {
        diskTypeId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resources);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resources other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourcePresetId != other.ResourcePresetId) return false;
      if (DiskSize != other.DiskSize) return false;
      if (DiskTypeId != other.DiskTypeId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourcePresetId.Length != 0) hash ^= ResourcePresetId.GetHashCode();
      if (DiskSize != 0L) hash ^= DiskSize.GetHashCode();
      if (DiskTypeId.Length != 0) hash ^= DiskTypeId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourcePresetId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourcePresetId);
      }
      if (DiskSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(DiskSize);
      }
      if (DiskTypeId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DiskTypeId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourcePresetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourcePresetId);
      }
      if (DiskSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DiskSize);
      }
      if (DiskTypeId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiskTypeId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resources other) {
      if (other == null) {
        return;
      }
      if (other.ResourcePresetId.Length != 0) {
        ResourcePresetId = other.ResourcePresetId;
      }
      if (other.DiskSize != 0L) {
        DiskSize = other.DiskSize;
      }
      if (other.DiskTypeId.Length != 0) {
        DiskTypeId = other.DiskTypeId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourcePresetId = input.ReadString();
            break;
          }
          case 16: {
            DiskSize = input.ReadInt64();
            break;
          }
          case 26: {
            DiskTypeId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Access : pb::IMessage<Access> {
    private static readonly pb::MessageParser<Access> _parser = new pb::MessageParser<Access>(() => new Access());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Access> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Access() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Access(Access other) : this() {
      dataLens_ = other.dataLens_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Access Clone() {
      return new Access(this);
    }

    /// <summary>Field number for the "data_lens" field.</summary>
    public const int DataLensFieldNumber = 1;
    private bool dataLens_;
    /// <summary>
    /// Allow access for DataLens
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool DataLens {
      get { return dataLens_; }
      set {
        dataLens_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Access);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Access other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DataLens != other.DataLens) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DataLens != false) hash ^= DataLens.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DataLens != false) {
        output.WriteRawTag(8);
        output.WriteBool(DataLens);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DataLens != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Access other) {
      if (other == null) {
        return;
      }
      if (other.DataLens != false) {
        DataLens = other.DataLens;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DataLens = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
