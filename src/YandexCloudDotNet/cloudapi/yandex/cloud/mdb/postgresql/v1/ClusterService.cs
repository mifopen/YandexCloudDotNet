// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/mdb/postgresql/v1/cluster_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Mdb.Postgresql.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/mdb/postgresql/v1/cluster_service.proto</summary>
  internal static partial class ClusterServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/mdb/postgresql/v1/cluster_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClusterServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjR5YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvY2x1c3Rlcl9zZXJ2",
            "aWNlLnByb3RvEh55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEaHGdv",
            "b2dsZS9hcGkvYW5ub3RhdGlvbnMucHJvdG8aIGdvb2dsZS9wcm90b2J1Zi9m",
            "aWVsZF9tYXNrLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGh5nb29nbGUvcHJvdG9idWYvd3JhcHBlcnMucHJvdG8aG2dvb2dsZS90",
            "eXBlL3RpbWVvZmRheS5wcm90bxogeWFuZGV4L2Nsb3VkL2FwaS9vcGVyYXRp",
            "b24ucHJvdG8aJnlhbmRleC9jbG91ZC9vcGVyYXRpb24vb3BlcmF0aW9uLnBy",
            "b3RvGh15YW5kZXgvY2xvdWQvdmFsaWRhdGlvbi5wcm90bxoreWFuZGV4L2Ns",
            "b3VkL21kYi9wb3N0Z3Jlc3FsL3YxL2JhY2t1cC5wcm90bxoseWFuZGV4L2Ns",
            "b3VkL21kYi9wb3N0Z3Jlc3FsL3YxL2NsdXN0ZXIucHJvdG8aLXlhbmRleC9j",
            "bG91ZC9tZGIvcG9zdGdyZXNxbC92MS9kYXRhYmFzZS5wcm90bxopeWFuZGV4",
            "L2Nsb3VkL21kYi9wb3N0Z3Jlc3FsL3YxL3VzZXIucHJvdG8aOXlhbmRleC9j",
            "bG91ZC9tZGIvcG9zdGdyZXNxbC92MS9jb25maWcvcG9zdGdyZXNxbDlfNi5w",
            "cm90bxo4eWFuZGV4L2Nsb3VkL21kYi9wb3N0Z3Jlc3FsL3YxL2NvbmZpZy9w",
            "b3N0Z3Jlc3FsMTAucHJvdG8aO3lhbmRleC9jbG91ZC9tZGIvcG9zdGdyZXNx",
            "bC92MS9jb25maWcvcG9zdGdyZXNxbDEwXzFjLnByb3RvGjh5YW5kZXgvY2xv",
            "dWQvbWRiL3Bvc3RncmVzcWwvdjEvY29uZmlnL3Bvc3RncmVzcWwxMS5wcm90",
            "bxo4eWFuZGV4L2Nsb3VkL21kYi9wb3N0Z3Jlc3FsL3YxL2NvbmZpZy9wb3N0",
            "Z3Jlc3FsMTIucHJvdG8aM3lhbmRleC9jbG91ZC9tZGIvcG9zdGdyZXNxbC92",
            "MS9jb25maWcvaG9zdDlfNi5wcm90bxoyeWFuZGV4L2Nsb3VkL21kYi9wb3N0",
            "Z3Jlc3FsL3YxL2NvbmZpZy9ob3N0MTAucHJvdG8aNXlhbmRleC9jbG91ZC9t",
            "ZGIvcG9zdGdyZXNxbC92MS9jb25maWcvaG9zdDEwXzFjLnByb3RvGjJ5YW5k",
            "ZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvY29uZmlnL2hvc3QxMS5wcm90",
            "bxoyeWFuZGV4L2Nsb3VkL21kYi9wb3N0Z3Jlc3FsL3YxL2NvbmZpZy9ob3N0",
            "MTIucHJvdG8iNQoRR2V0Q2x1c3RlclJlcXVlc3QSIAoKY2x1c3Rlcl9pZBgB",
            "IAEoCUIM6McxAYrIMQQ8PTUwIpABChNMaXN0Q2x1c3RlcnNSZXF1ZXN0Eh8K",
            "CWZvbGRlcl9pZBgBIAEoCUIM6McxAYrIMQQ8PTUwEh0KCXBhZ2Vfc2l6ZRgC",
            "IAEoA0IK+scxBjw9MTAwMBIdCgpwYWdlX3Rva2VuGAMgASgJQgmKyDEFPD0x",
            "MDASGgoGZmlsdGVyGAQgASgJQgqKyDEGPD0xMDAwImoKFExpc3RDbHVzdGVy",
            "c1Jlc3BvbnNlEjkKCGNsdXN0ZXJzGAEgAygLMicueWFuZGV4LmNsb3VkLm1k",
            "Yi5wb3N0Z3Jlc3FsLnYxLkNsdXN0ZXISFwoPbmV4dF9wYWdlX3Rva2VuGAIg",
            "ASgJItUFChRDcmVhdGVDbHVzdGVyUmVxdWVzdBIfCglmb2xkZXJfaWQYASAB",
            "KAlCDOjHMQGKyDEEPD01MBIsCgRuYW1lGAIgASgJQh7oxzEBisgxBDw9NjPy",
            "xzEOW2EtekEtWjAtOV8tXSoSHgoLZGVzY3JpcHRpb24YAyABKAlCCYrIMQU8",
            "PTI1NhKRAQoGbGFiZWxzGAQgAygLMkAueWFuZGV4LmNsb3VkLm1kYi5wb3N0",
            "Z3Jlc3FsLnYxLkNyZWF0ZUNsdXN0ZXJSZXF1ZXN0LkxhYmVsc0VudHJ5Qj+C",
            "yDEEPD02NIrIMQQ8PTYz8scxC1stXzAtOWEtel0qssgxBhoEPD02M7LIMRIS",
            "EFthLXpdWy1fMC05YS16XSoSTgoLZW52aXJvbm1lbnQYBSABKA4yMy55YW5k",
            "ZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuQ2x1c3Rlci5FbnZpcm9ubWVu",
            "dEIE6McxARJFCgtjb25maWdfc3BlYxgGIAEoCzIqLnlhbmRleC5jbG91ZC5t",
            "ZGIucG9zdGdyZXNxbC52MS5Db25maWdTcGVjQgToxzEBEkoKDmRhdGFiYXNl",
            "X3NwZWNzGAcgAygLMiwueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYx",
            "LkRhdGFiYXNlU3BlY0IE6McxARJCCgp1c2VyX3NwZWNzGAggAygLMigueWFu",
            "ZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLlVzZXJTcGVjQgToxzEBEkIK",
            "Cmhvc3Rfc3BlY3MYCSADKAsyKC55YW5kZXguY2xvdWQubWRiLnBvc3RncmVz",
            "cWwudjEuSG9zdFNwZWNCBOjHMQESIAoKbmV0d29ya19pZBgKIAEoCUIM6Mcx",
            "AYrIMQQ8PTUwGi0KC0xhYmVsc0VudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1",
            "ZRgCIAEoCToCOAEiKwoVQ3JlYXRlQ2x1c3Rlck1ldGFkYXRhEhIKCmNsdXN0",
            "ZXJfaWQYASABKAkitwMKFFVwZGF0ZUNsdXN0ZXJSZXF1ZXN0EiAKCmNsdXN0",
            "ZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MBIvCgt1cGRhdGVfbWFzaxgCIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2sSHgoLZGVzY3JpcHRpb24Y",
            "AyABKAlCCYrIMQU8PTI1NhKRAQoGbGFiZWxzGAQgAygLMkAueWFuZGV4LmNs",
            "b3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLlVwZGF0ZUNsdXN0ZXJSZXF1ZXN0Lkxh",
            "YmVsc0VudHJ5Qj+CyDEEPD02NIrIMQQ8PTYz8scxC1stXzAtOWEtel0qssgx",
            "BhoEPD02M7LIMRISEFthLXpdWy1fMC05YS16XSoSPwoLY29uZmlnX3NwZWMY",
            "BSABKAsyKi55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuQ29uZmln",
            "U3BlYxIoCgRuYW1lGAYgASgJQhqKyDEEPD02M/LHMQ5bYS16QS1aMC05Xy1d",
            "KhotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBIisKFVVwZGF0ZUNsdXN0ZXJNZXRhZGF0YRISCgpjbHVzdGVyX2lkGAEg",
            "ASgJIjgKFERlbGV0ZUNsdXN0ZXJSZXF1ZXN0EiAKCmNsdXN0ZXJfaWQYASAB",
            "KAlCDOjHMQGKyDEEPD01MCIrChVEZWxldGVDbHVzdGVyTWV0YWRhdGESEgoK",
            "Y2x1c3Rlcl9pZBgBIAEoCSI3ChNTdGFydENsdXN0ZXJSZXF1ZXN0EiAKCmNs",
            "dXN0ZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MCIqChRTdGFydENsdXN0ZXJN",
            "ZXRhZGF0YRISCgpjbHVzdGVyX2lkGAEgASgJIjYKElN0b3BDbHVzdGVyUmVx",
            "dWVzdBIgCgpjbHVzdGVyX2lkGAEgASgJQgzoxzEBisgxBDw9NTAiKQoTU3Rv",
            "cENsdXN0ZXJNZXRhZGF0YRISCgpjbHVzdGVyX2lkGAEgASgJImMKEk1vdmVD",
            "bHVzdGVyUmVxdWVzdBIgCgpjbHVzdGVyX2lkGAEgASgJQgzoxzEBisgxBDw9",
            "NTASKwoVZGVzdGluYXRpb25fZm9sZGVyX2lkGAIgASgJQgzoxzEBisgxBDw9",
            "NTAiYgoTTW92ZUNsdXN0ZXJNZXRhZGF0YRISCgpjbHVzdGVyX2lkGAEgASgJ",
            "EhgKEHNvdXJjZV9mb2xkZXJfaWQYAiABKAkSHQoVZGVzdGluYXRpb25fZm9s",
            "ZGVyX2lkGAMgASgJIjgKFEJhY2t1cENsdXN0ZXJSZXF1ZXN0EiAKCmNsdXN0",
            "ZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MCIrChVCYWNrdXBDbHVzdGVyTWV0",
            "YWRhdGESEgoKY2x1c3Rlcl9pZBgBIAEoCSKaBQoVUmVzdG9yZUNsdXN0ZXJS",
            "ZXF1ZXN0EhcKCWJhY2t1cF9pZBgBIAEoCUIE6McxARIuCgR0aW1lGAIgASgL",
            "MhouZ29vZ2xlLnByb3RvYnVmLlRpbWVzdGFtcEIE6McxARIWCg50aW1lX2lu",
            "Y2x1c2l2ZRgDIAEoCBIsCgRuYW1lGAQgASgJQh7oxzEBisgxBDw9NjPyxzEO",
            "W2EtekEtWjAtOV8tXSoSHgoLZGVzY3JpcHRpb24YBSABKAlCCYrIMQU8PTI1",
            "NhKSAQoGbGFiZWxzGAYgAygLMkEueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jl",
            "c3FsLnYxLlJlc3RvcmVDbHVzdGVyUmVxdWVzdC5MYWJlbHNFbnRyeUI/gsgx",
            "BDw9NjSKyDEEPD02M/LHMQtbLV8wLTlhLXpdKrLIMQYaBDw9NjOyyDESEhBb",
            "YS16XVstXzAtOWEtel0qEkgKC2Vudmlyb25tZW50GAcgASgOMjMueWFuZGV4",
            "LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkNsdXN0ZXIuRW52aXJvbm1lbnQS",
            "PwoLY29uZmlnX3NwZWMYCCABKAsyKi55YW5kZXguY2xvdWQubWRiLnBvc3Rn",
            "cmVzcWwudjEuQ29uZmlnU3BlYxJECgpob3N0X3NwZWNzGAkgAygLMigueWFu",
            "ZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkhvc3RTcGVjQgaCyDECPjAS",
            "IAoKbmV0d29ya19pZBgKIAEoCUIM6McxAYrIMQQ8PTUwEhsKCWZvbGRlcl9p",
            "ZBgLIAEoCUIIisgxBDw9NTAaLQoLTGFiZWxzRW50cnkSCwoDa2V5GAEgASgJ",
            "Eg0KBXZhbHVlGAIgASgJOgI4ASI/ChZSZXN0b3JlQ2x1c3Rlck1ldGFkYXRh",
            "EhIKCmNsdXN0ZXJfaWQYASABKAkSEQoJYmFja3VwX2lkGAIgASgJIl0KG1N0",
            "YXJ0Q2x1c3RlckZhaWxvdmVyUmVxdWVzdBIgCgpjbHVzdGVyX2lkGAEgASgJ",
            "QgzoxzEBisgxBDw9NTASHAoJaG9zdF9uYW1lGAIgASgJQgmKyDEFPD0yNTMi",
            "MgocU3RhcnRDbHVzdGVyRmFpbG92ZXJNZXRhZGF0YRISCgpjbHVzdGVyX2lk",
            "GAEgASgJIrMBCglMb2dSZWNvcmQSLQoJdGltZXN0YW1wGAEgASgLMhouZ29v",
            "Z2xlLnByb3RvYnVmLlRpbWVzdGFtcBJHCgdtZXNzYWdlGAIgAygLMjYueWFu",
            "ZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkxvZ1JlY29yZC5NZXNzYWdl",
            "RW50cnkaLgoMTWVzc2FnZUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgC",
            "IAEoCToCOAEirgMKFkxpc3RDbHVzdGVyTG9nc1JlcXVlc3QSIAoKY2x1c3Rl",
            "cl9pZBgBIAEoCUIM6McxAYrIMQQ8PTUwEhUKDWNvbHVtbl9maWx0ZXIYAiAD",
            "KAkSWAoMc2VydmljZV90eXBlGAMgASgOMkIueWFuZGV4LmNsb3VkLm1kYi5w",
            "b3N0Z3Jlc3FsLnYxLkxpc3RDbHVzdGVyTG9nc1JlcXVlc3QuU2VydmljZVR5",
            "cGUSLQoJZnJvbV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIrCgd0b190aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIdCglwYWdlX3NpemUYBiABKANCCvrHMQY8PTEwMDASHQoKcGFnZV90",
            "b2tlbhgHIAEoCUIJisgxBTw9MTAwEh4KFmFsd2F5c19uZXh0X3BhZ2VfdG9r",
            "ZW4YCCABKAgiRwoLU2VydmljZVR5cGUSHAoYU0VSVklDRV9UWVBFX1VOU1BF",
            "Q0lGSUVEEAASDgoKUE9TVEdSRVNRTBABEgoKBlBPT0xFUhACImsKF0xpc3RD",
            "bHVzdGVyTG9nc1Jlc3BvbnNlEjcKBGxvZ3MYASADKAsyKS55YW5kZXguY2xv",
            "dWQubWRiLnBvc3RncmVzcWwudjEuTG9nUmVjb3JkEhcKD25leHRfcGFnZV90",
            "b2tlbhgCIAEoCSLUAgoYU3RyZWFtQ2x1c3RlckxvZ3NSZXF1ZXN0EiAKCmNs",
            "dXN0ZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MBIVCg1jb2x1bW5fZmlsdGVy",
            "GAIgAygJEloKDHNlcnZpY2VfdHlwZRgDIAEoDjJELnlhbmRleC5jbG91ZC5t",
            "ZGIucG9zdGdyZXNxbC52MS5TdHJlYW1DbHVzdGVyTG9nc1JlcXVlc3QuU2Vy",
            "dmljZVR5cGUSLQoJZnJvbV90aW1lGAQgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIrCgd0b190aW1lGAUgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcCJHCgtTZXJ2aWNlVHlwZRIcChhTRVJWSUNFX1RZUEVfVU5T",
            "UEVDSUZJRUQQABIOCgpQT1NUR1JFU1FMEAESCgoGUE9PTEVSEAIifgocTGlz",
            "dENsdXN0ZXJPcGVyYXRpb25zUmVxdWVzdBIgCgpjbHVzdGVyX2lkGAEgASgJ",
            "QgzoxzEBisgxBDw9NTASHQoJcGFnZV9zaXplGAIgASgDQgr6xzEGPD0xMDAw",
            "Eh0KCnBhZ2VfdG9rZW4YAyABKAlCCYrIMQU8PTEwMCJvCh1MaXN0Q2x1c3Rl",
            "ck9wZXJhdGlvbnNSZXNwb25zZRI1CgpvcGVyYXRpb25zGAEgAygLMiEueWFu",
            "ZGV4LmNsb3VkLm9wZXJhdGlvbi5PcGVyYXRpb24SFwoPbmV4dF9wYWdlX3Rv",
            "a2VuGAIgASgJInsKGUxpc3RDbHVzdGVyQmFja3Vwc1JlcXVlc3QSIAoKY2x1",
            "c3Rlcl9pZBgBIAEoCUIM6McxAYrIMQQ8PTUwEh0KCXBhZ2Vfc2l6ZRgCIAEo",
            "A0IK+scxBjw9MTAwMBIdCgpwYWdlX3Rva2VuGAMgASgJQgmKyDEFPD0xMDAi",
            "bgoaTGlzdENsdXN0ZXJCYWNrdXBzUmVzcG9uc2USNwoHYmFja3VwcxgBIAMo",
            "CzImLnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5CYWNrdXASFwoP",
            "bmV4dF9wYWdlX3Rva2VuGAIgASgJInkKF0xpc3RDbHVzdGVySG9zdHNSZXF1",
            "ZXN0EiAKCmNsdXN0ZXJfaWQYASABKAlCDOjHMQGKyDEEPD01MBIdCglwYWdl",
            "X3NpemUYAiABKANCCvrHMQY8PTEwMDASHQoKcGFnZV90b2tlbhgDIAEoCUIJ",
            "isgxBTw9MTAwImgKGExpc3RDbHVzdGVySG9zdHNSZXNwb25zZRIzCgVob3N0",
            "cxgBIAMoCzIkLnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5Ib3N0",
            "EhcKD25leHRfcGFnZV90b2tlbhgCIAEoCSKAAQoWQWRkQ2x1c3Rlckhvc3Rz",
            "UmVxdWVzdBIgCgpjbHVzdGVyX2lkGAEgASgJQgzoxzEBisgxBDw9NTASRAoK",
            "aG9zdF9zcGVjcxgCIAMoCzIoLnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNx",
            "bC52MS5Ib3N0U3BlY0IGgsgxAj4wIkEKF0FkZENsdXN0ZXJIb3N0c01ldGFk",
            "YXRhEhIKCmNsdXN0ZXJfaWQYASABKAkSEgoKaG9zdF9uYW1lcxgCIAMoCSJi",
            "ChlEZWxldGVDbHVzdGVySG9zdHNSZXF1ZXN0EiAKCmNsdXN0ZXJfaWQYASAB",
            "KAlCDOjHMQGKyDEEPD01MBIjCgpob3N0X25hbWVzGAIgAygJQg+CyDECPjCK",
            "yDEFPD0yNTMiRAoaRGVsZXRlQ2x1c3Rlckhvc3RzTWV0YWRhdGESEgoKY2x1",
            "c3Rlcl9pZBgBIAEoCRISCgpob3N0X25hbWVzGAIgAygJIpABChlVcGRhdGVD",
            "bHVzdGVySG9zdHNSZXF1ZXN0EiAKCmNsdXN0ZXJfaWQYASABKAlCDOjHMQGK",
            "yDEEPD01MBJRChF1cGRhdGVfaG9zdF9zcGVjcxgCIAMoCzIuLnlhbmRleC5j",
            "bG91ZC5tZGIucG9zdGdyZXNxbC52MS5VcGRhdGVIb3N0U3BlY0IGgsgxAj4w",
            "IkQKGlVwZGF0ZUNsdXN0ZXJIb3N0c01ldGFkYXRhEhIKCmNsdXN0ZXJfaWQY",
            "ASABKAkSEgoKaG9zdF9uYW1lcxgCIAMoCSK5AQoOVXBkYXRlSG9zdFNwZWMS",
            "FwoJaG9zdF9uYW1lGAEgASgJQgToxzEBEhoKEnJlcGxpY2F0aW9uX3NvdXJj",
            "ZRgCIAEoCRItCghwcmlvcml0eRgDIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQ2NFZhbHVlEkMKC2NvbmZpZ19zcGVjGAQgASgLMi4ueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLkNvbmZpZ0hvc3RTcGVjIuwBCghIb3N0U3Bl",
            "YxIZCgd6b25lX2lkGAEgASgJQgiKyDEEPD01MBIbCglzdWJuZXRfaWQYAiAB",
            "KAlCCIrIMQQ8PTUwEhgKEGFzc2lnbl9wdWJsaWNfaXAYAyABKAgSGgoScmVw",
            "bGljYXRpb25fc291cmNlGAQgASgJEi0KCHByaW9yaXR5GAUgASgLMhsuZ29v",
            "Z2xlLnByb3RvYnVmLkludDY0VmFsdWUSQwoLY29uZmlnX3NwZWMYBiABKAsy",
            "Li55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuQ29uZmlnSG9zdFNw",
            "ZWMirQYKCkNvbmZpZ1NwZWMSDwoHdmVyc2lvbhgBIAEoCRJbChVwb3N0Z3Jl",
            "c3FsX2NvbmZpZ185XzYYAiABKAsyOi55YW5kZXguY2xvdWQubWRiLnBvc3Rn",
            "cmVzcWwudjEuY29uZmlnLlBvc3RncmVzcWxDb25maWc5XzZIABJfChdwb3N0",
            "Z3Jlc3FsX2NvbmZpZ18xMF8xYxgKIAEoCzI8LnlhbmRleC5jbG91ZC5tZGIu",
            "cG9zdGdyZXNxbC52MS5jb25maWcuUG9zdGdyZXNxbENvbmZpZzEwXzFDSAAS",
            "WQoUcG9zdGdyZXNxbF9jb25maWdfMTAYAyABKAsyOS55YW5kZXguY2xvdWQu",
            "bWRiLnBvc3RncmVzcWwudjEuY29uZmlnLlBvc3RncmVzcWxDb25maWcxMEgA",
            "ElkKFHBvc3RncmVzcWxfY29uZmlnXzExGAcgASgLMjkueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0Z3Jlc3FsQ29uZmlnMTFI",
            "ABJZChRwb3N0Z3Jlc3FsX2NvbmZpZ18xMhgLIAEoCzI5LnlhbmRleC5jbG91",
            "ZC5tZGIucG9zdGdyZXNxbC52MS5jb25maWcuUG9zdGdyZXNxbENvbmZpZzEy",
            "SAASTQoNcG9vbGVyX2NvbmZpZxgEIAEoCzI2LnlhbmRleC5jbG91ZC5tZGIu",
            "cG9zdGdyZXNxbC52MS5Db25uZWN0aW9uUG9vbGVyQ29uZmlnEjwKCXJlc291",
            "cmNlcxgFIAEoCzIpLnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5S",
            "ZXNvdXJjZXMSMAoMYXV0b2ZhaWxvdmVyGAYgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLkJvb2xWYWx1ZRIzChNiYWNrdXBfd2luZG93X3N0YXJ0GAggASgLMhYu",
            "Z29vZ2xlLnR5cGUuVGltZU9mRGF5EjYKBmFjY2VzcxgJIAEoCzImLnlhbmRl",
            "eC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5BY2Nlc3NCEwoRcG9zdGdyZXNx",
            "bF9jb25maWciiAQKDkNvbmZpZ0hvc3RTcGVjEl8KFXBvc3RncmVzcWxfY29u",
            "ZmlnXzlfNhgBIAEoCzI+LnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52",
            "MS5jb25maWcuUG9zdGdyZXNxbEhvc3RDb25maWc5XzZIABJjChdwb3N0Z3Jl",
            "c3FsX2NvbmZpZ18xMF8xYxgEIAEoCzJALnlhbmRleC5jbG91ZC5tZGIucG9z",
            "dGdyZXNxbC52MS5jb25maWcuUG9zdGdyZXNxbEhvc3RDb25maWcxMF8xQ0gA",
            "El0KFHBvc3RncmVzcWxfY29uZmlnXzEwGAIgASgLMj0ueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0Z3Jlc3FsSG9zdENvbmZp",
            "ZzEwSAASXQoUcG9zdGdyZXNxbF9jb25maWdfMTEYAyABKAsyPS55YW5kZXgu",
            "Y2xvdWQubWRiLnBvc3RncmVzcWwudjEuY29uZmlnLlBvc3RncmVzcWxIb3N0",
            "Q29uZmlnMTFIABJdChRwb3N0Z3Jlc3FsX2NvbmZpZ18xMhgFIAEoCzI9Lnlh",
            "bmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5jb25maWcuUG9zdGdyZXNx",
            "bEhvc3RDb25maWcxMkgAQhMKEXBvc3RncmVzcWxfY29uZmlnMrsdCg5DbHVz",
            "dGVyU2VydmljZRKXAQoDR2V0EjEueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jl",
            "c3FsLnYxLkdldENsdXN0ZXJSZXF1ZXN0GicueWFuZGV4LmNsb3VkLm1kYi5w",
            "b3N0Z3Jlc3FsLnYxLkNsdXN0ZXIiNILT5JMCLhIsL21hbmFnZWQtcG9zdGdy",
            "ZXNxbC92MS9jbHVzdGVycy97Y2x1c3Rlcl9pZH0SmgEKBExpc3QSMy55YW5k",
            "ZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuTGlzdENsdXN0ZXJzUmVxdWVz",
            "dBo0LnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5MaXN0Q2x1c3Rl",
            "cnNSZXNwb25zZSIngtPkkwIhEh8vbWFuYWdlZC1wb3N0Z3Jlc3FsL3YxL2Ns",
            "dXN0ZXJzErEBCgZDcmVhdGUSNC55YW5kZXguY2xvdWQubWRiLnBvc3RncmVz",
            "cWwudjEuQ3JlYXRlQ2x1c3RlclJlcXVlc3QaIS55YW5kZXguY2xvdWQub3Bl",
            "cmF0aW9uLk9wZXJhdGlvbiJOgtPkkwIkIh8vbWFuYWdlZC1wb3N0Z3Jlc3Fs",
            "L3YxL2NsdXN0ZXJzOgEqstIqIAoVQ3JlYXRlQ2x1c3Rlck1ldGFkYXRhEgdD",
            "bHVzdGVyEr4BCgZVcGRhdGUSNC55YW5kZXguY2xvdWQubWRiLnBvc3RncmVz",
            "cWwudjEuVXBkYXRlQ2x1c3RlclJlcXVlc3QaIS55YW5kZXguY2xvdWQub3Bl",
            "cmF0aW9uLk9wZXJhdGlvbiJbgtPkkwIxMiwvbWFuYWdlZC1wb3N0Z3Jlc3Fs",
            "L3YxL2NsdXN0ZXJzL3tjbHVzdGVyX2lkfToBKrLSKiAKFVVwZGF0ZUNsdXN0",
            "ZXJNZXRhZGF0YRIHQ2x1c3RlchLJAQoGRGVsZXRlEjQueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLkRlbGV0ZUNsdXN0ZXJSZXF1ZXN0GiEueWFu",
            "ZGV4LmNsb3VkLm9wZXJhdGlvbi5PcGVyYXRpb24iZoLT5JMCLiosL21hbmFn",
            "ZWQtcG9zdGdyZXNxbC92MS9jbHVzdGVycy97Y2x1c3Rlcl9pZH2y0iouChVE",
            "ZWxldGVDbHVzdGVyTWV0YWRhdGESFWdvb2dsZS5wcm90b2J1Zi5FbXB0eRK+",
            "AQoFU3RhcnQSMy55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuU3Rh",
            "cnRDbHVzdGVyUmVxdWVzdBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3Bl",
            "cmF0aW9uIl2C0+STAjQiMi9tYW5hZ2VkLXBvc3RncmVzcWwvdjEvY2x1c3Rl",
            "cnMve2NsdXN0ZXJfaWR9OnN0YXJ0stIqHwoUU3RhcnRDbHVzdGVyTWV0YWRh",
            "dGESB0NsdXN0ZXISugEKBFN0b3ASMi55YW5kZXguY2xvdWQubWRiLnBvc3Rn",
            "cmVzcWwudjEuU3RvcENsdXN0ZXJSZXF1ZXN0GiEueWFuZGV4LmNsb3VkLm9w",
            "ZXJhdGlvbi5PcGVyYXRpb24iW4LT5JMCMyIxL21hbmFnZWQtcG9zdGdyZXNx",
            "bC92MS9jbHVzdGVycy97Y2x1c3Rlcl9pZH06c3RvcLLSKh4KE1N0b3BDbHVz",
            "dGVyTWV0YWRhdGESB0NsdXN0ZXISvQEKBE1vdmUSMi55YW5kZXguY2xvdWQu",
            "bWRiLnBvc3RncmVzcWwudjEuTW92ZUNsdXN0ZXJSZXF1ZXN0GiEueWFuZGV4",
            "LmNsb3VkLm9wZXJhdGlvbi5PcGVyYXRpb24iXoLT5JMCNiIxL21hbmFnZWQt",
            "cG9zdGdyZXNxbC92MS9jbHVzdGVycy97Y2x1c3Rlcl9pZH06bW92ZToBKrLS",
            "Kh4KE01vdmVDbHVzdGVyTWV0YWRhdGESB0NsdXN0ZXISwgEKBkJhY2t1cBI0",
            "LnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5CYWNrdXBDbHVzdGVy",
            "UmVxdWVzdBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uIl+C",
            "0+STAjUiMy9tYW5hZ2VkLXBvc3RncmVzcWwvdjEvY2x1c3RlcnMve2NsdXN0",
            "ZXJfaWR9OmJhY2t1cLLSKiAKFUJhY2t1cENsdXN0ZXJNZXRhZGF0YRIHQ2x1",
            "c3RlchK8AQoHUmVzdG9yZRI1LnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNx",
            "bC52MS5SZXN0b3JlQ2x1c3RlclJlcXVlc3QaIS55YW5kZXguY2xvdWQub3Bl",
            "cmF0aW9uLk9wZXJhdGlvbiJXgtPkkwIsIicvbWFuYWdlZC1wb3N0Z3Jlc3Fs",
            "L3YxL2NsdXN0ZXJzOnJlc3RvcmU6ASqy0iohChZSZXN0b3JlQ2x1c3Rlck1l",
            "dGFkYXRhEgdDbHVzdGVyEuEBCg1TdGFydEZhaWxvdmVyEjsueWFuZGV4LmNs",
            "b3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLlN0YXJ0Q2x1c3RlckZhaWxvdmVyUmVx",
            "dWVzdBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uInCC0+ST",
            "Aj8iOi9tYW5hZ2VkLXBvc3RncmVzcWwvdjEvY2x1c3RlcnMve2NsdXN0ZXJf",
            "aWR9OnN0YXJ0RmFpbG92ZXI6ASqy0ionChxTdGFydENsdXN0ZXJGYWlsb3Zl",
            "ck1ldGFkYXRhEgdDbHVzdGVyErYBCghMaXN0TG9ncxI2LnlhbmRleC5jbG91",
            "ZC5tZGIucG9zdGdyZXNxbC52MS5MaXN0Q2x1c3RlckxvZ3NSZXF1ZXN0Gjcu",
            "eWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkxpc3RDbHVzdGVyTG9n",
            "c1Jlc3BvbnNlIjmC0+STAjMSMS9tYW5hZ2VkLXBvc3RncmVzcWwvdjEvY2x1",
            "c3RlcnMve2NsdXN0ZXJfaWR9OmxvZ3MStQEKClN0cmVhbUxvZ3MSOC55YW5k",
            "ZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuU3RyZWFtQ2x1c3RlckxvZ3NS",
            "ZXF1ZXN0GikueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkxvZ1Jl",
            "Y29yZCJAgtPkkwI6EjgvbWFuYWdlZC1wb3N0Z3Jlc3FsL3YxL2NsdXN0ZXJz",
            "L3tjbHVzdGVyX2lkfTpzdHJlYW1fbG9nczABEs4BCg5MaXN0T3BlcmF0aW9u",
            "cxI8LnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5MaXN0Q2x1c3Rl",
            "ck9wZXJhdGlvbnNSZXF1ZXN0Gj0ueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jl",
            "c3FsLnYxLkxpc3RDbHVzdGVyT3BlcmF0aW9uc1Jlc3BvbnNlIj+C0+STAjkS",
            "Ny9tYW5hZ2VkLXBvc3RncmVzcWwvdjEvY2x1c3RlcnMve2NsdXN0ZXJfaWR9",
            "L29wZXJhdGlvbnMSwgEKC0xpc3RCYWNrdXBzEjkueWFuZGV4LmNsb3VkLm1k",
            "Yi5wb3N0Z3Jlc3FsLnYxLkxpc3RDbHVzdGVyQmFja3Vwc1JlcXVlc3QaOi55",
            "YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuTGlzdENsdXN0ZXJCYWNr",
            "dXBzUmVzcG9uc2UiPILT5JMCNhI0L21hbmFnZWQtcG9zdGdyZXNxbC92MS9j",
            "bHVzdGVycy97Y2x1c3Rlcl9pZH0vYmFja3VwcxK6AQoJTGlzdEhvc3RzEjcu",
            "eWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkxpc3RDbHVzdGVySG9z",
            "dHNSZXF1ZXN0GjgueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkxp",
            "c3RDbHVzdGVySG9zdHNSZXNwb25zZSI6gtPkkwI0EjIvbWFuYWdlZC1wb3N0",
            "Z3Jlc3FsL3YxL2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9ob3N0cxLkAQoIQWRk",
            "SG9zdHMSNi55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuQWRkQ2x1",
            "c3Rlckhvc3RzUmVxdWVzdBohLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3Bl",
            "cmF0aW9uIn2C0+STAkMiPi9tYW5hZ2VkLXBvc3RncmVzcWwvdjEvY2x1c3Rl",
            "cnMve2NsdXN0ZXJfaWR9L2hvc3RzOmJhdGNoQ3JlYXRlOgEqstIqMAoXQWRk",
            "Q2x1c3Rlckhvc3RzTWV0YWRhdGESFWdvb2dsZS5wcm90b2J1Zi5FbXB0eRLu",
            "AQoLRGVsZXRlSG9zdHMSOS55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwu",
            "djEuRGVsZXRlQ2x1c3Rlckhvc3RzUmVxdWVzdBohLnlhbmRleC5jbG91ZC5v",
            "cGVyYXRpb24uT3BlcmF0aW9uIoABgtPkkwJDIj4vbWFuYWdlZC1wb3N0Z3Jl",
            "c3FsL3YxL2NsdXN0ZXJzL3tjbHVzdGVyX2lkfS9ob3N0czpiYXRjaERlbGV0",
            "ZToBKrLSKjMKGkRlbGV0ZUNsdXN0ZXJIb3N0c01ldGFkYXRhEhVnb29nbGUu",
            "cHJvdG9idWYuRW1wdHkS7gEKC1VwZGF0ZUhvc3RzEjkueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLlVwZGF0ZUNsdXN0ZXJIb3N0c1JlcXVlc3Qa",
            "IS55YW5kZXguY2xvdWQub3BlcmF0aW9uLk9wZXJhdGlvbiKAAYLT5JMCQyI+",
            "L21hbmFnZWQtcG9zdGdyZXNxbC92MS9jbHVzdGVycy97Y2x1c3Rlcl9pZH0v",
            "aG9zdHM6YmF0Y2hVcGRhdGU6ASqy0iozChpVcGRhdGVDbHVzdGVySG9zdHNN",
            "ZXRhZGF0YRIVZ29vZ2xlLnByb3RvYnVmLkVtcHR5QnMKInlhbmRleC5jbG91",
            "ZC5hcGkubWRiLnBvc3RncmVzcWwudjFaTWdpdGh1Yi5jb20veWFuZGV4LWNs",
            "b3VkL2dvLWdlbnByb3RvL3lhbmRleC9jbG91ZC9tZGIvcG9zdGdyZXNxbC92",
            "MTtwb3N0Z3Jlc3FsYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Google.Type.TimeofdayReflection.Descriptor, global::Yandex.Cloud.Api.OperationReflection.Descriptor, global::Yandex.Cloud.Operation.OperationReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.BackupReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.UserReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql96Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql10Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql101CReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql11Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Postgresql12Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host96Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host10Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host101CReflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host11Reflection.Descriptor, global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host12Reflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.GetClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.GetClusterRequest.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClustersRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClustersRequest.Parser, new[]{ "FolderId", "PageSize", "PageToken", "Filter" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClustersResponse), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClustersResponse.Parser, new[]{ "Clusters", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.CreateClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.CreateClusterRequest.Parser, new[]{ "FolderId", "Name", "Description", "Labels", "Environment", "ConfigSpec", "DatabaseSpecs", "UserSpecs", "HostSpecs", "NetworkId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.CreateClusterMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.CreateClusterMetadata.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateClusterRequest.Parser, new[]{ "ClusterId", "UpdateMask", "Description", "Labels", "ConfigSpec", "Name" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateClusterMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateClusterMetadata.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.DeleteClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.DeleteClusterRequest.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.DeleteClusterMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.DeleteClusterMetadata.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.StartClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.StartClusterRequest.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.StartClusterMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.StartClusterMetadata.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.StopClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.StopClusterRequest.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.StopClusterMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.StopClusterMetadata.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.MoveClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.MoveClusterRequest.Parser, new[]{ "ClusterId", "DestinationFolderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.MoveClusterMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.MoveClusterMetadata.Parser, new[]{ "ClusterId", "SourceFolderId", "DestinationFolderId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.BackupClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.BackupClusterRequest.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.BackupClusterMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.BackupClusterMetadata.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.RestoreClusterRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.RestoreClusterRequest.Parser, new[]{ "BackupId", "Time", "TimeInclusive", "Name", "Description", "Labels", "Environment", "ConfigSpec", "HostSpecs", "NetworkId", "FolderId" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.RestoreClusterMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.RestoreClusterMetadata.Parser, new[]{ "ClusterId", "BackupId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.StartClusterFailoverRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.StartClusterFailoverRequest.Parser, new[]{ "ClusterId", "HostName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.StartClusterFailoverMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.StartClusterFailoverMetadata.Parser, new[]{ "ClusterId" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.LogRecord), global::Yandex.Cloud.Mdb.Postgresql.V1.LogRecord.Parser, new[]{ "Timestamp", "Message" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterLogsRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterLogsRequest.Parser, new[]{ "ClusterId", "ColumnFilter", "ServiceType", "FromTime", "ToTime", "PageSize", "PageToken", "AlwaysNextPageToken" }, null, new[]{ typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterLogsRequest.Types.ServiceType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterLogsResponse), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterLogsResponse.Parser, new[]{ "Logs", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.StreamClusterLogsRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.StreamClusterLogsRequest.Parser, new[]{ "ClusterId", "ColumnFilter", "ServiceType", "FromTime", "ToTime" }, null, new[]{ typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.StreamClusterLogsRequest.Types.ServiceType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterOperationsRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterOperationsRequest.Parser, new[]{ "ClusterId", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterOperationsResponse), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterOperationsResponse.Parser, new[]{ "Operations", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterBackupsRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterBackupsRequest.Parser, new[]{ "ClusterId", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterBackupsResponse), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterBackupsResponse.Parser, new[]{ "Backups", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterHostsRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterHostsRequest.Parser, new[]{ "ClusterId", "PageSize", "PageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterHostsResponse), global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterHostsResponse.Parser, new[]{ "Hosts", "NextPageToken" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.AddClusterHostsRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.AddClusterHostsRequest.Parser, new[]{ "ClusterId", "HostSpecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.AddClusterHostsMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.AddClusterHostsMetadata.Parser, new[]{ "ClusterId", "HostNames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.DeleteClusterHostsRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.DeleteClusterHostsRequest.Parser, new[]{ "ClusterId", "HostNames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.DeleteClusterHostsMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.DeleteClusterHostsMetadata.Parser, new[]{ "ClusterId", "HostNames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateClusterHostsRequest), global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateClusterHostsRequest.Parser, new[]{ "ClusterId", "UpdateHostSpecs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateClusterHostsMetadata), global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateClusterHostsMetadata.Parser, new[]{ "ClusterId", "HostNames" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateHostSpec), global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateHostSpec.Parser, new[]{ "HostName", "ReplicationSource", "Priority", "ConfigSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec), global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec.Parser, new[]{ "ZoneId", "SubnetId", "AssignPublicIp", "ReplicationSource", "Priority", "ConfigSpec" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec), global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec.Parser, new[]{ "Version", "PostgresqlConfig96", "PostgresqlConfig101C", "PostgresqlConfig10", "PostgresqlConfig11", "PostgresqlConfig12", "PoolerConfig", "Resources", "Autofailover", "BackupWindowStart", "Access" }, new[]{ "PostgresqlConfig" }, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec), global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec.Parser, new[]{ "PostgresqlConfig96", "PostgresqlConfig101C", "PostgresqlConfig10", "PostgresqlConfig11", "PostgresqlConfig12" }, new[]{ "PostgresqlConfig" }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class GetClusterRequest : pb::IMessage<GetClusterRequest> {
    private static readonly pb::MessageParser<GetClusterRequest> _parser = new pb::MessageParser<GetClusterRequest>(() => new GetClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest(GetClusterRequest other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetClusterRequest Clone() {
      return new GetClusterRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL Cluster resource to return.
    /// To get the cluster ID use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListClustersRequest : pb::IMessage<ListClustersRequest> {
    private static readonly pb::MessageParser<ListClustersRequest> _parser = new pb::MessageParser<ListClustersRequest>(() => new ListClustersRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClustersRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest(ListClustersRequest other) : this() {
      folderId_ = other.folderId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersRequest Clone() {
      return new ListClustersRequest(this);
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 1;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder to list PostgreSQL clusters in.
    /// To get the folder ID, use a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available
    /// results is larger than [page_size], the service returns a [ListClustersResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set [page_token] to the [ListClustersResponse.next_page_token]
    /// returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// A filter expression that filters resources listed in the response.
    /// The expression must specify:
    /// 1. The field name. Currently you can only use filtering with the [Cluster.name] field.
    /// 2. An operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN` for lists of values.
    /// 3. The value. Мust be 1-63 characters long and match the regular expression `^[a-zA-Z0-9_-]+$`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClustersRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClustersRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FolderId != other.FolderId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FolderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FolderId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClustersRequest other) {
      if (other == null) {
        return;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FolderId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListClustersResponse : pb::IMessage<ListClustersResponse> {
    private static readonly pb::MessageParser<ListClustersResponse> _parser = new pb::MessageParser<ListClustersResponse>(() => new ListClustersResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClustersResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse(ListClustersResponse other) : this() {
      clusters_ = other.clusters_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClustersResponse Clone() {
      return new ListClustersResponse(this);
    }

    /// <summary>Field number for the "clusters" field.</summary>
    public const int ClustersFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster> _repeated_clusters_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster> clusters_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster>();
    /// <summary>
    /// List of PostgreSQL Cluster resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster> Clusters {
      get { return clusters_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListClustersRequest.page_size], use the [next_page_token] as the value
    /// for the [ListClustersRequest.page_token] parameter in the next list request. Each subsequent
    /// list request will have its own [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClustersResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClustersResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!clusters_.Equals(other.clusters_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= clusters_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      clusters_.WriteTo(output, _repeated_clusters_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += clusters_.CalculateSize(_repeated_clusters_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClustersResponse other) {
      if (other == null) {
        return;
      }
      clusters_.Add(other.clusters_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            clusters_.AddEntriesFrom(input, _repeated_clusters_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateClusterRequest : pb::IMessage<CreateClusterRequest> {
    private static readonly pb::MessageParser<CreateClusterRequest> _parser = new pb::MessageParser<CreateClusterRequest>(() => new CreateClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest(CreateClusterRequest other) : this() {
      folderId_ = other.folderId_;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      environment_ = other.environment_;
      configSpec_ = other.configSpec_ != null ? other.configSpec_.Clone() : null;
      databaseSpecs_ = other.databaseSpecs_.Clone();
      userSpecs_ = other.userSpecs_.Clone();
      hostSpecs_ = other.hostSpecs_.Clone();
      networkId_ = other.networkId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterRequest Clone() {
      return new CreateClusterRequest(this);
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 1;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder to create the PostgreSQL cluster in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the PostgreSQL cluster. The name must be unique within the folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom labels for the PostgreSQL cluster as `` key:value `` pairs. Maximum 64 per resource.
    /// For example, "project": "mvp" or "source": "dictionary".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "environment" field.</summary>
    public const int EnvironmentFieldNumber = 5;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment environment_ = 0;
    /// <summary>
    /// Deployment environment of the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment Environment {
      get { return environment_; }
      set {
        environment_ = value;
      }
    }

    /// <summary>Field number for the "config_spec" field.</summary>
    public const int ConfigSpecFieldNumber = 6;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec configSpec_;
    /// <summary>
    /// Configuration and resources for hosts that should be created for the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec ConfigSpec {
      get { return configSpec_; }
      set {
        configSpec_ = value;
      }
    }

    /// <summary>Field number for the "database_specs" field.</summary>
    public const int DatabaseSpecsFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseSpec> _repeated_databaseSpecs_codec
        = pb::FieldCodec.ForMessage(58, global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseSpec> databaseSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseSpec>();
    /// <summary>
    /// Descriptions of databases to be created in the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseSpec> DatabaseSpecs {
      get { return databaseSpecs_; }
    }

    /// <summary>Field number for the "user_specs" field.</summary>
    public const int UserSpecsFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.UserSpec> _repeated_userSpecs_codec
        = pb::FieldCodec.ForMessage(66, global::Yandex.Cloud.Mdb.Postgresql.V1.UserSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.UserSpec> userSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.UserSpec>();
    /// <summary>
    /// Descriptions of database users to be created in the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.UserSpec> UserSpecs {
      get { return userSpecs_; }
    }

    /// <summary>Field number for the "host_specs" field.</summary>
    public const int HostSpecsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> _repeated_hostSpecs_codec
        = pb::FieldCodec.ForMessage(74, global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> hostSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec>();
    /// <summary>
    /// Individual configurations for hosts that should be created for the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> HostSpecs {
      get { return hostSpecs_; }
    }

    /// <summary>Field number for the "network_id" field.</summary>
    public const int NetworkIdFieldNumber = 10;
    private string networkId_ = "";
    /// <summary>
    /// ID of the network to create the cluster in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkId {
      get { return networkId_; }
      set {
        networkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FolderId != other.FolderId) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (Environment != other.Environment) return false;
      if (!object.Equals(ConfigSpec, other.ConfigSpec)) return false;
      if(!databaseSpecs_.Equals(other.databaseSpecs_)) return false;
      if(!userSpecs_.Equals(other.userSpecs_)) return false;
      if(!hostSpecs_.Equals(other.hostSpecs_)) return false;
      if (NetworkId != other.NetworkId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (Environment != 0) hash ^= Environment.GetHashCode();
      if (configSpec_ != null) hash ^= ConfigSpec.GetHashCode();
      hash ^= databaseSpecs_.GetHashCode();
      hash ^= userSpecs_.GetHashCode();
      hash ^= hostSpecs_.GetHashCode();
      if (NetworkId.Length != 0) hash ^= NetworkId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FolderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FolderId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (Environment != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Environment);
      }
      if (configSpec_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ConfigSpec);
      }
      databaseSpecs_.WriteTo(output, _repeated_databaseSpecs_codec);
      userSpecs_.WriteTo(output, _repeated_userSpecs_codec);
      hostSpecs_.WriteTo(output, _repeated_hostSpecs_codec);
      if (NetworkId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(NetworkId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (Environment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Environment);
      }
      if (configSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfigSpec);
      }
      size += databaseSpecs_.CalculateSize(_repeated_databaseSpecs_codec);
      size += userSpecs_.CalculateSize(_repeated_userSpecs_codec);
      size += hostSpecs_.CalculateSize(_repeated_hostSpecs_codec);
      if (NetworkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      if (other.Environment != 0) {
        Environment = other.Environment;
      }
      if (other.configSpec_ != null) {
        if (configSpec_ == null) {
          ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec();
        }
        ConfigSpec.MergeFrom(other.ConfigSpec);
      }
      databaseSpecs_.Add(other.databaseSpecs_);
      userSpecs_.Add(other.userSpecs_);
      hostSpecs_.Add(other.hostSpecs_);
      if (other.NetworkId.Length != 0) {
        NetworkId = other.NetworkId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FolderId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 40: {
            Environment = (global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment) input.ReadEnum();
            break;
          }
          case 50: {
            if (configSpec_ == null) {
              ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec();
            }
            input.ReadMessage(ConfigSpec);
            break;
          }
          case 58: {
            databaseSpecs_.AddEntriesFrom(input, _repeated_databaseSpecs_codec);
            break;
          }
          case 66: {
            userSpecs_.AddEntriesFrom(input, _repeated_userSpecs_codec);
            break;
          }
          case 74: {
            hostSpecs_.AddEntriesFrom(input, _repeated_hostSpecs_codec);
            break;
          }
          case 82: {
            NetworkId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateClusterMetadata : pb::IMessage<CreateClusterMetadata> {
    private static readonly pb::MessageParser<CreateClusterMetadata> _parser = new pb::MessageParser<CreateClusterMetadata>(() => new CreateClusterMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateClusterMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterMetadata(CreateClusterMetadata other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateClusterMetadata Clone() {
      return new CreateClusterMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster that is being created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateClusterMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateClusterRequest : pb::IMessage<UpdateClusterRequest> {
    private static readonly pb::MessageParser<UpdateClusterRequest> _parser = new pb::MessageParser<UpdateClusterRequest>(() => new UpdateClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest(UpdateClusterRequest other) : this() {
      clusterId_ = other.clusterId_;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      configSpec_ = other.configSpec_ != null ? other.configSpec_.Clone() : null;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterRequest Clone() {
      return new UpdateClusterRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL Cluster resource to update.
    /// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Field mask that specifies which fields of the PostgreSQL Cluster resource should be updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// New description of the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 34);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom labels for the PostgreSQL cluster as `` key:value `` pairs. Maximum 64 per resource.
    /// For example, "project": "mvp" or "source": "dictionary".
    ///
    /// The new set of labels will completely replace the old ones. To add a label, request the current
    /// set with the [ClusterService.Get] method, then send an [ClusterService.Update] request with the new label added to the set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "config_spec" field.</summary>
    public const int ConfigSpecFieldNumber = 5;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec configSpec_;
    /// <summary>
    /// New configuration and resources for hosts in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec ConfigSpec {
      get { return configSpec_; }
      set {
        configSpec_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 6;
    private string name_ = "";
    /// <summary>
    /// New name for the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (!object.Equals(ConfigSpec, other.ConfigSpec)) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (configSpec_ != null) hash ^= ConfigSpec.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (configSpec_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ConfigSpec);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(50);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (configSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfigSpec);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      if (other.configSpec_ != null) {
        if (configSpec_ == null) {
          ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec();
        }
        ConfigSpec.MergeFrom(other.ConfigSpec);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 42: {
            if (configSpec_ == null) {
              ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec();
            }
            input.ReadMessage(ConfigSpec);
            break;
          }
          case 50: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateClusterMetadata : pb::IMessage<UpdateClusterMetadata> {
    private static readonly pb::MessageParser<UpdateClusterMetadata> _parser = new pb::MessageParser<UpdateClusterMetadata>(() => new UpdateClusterMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClusterMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterMetadata(UpdateClusterMetadata other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterMetadata Clone() {
      return new UpdateClusterMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL Cluster resource that is being updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClusterMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteClusterRequest : pb::IMessage<DeleteClusterRequest> {
    private static readonly pb::MessageParser<DeleteClusterRequest> _parser = new pb::MessageParser<DeleteClusterRequest>(() => new DeleteClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest(DeleteClusterRequest other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterRequest Clone() {
      return new DeleteClusterRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to delete.
    /// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteClusterMetadata : pb::IMessage<DeleteClusterMetadata> {
    private static readonly pb::MessageParser<DeleteClusterMetadata> _parser = new pb::MessageParser<DeleteClusterMetadata>(() => new DeleteClusterMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteClusterMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterMetadata(DeleteClusterMetadata other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterMetadata Clone() {
      return new DeleteClusterMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster that is being deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteClusterMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StartClusterRequest : pb::IMessage<StartClusterRequest> {
    private static readonly pb::MessageParser<StartClusterRequest> _parser = new pb::MessageParser<StartClusterRequest>(() => new StartClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterRequest(StartClusterRequest other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterRequest Clone() {
      return new StartClusterRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to start.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StartClusterMetadata : pb::IMessage<StartClusterMetadata> {
    private static readonly pb::MessageParser<StartClusterMetadata> _parser = new pb::MessageParser<StartClusterMetadata>(() => new StartClusterMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartClusterMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterMetadata(StartClusterMetadata other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterMetadata Clone() {
      return new StartClusterMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartClusterMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StopClusterRequest : pb::IMessage<StopClusterRequest> {
    private static readonly pb::MessageParser<StopClusterRequest> _parser = new pb::MessageParser<StopClusterRequest>(() => new StopClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterRequest(StopClusterRequest other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterRequest Clone() {
      return new StopClusterRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to stop.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StopClusterMetadata : pb::IMessage<StopClusterMetadata> {
    private static readonly pb::MessageParser<StopClusterMetadata> _parser = new pb::MessageParser<StopClusterMetadata>(() => new StopClusterMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StopClusterMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterMetadata(StopClusterMetadata other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StopClusterMetadata Clone() {
      return new StopClusterMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StopClusterMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StopClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StopClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MoveClusterRequest : pb::IMessage<MoveClusterRequest> {
    private static readonly pb::MessageParser<MoveClusterRequest> _parser = new pb::MessageParser<MoveClusterRequest>(() => new MoveClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveClusterRequest(MoveClusterRequest other) : this() {
      clusterId_ = other.clusterId_;
      destinationFolderId_ = other.destinationFolderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveClusterRequest Clone() {
      return new MoveClusterRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to move.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destination_folder_id" field.</summary>
    public const int DestinationFolderIdFieldNumber = 2;
    private string destinationFolderId_ = "";
    /// <summary>
    /// ID of the destination folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationFolderId {
      get { return destinationFolderId_; }
      set {
        destinationFolderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (DestinationFolderId != other.DestinationFolderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (DestinationFolderId.Length != 0) hash ^= DestinationFolderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (DestinationFolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DestinationFolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (DestinationFolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinationFolderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.DestinationFolderId.Length != 0) {
        DestinationFolderId = other.DestinationFolderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            DestinationFolderId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class MoveClusterMetadata : pb::IMessage<MoveClusterMetadata> {
    private static readonly pb::MessageParser<MoveClusterMetadata> _parser = new pb::MessageParser<MoveClusterMetadata>(() => new MoveClusterMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<MoveClusterMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveClusterMetadata(MoveClusterMetadata other) : this() {
      clusterId_ = other.clusterId_;
      sourceFolderId_ = other.sourceFolderId_;
      destinationFolderId_ = other.destinationFolderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public MoveClusterMetadata Clone() {
      return new MoveClusterMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster being moved.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_folder_id" field.</summary>
    public const int SourceFolderIdFieldNumber = 2;
    private string sourceFolderId_ = "";
    /// <summary>
    /// ID of the source folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceFolderId {
      get { return sourceFolderId_; }
      set {
        sourceFolderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "destination_folder_id" field.</summary>
    public const int DestinationFolderIdFieldNumber = 3;
    private string destinationFolderId_ = "";
    /// <summary>
    /// ID of the destnation folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DestinationFolderId {
      get { return destinationFolderId_; }
      set {
        destinationFolderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as MoveClusterMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(MoveClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (SourceFolderId != other.SourceFolderId) return false;
      if (DestinationFolderId != other.DestinationFolderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (SourceFolderId.Length != 0) hash ^= SourceFolderId.GetHashCode();
      if (DestinationFolderId.Length != 0) hash ^= DestinationFolderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (SourceFolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SourceFolderId);
      }
      if (DestinationFolderId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(DestinationFolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (SourceFolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceFolderId);
      }
      if (DestinationFolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DestinationFolderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(MoveClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.SourceFolderId.Length != 0) {
        SourceFolderId = other.SourceFolderId;
      }
      if (other.DestinationFolderId.Length != 0) {
        DestinationFolderId = other.DestinationFolderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            SourceFolderId = input.ReadString();
            break;
          }
          case 26: {
            DestinationFolderId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class BackupClusterRequest : pb::IMessage<BackupClusterRequest> {
    private static readonly pb::MessageParser<BackupClusterRequest> _parser = new pb::MessageParser<BackupClusterRequest>(() => new BackupClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackupClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupClusterRequest(BackupClusterRequest other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupClusterRequest Clone() {
      return new BackupClusterRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to back up.
    /// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackupClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackupClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackupClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class BackupClusterMetadata : pb::IMessage<BackupClusterMetadata> {
    private static readonly pb::MessageParser<BackupClusterMetadata> _parser = new pb::MessageParser<BackupClusterMetadata>(() => new BackupClusterMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BackupClusterMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupClusterMetadata(BackupClusterMetadata other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BackupClusterMetadata Clone() {
      return new BackupClusterMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster that is being backed up.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BackupClusterMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BackupClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BackupClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RestoreClusterRequest : pb::IMessage<RestoreClusterRequest> {
    private static readonly pb::MessageParser<RestoreClusterRequest> _parser = new pb::MessageParser<RestoreClusterRequest>(() => new RestoreClusterRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestoreClusterRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreClusterRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreClusterRequest(RestoreClusterRequest other) : this() {
      backupId_ = other.backupId_;
      time_ = other.time_ != null ? other.time_.Clone() : null;
      timeInclusive_ = other.timeInclusive_;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      environment_ = other.environment_;
      configSpec_ = other.configSpec_ != null ? other.configSpec_.Clone() : null;
      hostSpecs_ = other.hostSpecs_.Clone();
      networkId_ = other.networkId_;
      folderId_ = other.folderId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreClusterRequest Clone() {
      return new RestoreClusterRequest(this);
    }

    /// <summary>Field number for the "backup_id" field.</summary>
    public const int BackupIdFieldNumber = 1;
    private string backupId_ = "";
    /// <summary>
    /// ID of the backup to create a cluster from.
    /// To get the backup ID, use a [ClusterService.ListBackups] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackupId {
      get { return backupId_; }
      set {
        backupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "time" field.</summary>
    public const int TimeFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.Timestamp time_;
    /// <summary>
    /// Timestamp of the moment to which the PostgreSQL cluster should be restored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "time_inclusive" field.</summary>
    public const int TimeInclusiveFieldNumber = 3;
    private bool timeInclusive_;
    /// <summary>
    /// Flag that indicates whether a database should be restored to the first backup point
    /// available just after the timestamp specified in the [time] field instead of just before.
    ///
    /// Possible values:
    /// * false (default) — the restore point refers to the first backup moment before [time].
    /// * true — the restore point refers to the first backup point after [time].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool TimeInclusive {
      get { return timeInclusive_; }
      set {
        timeInclusive_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Name of the new PostgreSQL cluster. The name must be unique within the folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of the new PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom labels for the PostgreSQL cluster as `` key:value `` pairs. Maximum 64 per resource.
    /// For example, "project": "mvp" or "source": "dictionary".
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "environment" field.</summary>
    public const int EnvironmentFieldNumber = 7;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment environment_ = 0;
    /// <summary>
    /// Deployment environment of the new PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment Environment {
      get { return environment_; }
      set {
        environment_ = value;
      }
    }

    /// <summary>Field number for the "config_spec" field.</summary>
    public const int ConfigSpecFieldNumber = 8;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec configSpec_;
    /// <summary>
    /// Configuration for the PostgreSQL cluster to be created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec ConfigSpec {
      get { return configSpec_; }
      set {
        configSpec_ = value;
      }
    }

    /// <summary>Field number for the "host_specs" field.</summary>
    public const int HostSpecsFieldNumber = 9;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> _repeated_hostSpecs_codec
        = pb::FieldCodec.ForMessage(74, global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> hostSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec>();
    /// <summary>
    /// Configurations for PostgreSQL hosts that should be created for
    /// the cluster that is being created from the backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> HostSpecs {
      get { return hostSpecs_; }
    }

    /// <summary>Field number for the "network_id" field.</summary>
    public const int NetworkIdFieldNumber = 10;
    private string networkId_ = "";
    /// <summary>
    /// ID of the network to create the PostgreSQL cluster in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NetworkId {
      get { return networkId_; }
      set {
        networkId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 11;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder to create the PostgreSQL cluster in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestoreClusterRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestoreClusterRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (BackupId != other.BackupId) return false;
      if (!object.Equals(Time, other.Time)) return false;
      if (TimeInclusive != other.TimeInclusive) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (Environment != other.Environment) return false;
      if (!object.Equals(ConfigSpec, other.ConfigSpec)) return false;
      if(!hostSpecs_.Equals(other.hostSpecs_)) return false;
      if (NetworkId != other.NetworkId) return false;
      if (FolderId != other.FolderId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (BackupId.Length != 0) hash ^= BackupId.GetHashCode();
      if (time_ != null) hash ^= Time.GetHashCode();
      if (TimeInclusive != false) hash ^= TimeInclusive.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (Environment != 0) hash ^= Environment.GetHashCode();
      if (configSpec_ != null) hash ^= ConfigSpec.GetHashCode();
      hash ^= hostSpecs_.GetHashCode();
      if (NetworkId.Length != 0) hash ^= NetworkId.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (BackupId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(BackupId);
      }
      if (time_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Time);
      }
      if (TimeInclusive != false) {
        output.WriteRawTag(24);
        output.WriteBool(TimeInclusive);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (Environment != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Environment);
      }
      if (configSpec_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(ConfigSpec);
      }
      hostSpecs_.WriteTo(output, _repeated_hostSpecs_codec);
      if (NetworkId.Length != 0) {
        output.WriteRawTag(82);
        output.WriteString(NetworkId);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(FolderId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (BackupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackupId);
      }
      if (time_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Time);
      }
      if (TimeInclusive != false) {
        size += 1 + 1;
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (Environment != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Environment);
      }
      if (configSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfigSpec);
      }
      size += hostSpecs_.CalculateSize(_repeated_hostSpecs_codec);
      if (NetworkId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NetworkId);
      }
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestoreClusterRequest other) {
      if (other == null) {
        return;
      }
      if (other.BackupId.Length != 0) {
        BackupId = other.BackupId;
      }
      if (other.time_ != null) {
        if (time_ == null) {
          Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Time.MergeFrom(other.Time);
      }
      if (other.TimeInclusive != false) {
        TimeInclusive = other.TimeInclusive;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      if (other.Environment != 0) {
        Environment = other.Environment;
      }
      if (other.configSpec_ != null) {
        if (configSpec_ == null) {
          ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec();
        }
        ConfigSpec.MergeFrom(other.ConfigSpec);
      }
      hostSpecs_.Add(other.hostSpecs_);
      if (other.NetworkId.Length != 0) {
        NetworkId = other.NetworkId;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            BackupId = input.ReadString();
            break;
          }
          case 18: {
            if (time_ == null) {
              Time = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Time);
            break;
          }
          case 24: {
            TimeInclusive = input.ReadBool();
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 56: {
            Environment = (global::Yandex.Cloud.Mdb.Postgresql.V1.Cluster.Types.Environment) input.ReadEnum();
            break;
          }
          case 66: {
            if (configSpec_ == null) {
              ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigSpec();
            }
            input.ReadMessage(ConfigSpec);
            break;
          }
          case 74: {
            hostSpecs_.AddEntriesFrom(input, _repeated_hostSpecs_codec);
            break;
          }
          case 82: {
            NetworkId = input.ReadString();
            break;
          }
          case 90: {
            FolderId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RestoreClusterMetadata : pb::IMessage<RestoreClusterMetadata> {
    private static readonly pb::MessageParser<RestoreClusterMetadata> _parser = new pb::MessageParser<RestoreClusterMetadata>(() => new RestoreClusterMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RestoreClusterMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreClusterMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreClusterMetadata(RestoreClusterMetadata other) : this() {
      clusterId_ = other.clusterId_;
      backupId_ = other.backupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RestoreClusterMetadata Clone() {
      return new RestoreClusterMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the new PostgreSQL cluster that is being created from a backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "backup_id" field.</summary>
    public const int BackupIdFieldNumber = 2;
    private string backupId_ = "";
    /// <summary>
    /// ID of the backup that is being used for creating a cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string BackupId {
      get { return backupId_; }
      set {
        backupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RestoreClusterMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RestoreClusterMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (BackupId != other.BackupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (BackupId.Length != 0) hash ^= BackupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (BackupId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(BackupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (BackupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(BackupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RestoreClusterMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.BackupId.Length != 0) {
        BackupId = other.BackupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            BackupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StartClusterFailoverRequest : pb::IMessage<StartClusterFailoverRequest> {
    private static readonly pb::MessageParser<StartClusterFailoverRequest> _parser = new pb::MessageParser<StartClusterFailoverRequest>(() => new StartClusterFailoverRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartClusterFailoverRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterFailoverRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterFailoverRequest(StartClusterFailoverRequest other) : this() {
      clusterId_ = other.clusterId_;
      hostName_ = other.hostName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterFailoverRequest Clone() {
      return new StartClusterFailoverRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host_name" field.</summary>
    public const int HostNameFieldNumber = 2;
    private string hostName_ = "";
    /// <summary>
    /// New master host. Switch to the most up-to-date replica if not provided.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostName {
      get { return hostName_; }
      set {
        hostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartClusterFailoverRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartClusterFailoverRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (HostName != other.HostName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (HostName.Length != 0) hash ^= HostName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (HostName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(HostName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (HostName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartClusterFailoverRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.HostName.Length != 0) {
        HostName = other.HostName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            HostName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StartClusterFailoverMetadata : pb::IMessage<StartClusterFailoverMetadata> {
    private static readonly pb::MessageParser<StartClusterFailoverMetadata> _parser = new pb::MessageParser<StartClusterFailoverMetadata>(() => new StartClusterFailoverMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StartClusterFailoverMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterFailoverMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterFailoverMetadata(StartClusterFailoverMetadata other) : this() {
      clusterId_ = other.clusterId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StartClusterFailoverMetadata Clone() {
      return new StartClusterFailoverMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster being failovered.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StartClusterFailoverMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StartClusterFailoverMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StartClusterFailoverMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class LogRecord : pb::IMessage<LogRecord> {
    private static readonly pb::MessageParser<LogRecord> _parser = new pb::MessageParser<LogRecord>(() => new LogRecord());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<LogRecord> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRecord() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRecord(LogRecord other) : this() {
      timestamp_ = other.timestamp_ != null ? other.timestamp_.Clone() : null;
      message_ = other.message_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public LogRecord Clone() {
      return new LogRecord(this);
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 1;
    private global::Google.Protobuf.WellKnownTypes.Timestamp timestamp_;
    /// <summary>
    /// Log record timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_message_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> message_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Contents of the log record.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Message {
      get { return message_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as LogRecord);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(LogRecord other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Timestamp, other.Timestamp)) return false;
      if (!Message.Equals(other.Message)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (timestamp_ != null) hash ^= Timestamp.GetHashCode();
      hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (timestamp_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Timestamp);
      }
      message_.WriteTo(output, _map_message_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (timestamp_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Timestamp);
      }
      size += message_.CalculateSize(_map_message_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(LogRecord other) {
      if (other == null) {
        return;
      }
      if (other.timestamp_ != null) {
        if (timestamp_ == null) {
          Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        Timestamp.MergeFrom(other.Timestamp);
      }
      message_.Add(other.message_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (timestamp_ == null) {
              Timestamp = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(Timestamp);
            break;
          }
          case 18: {
            message_.AddEntriesFrom(input, _map_message_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListClusterLogsRequest : pb::IMessage<ListClusterLogsRequest> {
    private static readonly pb::MessageParser<ListClusterLogsRequest> _parser = new pb::MessageParser<ListClusterLogsRequest>(() => new ListClusterLogsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClusterLogsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterLogsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterLogsRequest(ListClusterLogsRequest other) : this() {
      clusterId_ = other.clusterId_;
      columnFilter_ = other.columnFilter_.Clone();
      serviceType_ = other.serviceType_;
      fromTime_ = other.fromTime_ != null ? other.fromTime_.Clone() : null;
      toTime_ = other.toTime_ != null ? other.toTime_.Clone() : null;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      alwaysNextPageToken_ = other.alwaysNextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterLogsRequest Clone() {
      return new ListClusterLogsRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to request logs for.
    /// To get the PostgreSQL cluster ID use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "column_filter" field.</summary>
    public const int ColumnFilterFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_columnFilter_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> columnFilter_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Columns from the logs table to request.
    /// If no columns are specified, entire log records are returned.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnFilter {
      get { return columnFilter_; }
    }

    /// <summary>Field number for the "service_type" field.</summary>
    public const int ServiceTypeFieldNumber = 3;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterLogsRequest.Types.ServiceType serviceType_ = 0;
    /// <summary>
    /// Type of the service to request logs about.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterLogsRequest.Types.ServiceType ServiceType {
      get { return serviceType_; }
      set {
        serviceType_ = value;
      }
    }

    /// <summary>Field number for the "from_time" field.</summary>
    public const int FromTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fromTime_;
    /// <summary>
    /// Start timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FromTime {
      get { return fromTime_; }
      set {
        fromTime_ = value;
      }
    }

    /// <summary>Field number for the "to_time" field.</summary>
    public const int ToTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp toTime_;
    /// <summary>
    /// End timestamp for the logs request, in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ToTime {
      get { return toTime_; }
      set {
        toTime_ = value;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 6;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available
    /// results is larger than [page_size], the service returns a [ListClusterLogsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 7;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set [page_token] to the
    /// [ListClusterLogsResponse.next_page_token] returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "always_next_page_token" field.</summary>
    public const int AlwaysNextPageTokenFieldNumber = 8;
    private bool alwaysNextPageToken_;
    /// <summary>
    /// Always return `next_page_token`, even if current page is empty.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AlwaysNextPageToken {
      get { return alwaysNextPageToken_; }
      set {
        alwaysNextPageToken_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClusterLogsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClusterLogsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if(!columnFilter_.Equals(other.columnFilter_)) return false;
      if (ServiceType != other.ServiceType) return false;
      if (!object.Equals(FromTime, other.FromTime)) return false;
      if (!object.Equals(ToTime, other.ToTime)) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (AlwaysNextPageToken != other.AlwaysNextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= columnFilter_.GetHashCode();
      if (ServiceType != 0) hash ^= ServiceType.GetHashCode();
      if (fromTime_ != null) hash ^= FromTime.GetHashCode();
      if (toTime_ != null) hash ^= ToTime.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (AlwaysNextPageToken != false) hash ^= AlwaysNextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      columnFilter_.WriteTo(output, _repeated_columnFilter_codec);
      if (ServiceType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ServiceType);
      }
      if (fromTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromTime);
      }
      if (toTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ToTime);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(PageToken);
      }
      if (AlwaysNextPageToken != false) {
        output.WriteRawTag(64);
        output.WriteBool(AlwaysNextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += columnFilter_.CalculateSize(_repeated_columnFilter_codec);
      if (ServiceType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ServiceType);
      }
      if (fromTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromTime);
      }
      if (toTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToTime);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (AlwaysNextPageToken != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClusterLogsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      columnFilter_.Add(other.columnFilter_);
      if (other.ServiceType != 0) {
        ServiceType = other.ServiceType;
      }
      if (other.fromTime_ != null) {
        if (fromTime_ == null) {
          FromTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FromTime.MergeFrom(other.FromTime);
      }
      if (other.toTime_ != null) {
        if (toTime_ == null) {
          ToTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ToTime.MergeFrom(other.ToTime);
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.AlwaysNextPageToken != false) {
        AlwaysNextPageToken = other.AlwaysNextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            columnFilter_.AddEntriesFrom(input, _repeated_columnFilter_codec);
            break;
          }
          case 24: {
            ServiceType = (global::Yandex.Cloud.Mdb.Postgresql.V1.ListClusterLogsRequest.Types.ServiceType) input.ReadEnum();
            break;
          }
          case 34: {
            if (fromTime_ == null) {
              FromTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FromTime);
            break;
          }
          case 42: {
            if (toTime_ == null) {
              ToTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ToTime);
            break;
          }
          case 48: {
            PageSize = input.ReadInt64();
            break;
          }
          case 58: {
            PageToken = input.ReadString();
            break;
          }
          case 64: {
            AlwaysNextPageToken = input.ReadBool();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ListClusterLogsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum ServiceType {
        [pbr::OriginalName("SERVICE_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Logs of PostgreSQL activity.
        /// </summary>
        [pbr::OriginalName("POSTGRESQL")] Postgresql = 1,
        /// <summary>
        /// Logs of connection pooler activity.
        /// </summary>
        [pbr::OriginalName("POOLER")] Pooler = 2,
      }

    }
    #endregion

  }

  internal sealed partial class ListClusterLogsResponse : pb::IMessage<ListClusterLogsResponse> {
    private static readonly pb::MessageParser<ListClusterLogsResponse> _parser = new pb::MessageParser<ListClusterLogsResponse>(() => new ListClusterLogsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClusterLogsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterLogsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterLogsResponse(ListClusterLogsResponse other) : this() {
      logs_ = other.logs_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterLogsResponse Clone() {
      return new ListClusterLogsResponse(this);
    }

    /// <summary>Field number for the "logs" field.</summary>
    public const int LogsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.LogRecord> _repeated_logs_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Mdb.Postgresql.V1.LogRecord.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.LogRecord> logs_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.LogRecord>();
    /// <summary>
    /// Requested log records.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.LogRecord> Logs {
      get { return logs_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListClusterLogsRequest.page_size], use the [next_page_token] as the value
    /// for the [ListClusterLogsRequest.page_token] query parameter in the next list request.
    /// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClusterLogsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClusterLogsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!logs_.Equals(other.logs_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= logs_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      logs_.WriteTo(output, _repeated_logs_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += logs_.CalculateSize(_repeated_logs_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClusterLogsResponse other) {
      if (other == null) {
        return;
      }
      logs_.Add(other.logs_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            logs_.AddEntriesFrom(input, _repeated_logs_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class StreamClusterLogsRequest : pb::IMessage<StreamClusterLogsRequest> {
    private static readonly pb::MessageParser<StreamClusterLogsRequest> _parser = new pb::MessageParser<StreamClusterLogsRequest>(() => new StreamClusterLogsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StreamClusterLogsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamClusterLogsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamClusterLogsRequest(StreamClusterLogsRequest other) : this() {
      clusterId_ = other.clusterId_;
      columnFilter_ = other.columnFilter_.Clone();
      serviceType_ = other.serviceType_;
      fromTime_ = other.fromTime_ != null ? other.fromTime_.Clone() : null;
      toTime_ = other.toTime_ != null ? other.toTime_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StreamClusterLogsRequest Clone() {
      return new StreamClusterLogsRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// Required. ID of the PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "column_filter" field.</summary>
    public const int ColumnFilterFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_columnFilter_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> columnFilter_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Columns from logs table to get in the response.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> ColumnFilter {
      get { return columnFilter_; }
    }

    /// <summary>Field number for the "service_type" field.</summary>
    public const int ServiceTypeFieldNumber = 3;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.StreamClusterLogsRequest.Types.ServiceType serviceType_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.StreamClusterLogsRequest.Types.ServiceType ServiceType {
      get { return serviceType_; }
      set {
        serviceType_ = value;
      }
    }

    /// <summary>Field number for the "from_time" field.</summary>
    public const int FromTimeFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Timestamp fromTime_;
    /// <summary>
    /// Start timestamp for the logs request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp FromTime {
      get { return fromTime_; }
      set {
        fromTime_ = value;
      }
    }

    /// <summary>Field number for the "to_time" field.</summary>
    public const int ToTimeFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp toTime_;
    /// <summary>
    /// End timestamp for the logs request.
    /// If this field is not set, all existing logs will be sent and then the new ones as
    /// they appear. In essence it has 'tail -f' semantics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp ToTime {
      get { return toTime_; }
      set {
        toTime_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StreamClusterLogsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StreamClusterLogsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if(!columnFilter_.Equals(other.columnFilter_)) return false;
      if (ServiceType != other.ServiceType) return false;
      if (!object.Equals(FromTime, other.FromTime)) return false;
      if (!object.Equals(ToTime, other.ToTime)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= columnFilter_.GetHashCode();
      if (ServiceType != 0) hash ^= ServiceType.GetHashCode();
      if (fromTime_ != null) hash ^= FromTime.GetHashCode();
      if (toTime_ != null) hash ^= ToTime.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      columnFilter_.WriteTo(output, _repeated_columnFilter_codec);
      if (ServiceType != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) ServiceType);
      }
      if (fromTime_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(FromTime);
      }
      if (toTime_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(ToTime);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += columnFilter_.CalculateSize(_repeated_columnFilter_codec);
      if (ServiceType != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ServiceType);
      }
      if (fromTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(FromTime);
      }
      if (toTime_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ToTime);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StreamClusterLogsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      columnFilter_.Add(other.columnFilter_);
      if (other.ServiceType != 0) {
        ServiceType = other.ServiceType;
      }
      if (other.fromTime_ != null) {
        if (fromTime_ == null) {
          FromTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        FromTime.MergeFrom(other.FromTime);
      }
      if (other.toTime_ != null) {
        if (toTime_ == null) {
          ToTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        ToTime.MergeFrom(other.ToTime);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            columnFilter_.AddEntriesFrom(input, _repeated_columnFilter_codec);
            break;
          }
          case 24: {
            ServiceType = (global::Yandex.Cloud.Mdb.Postgresql.V1.StreamClusterLogsRequest.Types.ServiceType) input.ReadEnum();
            break;
          }
          case 34: {
            if (fromTime_ == null) {
              FromTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(FromTime);
            break;
          }
          case 42: {
            if (toTime_ == null) {
              ToTime = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(ToTime);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the StreamClusterLogsRequest message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum ServiceType {
        [pbr::OriginalName("SERVICE_TYPE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Logs of PostgreSQL activity.
        /// </summary>
        [pbr::OriginalName("POSTGRESQL")] Postgresql = 1,
        /// <summary>
        /// Logs of connection pooler activity.
        /// </summary>
        [pbr::OriginalName("POOLER")] Pooler = 2,
      }

    }
    #endregion

  }

  internal sealed partial class ListClusterOperationsRequest : pb::IMessage<ListClusterOperationsRequest> {
    private static readonly pb::MessageParser<ListClusterOperationsRequest> _parser = new pb::MessageParser<ListClusterOperationsRequest>(() => new ListClusterOperationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClusterOperationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterOperationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterOperationsRequest(ListClusterOperationsRequest other) : this() {
      clusterId_ = other.clusterId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterOperationsRequest Clone() {
      return new ListClusterOperationsRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL Cluster resource to list operations for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available
    /// results is larger than [page_size], the service returns a [ListClusterOperationsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token.  To get the next page of results, set [page_token] to the [ListClusterOperationsResponse.next_page_token]
    /// returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClusterOperationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClusterOperationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClusterOperationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListClusterOperationsResponse : pb::IMessage<ListClusterOperationsResponse> {
    private static readonly pb::MessageParser<ListClusterOperationsResponse> _parser = new pb::MessageParser<ListClusterOperationsResponse>(() => new ListClusterOperationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClusterOperationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterOperationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterOperationsResponse(ListClusterOperationsResponse other) : this() {
      operations_ = other.operations_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterOperationsResponse Clone() {
      return new ListClusterOperationsResponse(this);
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Operation.Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Operation.Operation.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation> operations_ = new pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation>();
    /// <summary>
    /// List of Operation resources for the specified PostgreSQL cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation> Operations {
      get { return operations_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListClusterOperationsRequest.page_size], use the [next_page_token] as the value
    /// for the [ListClusterOperationsRequest.page_token] query parameter in the next list request.
    /// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClusterOperationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClusterOperationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!operations_.Equals(other.operations_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= operations_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      operations_.WriteTo(output, _repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += operations_.CalculateSize(_repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClusterOperationsResponse other) {
      if (other == null) {
        return;
      }
      operations_.Add(other.operations_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListClusterBackupsRequest : pb::IMessage<ListClusterBackupsRequest> {
    private static readonly pb::MessageParser<ListClusterBackupsRequest> _parser = new pb::MessageParser<ListClusterBackupsRequest>(() => new ListClusterBackupsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClusterBackupsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterBackupsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterBackupsRequest(ListClusterBackupsRequest other) : this() {
      clusterId_ = other.clusterId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterBackupsRequest Clone() {
      return new ListClusterBackupsRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster.
    /// To get the PostgreSQL cluster ID use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available
    /// results is larger than [page_size], the service returns a [ListClusterBackupsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token.  To get the next page of results, set [page_token] to the [ListClusterBackupsResponse.next_page_token]
    /// returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClusterBackupsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClusterBackupsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClusterBackupsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListClusterBackupsResponse : pb::IMessage<ListClusterBackupsResponse> {
    private static readonly pb::MessageParser<ListClusterBackupsResponse> _parser = new pb::MessageParser<ListClusterBackupsResponse>(() => new ListClusterBackupsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClusterBackupsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[28]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterBackupsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterBackupsResponse(ListClusterBackupsResponse other) : this() {
      backups_ = other.backups_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterBackupsResponse Clone() {
      return new ListClusterBackupsResponse(this);
    }

    /// <summary>Field number for the "backups" field.</summary>
    public const int BackupsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Backup> _repeated_backups_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Mdb.Postgresql.V1.Backup.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Backup> backups_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Backup>();
    /// <summary>
    /// List of PostgreSQL Backup resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Backup> Backups {
      get { return backups_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListClusterBackupsRequest.page_size], use the [next_page_token] as the value
    /// for the [ListClusterBackupsRequest.page_token] query parameter in the next list request.
    /// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClusterBackupsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClusterBackupsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!backups_.Equals(other.backups_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= backups_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      backups_.WriteTo(output, _repeated_backups_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += backups_.CalculateSize(_repeated_backups_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClusterBackupsResponse other) {
      if (other == null) {
        return;
      }
      backups_.Add(other.backups_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            backups_.AddEntriesFrom(input, _repeated_backups_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListClusterHostsRequest : pb::IMessage<ListClusterHostsRequest> {
    private static readonly pb::MessageParser<ListClusterHostsRequest> _parser = new pb::MessageParser<ListClusterHostsRequest>(() => new ListClusterHostsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClusterHostsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[29]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterHostsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterHostsRequest(ListClusterHostsRequest other) : this() {
      clusterId_ = other.clusterId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterHostsRequest Clone() {
      return new ListClusterHostsRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster.
    /// To get the PostgreSQL cluster ID use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available
    /// results is larger than [page_size], the service returns a [ListClusterHostsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token.  To get the next page of results, set [page_token] to the [ListClusterHostsResponse.next_page_token]
    /// returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClusterHostsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClusterHostsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClusterHostsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListClusterHostsResponse : pb::IMessage<ListClusterHostsResponse> {
    private static readonly pb::MessageParser<ListClusterHostsResponse> _parser = new pb::MessageParser<ListClusterHostsResponse>(() => new ListClusterHostsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListClusterHostsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[30]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterHostsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterHostsResponse(ListClusterHostsResponse other) : this() {
      hosts_ = other.hosts_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListClusterHostsResponse Clone() {
      return new ListClusterHostsResponse(this);
    }

    /// <summary>Field number for the "hosts" field.</summary>
    public const int HostsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Host> _repeated_hosts_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Mdb.Postgresql.V1.Host.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Host> hosts_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Host>();
    /// <summary>
    /// List of Host resources.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Host> Hosts {
      get { return hosts_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListClusterHostsRequest.page_size], use the [next_page_token] as the value
    /// for the [ListClusterHostsRequest.page_token] query parameter in the next list request.
    /// Each subsequent list request will have its own [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListClusterHostsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListClusterHostsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!hosts_.Equals(other.hosts_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= hosts_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      hosts_.WriteTo(output, _repeated_hosts_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += hosts_.CalculateSize(_repeated_hosts_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListClusterHostsResponse other) {
      if (other == null) {
        return;
      }
      hosts_.Add(other.hosts_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            hosts_.AddEntriesFrom(input, _repeated_hosts_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AddClusterHostsRequest : pb::IMessage<AddClusterHostsRequest> {
    private static readonly pb::MessageParser<AddClusterHostsRequest> _parser = new pb::MessageParser<AddClusterHostsRequest>(() => new AddClusterHostsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddClusterHostsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[31]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClusterHostsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClusterHostsRequest(AddClusterHostsRequest other) : this() {
      clusterId_ = other.clusterId_;
      hostSpecs_ = other.hostSpecs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClusterHostsRequest Clone() {
      return new AddClusterHostsRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to add hosts to.
    /// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host_specs" field.</summary>
    public const int HostSpecsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> _repeated_hostSpecs_codec
        = pb::FieldCodec.ForMessage(18, global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> hostSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec>();
    /// <summary>
    /// Configurations for PostgreSQL hosts that should be added to the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.HostSpec> HostSpecs {
      get { return hostSpecs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddClusterHostsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddClusterHostsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if(!hostSpecs_.Equals(other.hostSpecs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= hostSpecs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      hostSpecs_.WriteTo(output, _repeated_hostSpecs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += hostSpecs_.CalculateSize(_repeated_hostSpecs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddClusterHostsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      hostSpecs_.Add(other.hostSpecs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            hostSpecs_.AddEntriesFrom(input, _repeated_hostSpecs_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AddClusterHostsMetadata : pb::IMessage<AddClusterHostsMetadata> {
    private static readonly pb::MessageParser<AddClusterHostsMetadata> _parser = new pb::MessageParser<AddClusterHostsMetadata>(() => new AddClusterHostsMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AddClusterHostsMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[32]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClusterHostsMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClusterHostsMetadata(AddClusterHostsMetadata other) : this() {
      clusterId_ = other.clusterId_;
      hostNames_ = other.hostNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AddClusterHostsMetadata Clone() {
      return new AddClusterHostsMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to which the hosts are being added.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host_names" field.</summary>
    public const int HostNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_hostNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> hostNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Names of hosts that are being added to the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> HostNames {
      get { return hostNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AddClusterHostsMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AddClusterHostsMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if(!hostNames_.Equals(other.hostNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= hostNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      hostNames_.WriteTo(output, _repeated_hostNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += hostNames_.CalculateSize(_repeated_hostNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AddClusterHostsMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      hostNames_.Add(other.hostNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            hostNames_.AddEntriesFrom(input, _repeated_hostNames_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteClusterHostsRequest : pb::IMessage<DeleteClusterHostsRequest> {
    private static readonly pb::MessageParser<DeleteClusterHostsRequest> _parser = new pb::MessageParser<DeleteClusterHostsRequest>(() => new DeleteClusterHostsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteClusterHostsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[33]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterHostsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterHostsRequest(DeleteClusterHostsRequest other) : this() {
      clusterId_ = other.clusterId_;
      hostNames_ = other.hostNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterHostsRequest Clone() {
      return new DeleteClusterHostsRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to remove hosts from.
    /// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host_names" field.</summary>
    public const int HostNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_hostNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> hostNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Names of hosts to delete.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> HostNames {
      get { return hostNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteClusterHostsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteClusterHostsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if(!hostNames_.Equals(other.hostNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= hostNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      hostNames_.WriteTo(output, _repeated_hostNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += hostNames_.CalculateSize(_repeated_hostNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteClusterHostsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      hostNames_.Add(other.hostNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            hostNames_.AddEntriesFrom(input, _repeated_hostNames_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteClusterHostsMetadata : pb::IMessage<DeleteClusterHostsMetadata> {
    private static readonly pb::MessageParser<DeleteClusterHostsMetadata> _parser = new pb::MessageParser<DeleteClusterHostsMetadata>(() => new DeleteClusterHostsMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteClusterHostsMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[34]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterHostsMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterHostsMetadata(DeleteClusterHostsMetadata other) : this() {
      clusterId_ = other.clusterId_;
      hostNames_ = other.hostNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteClusterHostsMetadata Clone() {
      return new DeleteClusterHostsMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to remove hosts from.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host_names" field.</summary>
    public const int HostNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_hostNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> hostNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Names of hosts that are being deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> HostNames {
      get { return hostNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteClusterHostsMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteClusterHostsMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if(!hostNames_.Equals(other.hostNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= hostNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      hostNames_.WriteTo(output, _repeated_hostNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += hostNames_.CalculateSize(_repeated_hostNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteClusterHostsMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      hostNames_.Add(other.hostNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            hostNames_.AddEntriesFrom(input, _repeated_hostNames_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateClusterHostsRequest : pb::IMessage<UpdateClusterHostsRequest> {
    private static readonly pb::MessageParser<UpdateClusterHostsRequest> _parser = new pb::MessageParser<UpdateClusterHostsRequest>(() => new UpdateClusterHostsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClusterHostsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[35]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterHostsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterHostsRequest(UpdateClusterHostsRequest other) : this() {
      clusterId_ = other.clusterId_;
      updateHostSpecs_ = other.updateHostSpecs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterHostsRequest Clone() {
      return new UpdateClusterHostsRequest(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to update hosts in.
    /// To get the PostgreSQL cluster ID, use a [ClusterService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_host_specs" field.</summary>
    public const int UpdateHostSpecsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateHostSpec> _repeated_updateHostSpecs_codec
        = pb::FieldCodec.ForMessage(18, global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateHostSpec.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateHostSpec> updateHostSpecs_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateHostSpec>();
    /// <summary>
    /// New configurations to apply to hosts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.UpdateHostSpec> UpdateHostSpecs {
      get { return updateHostSpecs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClusterHostsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClusterHostsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if(!updateHostSpecs_.Equals(other.updateHostSpecs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= updateHostSpecs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      updateHostSpecs_.WriteTo(output, _repeated_updateHostSpecs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += updateHostSpecs_.CalculateSize(_repeated_updateHostSpecs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClusterHostsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      updateHostSpecs_.Add(other.updateHostSpecs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            updateHostSpecs_.AddEntriesFrom(input, _repeated_updateHostSpecs_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateClusterHostsMetadata : pb::IMessage<UpdateClusterHostsMetadata> {
    private static readonly pb::MessageParser<UpdateClusterHostsMetadata> _parser = new pb::MessageParser<UpdateClusterHostsMetadata>(() => new UpdateClusterHostsMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateClusterHostsMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[36]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterHostsMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterHostsMetadata(UpdateClusterHostsMetadata other) : this() {
      clusterId_ = other.clusterId_;
      hostNames_ = other.hostNames_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateClusterHostsMetadata Clone() {
      return new UpdateClusterHostsMetadata(this);
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 1;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster to update hosts in.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "host_names" field.</summary>
    public const int HostNamesFieldNumber = 2;
    private static readonly pb::FieldCodec<string> _repeated_hostNames_codec
        = pb::FieldCodec.ForString(18);
    private readonly pbc::RepeatedField<string> hostNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Names of hosts that are being updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> HostNames {
      get { return hostNames_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateClusterHostsMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateClusterHostsMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ClusterId != other.ClusterId) return false;
      if(!hostNames_.Equals(other.hostNames_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= hostNames_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ClusterId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ClusterId);
      }
      hostNames_.WriteTo(output, _repeated_hostNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += hostNames_.CalculateSize(_repeated_hostNames_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateClusterHostsMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      hostNames_.Add(other.hostNames_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ClusterId = input.ReadString();
            break;
          }
          case 18: {
            hostNames_.AddEntriesFrom(input, _repeated_hostNames_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateHostSpec : pb::IMessage<UpdateHostSpec> {
    private static readonly pb::MessageParser<UpdateHostSpec> _parser = new pb::MessageParser<UpdateHostSpec>(() => new UpdateHostSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateHostSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[37]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateHostSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateHostSpec(UpdateHostSpec other) : this() {
      hostName_ = other.hostName_;
      replicationSource_ = other.replicationSource_;
      Priority = other.Priority;
      configSpec_ = other.configSpec_ != null ? other.configSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateHostSpec Clone() {
      return new UpdateHostSpec(this);
    }

    /// <summary>Field number for the "host_name" field.</summary>
    public const int HostNameFieldNumber = 1;
    private string hostName_ = "";
    /// <summary>
    /// Name of the host to update.
    /// To get the PostgreSQL host name, use a [ClusterService.ListHosts] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string HostName {
      get { return hostName_; }
      set {
        hostName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replication_source" field.</summary>
    public const int ReplicationSourceFieldNumber = 2;
    private string replicationSource_ = "";
    /// <summary>
    /// [Host.name] of the host to be used as the replication source (for cascading replication).
    /// To get the PostgreSQL host name, use a [ClusterService.ListHosts] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplicationSource {
      get { return replicationSource_; }
      set {
        replicationSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_priority_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? priority_;
    /// <summary>
    /// The host with the highest priority is the synchronous replica. All others are asynchronous.
    /// The synchronous replica replaces the master when needed.
    ///
    /// When a replica becomes the master, its priority is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }


    /// <summary>Field number for the "config_spec" field.</summary>
    public const int ConfigSpecFieldNumber = 4;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec configSpec_;
    /// <summary>
    /// Configuration of a PostgreSQL server for the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec ConfigSpec {
      get { return configSpec_; }
      set {
        configSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateHostSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateHostSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (HostName != other.HostName) return false;
      if (ReplicationSource != other.ReplicationSource) return false;
      if (Priority != other.Priority) return false;
      if (!object.Equals(ConfigSpec, other.ConfigSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (HostName.Length != 0) hash ^= HostName.GetHashCode();
      if (ReplicationSource.Length != 0) hash ^= ReplicationSource.GetHashCode();
      if (priority_ != null) hash ^= Priority.GetHashCode();
      if (configSpec_ != null) hash ^= ConfigSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (HostName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(HostName);
      }
      if (ReplicationSource.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ReplicationSource);
      }
      if (priority_ != null) {
        _single_priority_codec.WriteTagAndValue(output, Priority);
      }
      if (configSpec_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(ConfigSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (HostName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(HostName);
      }
      if (ReplicationSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplicationSource);
      }
      if (priority_ != null) {
        size += _single_priority_codec.CalculateSizeWithTag(Priority);
      }
      if (configSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfigSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateHostSpec other) {
      if (other == null) {
        return;
      }
      if (other.HostName.Length != 0) {
        HostName = other.HostName;
      }
      if (other.ReplicationSource.Length != 0) {
        ReplicationSource = other.ReplicationSource;
      }
      if (other.priority_ != null) {
        if (priority_ == null || other.Priority != 0L) {
          Priority = other.Priority;
        }
      }
      if (other.configSpec_ != null) {
        if (configSpec_ == null) {
          ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec();
        }
        ConfigSpec.MergeFrom(other.ConfigSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            HostName = input.ReadString();
            break;
          }
          case 18: {
            ReplicationSource = input.ReadString();
            break;
          }
          case 26: {
            long? value = _single_priority_codec.Read(input);
            if (priority_ == null || value != 0L) {
              Priority = value;
            }
            break;
          }
          case 34: {
            if (configSpec_ == null) {
              ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec();
            }
            input.ReadMessage(ConfigSpec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class HostSpec : pb::IMessage<HostSpec> {
    private static readonly pb::MessageParser<HostSpec> _parser = new pb::MessageParser<HostSpec>(() => new HostSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HostSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[38]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostSpec(HostSpec other) : this() {
      zoneId_ = other.zoneId_;
      subnetId_ = other.subnetId_;
      assignPublicIp_ = other.assignPublicIp_;
      replicationSource_ = other.replicationSource_;
      Priority = other.Priority;
      configSpec_ = other.configSpec_ != null ? other.configSpec_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HostSpec Clone() {
      return new HostSpec(this);
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 1;
    private string zoneId_ = "";
    /// <summary>
    /// ID of the availability zone where the host resides.
    /// To get a list of available zones, use the [yandex.cloud.compute.v1.ZoneService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnet_id" field.</summary>
    public const int SubnetIdFieldNumber = 2;
    private string subnetId_ = "";
    /// <summary>
    /// ID of the subnet that the host should belong to. This subnet should be a part
    /// of the network that the cluster belongs to.
    /// The ID of the network is set in the field [Cluster.network_id].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetId {
      get { return subnetId_; }
      set {
        subnetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "assign_public_ip" field.</summary>
    public const int AssignPublicIpFieldNumber = 3;
    private bool assignPublicIp_;
    /// <summary>
    /// Whether the host should get a public IP address on creation.
    ///
    /// After a host has been created, this setting cannot be changed. To remove an assigned public IP, or to assign
    /// a public IP to a host without one, recreate the host with [assign_public_ip] set as needed.
    ///
    /// Possible values:
    /// * false — don't assign a public IP to the host.
    /// * true — the host should have a public IP address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AssignPublicIp {
      get { return assignPublicIp_; }
      set {
        assignPublicIp_ = value;
      }
    }

    /// <summary>Field number for the "replication_source" field.</summary>
    public const int ReplicationSourceFieldNumber = 4;
    private string replicationSource_ = "";
    /// <summary>
    /// [Host.name] of the host to be used as the replication source (for cascading replication).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplicationSource {
      get { return replicationSource_; }
      set {
        replicationSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "priority" field.</summary>
    public const int PriorityFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_priority_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? priority_;
    /// <summary>
    /// Priority of the host as a replica. A higher value corresponds to higher priority.
    ///
    /// The host with the highest priority is the synchronous replica. All others are asynchronous.
    /// The synchronous replica replaces the master when needed.
    ///
    /// When a replica becomes the master, its priority is ignored.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? Priority {
      get { return priority_; }
      set {
        priority_ = value;
      }
    }


    /// <summary>Field number for the "config_spec" field.</summary>
    public const int ConfigSpecFieldNumber = 6;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec configSpec_;
    /// <summary>
    /// Configuration of a PostgreSQL server for the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec ConfigSpec {
      get { return configSpec_; }
      set {
        configSpec_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HostSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HostSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ZoneId != other.ZoneId) return false;
      if (SubnetId != other.SubnetId) return false;
      if (AssignPublicIp != other.AssignPublicIp) return false;
      if (ReplicationSource != other.ReplicationSource) return false;
      if (Priority != other.Priority) return false;
      if (!object.Equals(ConfigSpec, other.ConfigSpec)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ZoneId.Length != 0) hash ^= ZoneId.GetHashCode();
      if (SubnetId.Length != 0) hash ^= SubnetId.GetHashCode();
      if (AssignPublicIp != false) hash ^= AssignPublicIp.GetHashCode();
      if (ReplicationSource.Length != 0) hash ^= ReplicationSource.GetHashCode();
      if (priority_ != null) hash ^= Priority.GetHashCode();
      if (configSpec_ != null) hash ^= ConfigSpec.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ZoneId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ZoneId);
      }
      if (SubnetId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubnetId);
      }
      if (AssignPublicIp != false) {
        output.WriteRawTag(24);
        output.WriteBool(AssignPublicIp);
      }
      if (ReplicationSource.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ReplicationSource);
      }
      if (priority_ != null) {
        _single_priority_codec.WriteTagAndValue(output, Priority);
      }
      if (configSpec_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ConfigSpec);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ZoneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneId);
      }
      if (SubnetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetId);
      }
      if (AssignPublicIp != false) {
        size += 1 + 1;
      }
      if (ReplicationSource.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplicationSource);
      }
      if (priority_ != null) {
        size += _single_priority_codec.CalculateSizeWithTag(Priority);
      }
      if (configSpec_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ConfigSpec);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HostSpec other) {
      if (other == null) {
        return;
      }
      if (other.ZoneId.Length != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.SubnetId.Length != 0) {
        SubnetId = other.SubnetId;
      }
      if (other.AssignPublicIp != false) {
        AssignPublicIp = other.AssignPublicIp;
      }
      if (other.ReplicationSource.Length != 0) {
        ReplicationSource = other.ReplicationSource;
      }
      if (other.priority_ != null) {
        if (priority_ == null || other.Priority != 0L) {
          Priority = other.Priority;
        }
      }
      if (other.configSpec_ != null) {
        if (configSpec_ == null) {
          ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec();
        }
        ConfigSpec.MergeFrom(other.ConfigSpec);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ZoneId = input.ReadString();
            break;
          }
          case 18: {
            SubnetId = input.ReadString();
            break;
          }
          case 24: {
            AssignPublicIp = input.ReadBool();
            break;
          }
          case 34: {
            ReplicationSource = input.ReadString();
            break;
          }
          case 42: {
            long? value = _single_priority_codec.Read(input);
            if (priority_ == null || value != 0L) {
              Priority = value;
            }
            break;
          }
          case 50: {
            if (configSpec_ == null) {
              ConfigSpec = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConfigHostSpec();
            }
            input.ReadMessage(ConfigSpec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ConfigSpec : pb::IMessage<ConfigSpec> {
    private static readonly pb::MessageParser<ConfigSpec> _parser = new pb::MessageParser<ConfigSpec>(() => new ConfigSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[39]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigSpec(ConfigSpec other) : this() {
      version_ = other.version_;
      poolerConfig_ = other.poolerConfig_ != null ? other.poolerConfig_.Clone() : null;
      resources_ = other.resources_ != null ? other.resources_.Clone() : null;
      Autofailover = other.Autofailover;
      backupWindowStart_ = other.backupWindowStart_ != null ? other.backupWindowStart_.Clone() : null;
      access_ = other.access_ != null ? other.access_.Clone() : null;
      switch (other.PostgresqlConfigCase) {
        case PostgresqlConfigOneofCase.PostgresqlConfig96:
          PostgresqlConfig96 = other.PostgresqlConfig96.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig101C:
          PostgresqlConfig101C = other.PostgresqlConfig101C.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig10:
          PostgresqlConfig10 = other.PostgresqlConfig10.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig11:
          PostgresqlConfig11 = other.PostgresqlConfig11.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig12:
          PostgresqlConfig12 = other.PostgresqlConfig12.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigSpec Clone() {
      return new ConfigSpec(this);
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 1;
    private string version_ = "";
    /// <summary>
    /// Version of PostgreSQL used in the cluster.
    /// Possible values: `9.6`, `10`, `10_1c`, `11`, `12`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "postgresql_config_9_6" field.</summary>
    public const int PostgresqlConfig96FieldNumber = 2;
    /// <summary>
    /// Configuration for a PostgreSQL 9.6 cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig9_6 PostgresqlConfig96 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig9_6) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig96;
      }
    }

    /// <summary>Field number for the "postgresql_config_10_1c" field.</summary>
    public const int PostgresqlConfig101CFieldNumber = 10;
    /// <summary>
    /// Configuration for a PostgreSQL 10 1C cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10_1C PostgresqlConfig101C {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10_1C) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig101C;
      }
    }

    /// <summary>Field number for the "postgresql_config_10" field.</summary>
    public const int PostgresqlConfig10FieldNumber = 3;
    /// <summary>
    /// Configuration for a PostgreSQL 10 cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10 PostgresqlConfig10 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig10;
      }
    }

    /// <summary>Field number for the "postgresql_config_11" field.</summary>
    public const int PostgresqlConfig11FieldNumber = 7;
    /// <summary>
    /// Configuration for a PostgreSQL 11 cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig11 PostgresqlConfig11 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig11) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig11;
      }
    }

    /// <summary>Field number for the "postgresql_config_12" field.</summary>
    public const int PostgresqlConfig12FieldNumber = 11;
    /// <summary>
    /// Configuration for a PostgreSQL 12 cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig12 PostgresqlConfig12 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig12) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig12;
      }
    }

    /// <summary>Field number for the "pooler_config" field.</summary>
    public const int PoolerConfigFieldNumber = 4;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig poolerConfig_;
    /// <summary>
    /// Configuration of the connection pooler.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig PoolerConfig {
      get { return poolerConfig_; }
      set {
        poolerConfig_ = value;
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 5;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Resources resources_;
    /// <summary>
    /// Resources allocated to PostgreSQL hosts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Resources Resources {
      get { return resources_; }
      set {
        resources_ = value;
      }
    }

    /// <summary>Field number for the "autofailover" field.</summary>
    public const int AutofailoverFieldNumber = 6;
    private static readonly pb::FieldCodec<bool?> _single_autofailover_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
    private bool? autofailover_;
    /// <summary>
    /// Configuration setting which enables/disables autofailover in cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Autofailover {
      get { return autofailover_; }
      set {
        autofailover_ = value;
      }
    }


    /// <summary>Field number for the "backup_window_start" field.</summary>
    public const int BackupWindowStartFieldNumber = 8;
    private global::Google.Type.TimeOfDay backupWindowStart_;
    /// <summary>
    /// Time to start the daily backup, in the UTC timezone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Type.TimeOfDay BackupWindowStart {
      get { return backupWindowStart_; }
      set {
        backupWindowStart_ = value;
      }
    }

    /// <summary>Field number for the "access" field.</summary>
    public const int AccessFieldNumber = 9;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Access access_;
    /// <summary>
    /// Access policy to DB
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Access Access {
      get { return access_; }
      set {
        access_ = value;
      }
    }

    private object postgresqlConfig_;
    /// <summary>Enum of possible cases for the "postgresql_config" oneof.</summary>
    public enum PostgresqlConfigOneofCase {
      None = 0,
      PostgresqlConfig96 = 2,
      PostgresqlConfig101C = 10,
      PostgresqlConfig10 = 3,
      PostgresqlConfig11 = 7,
      PostgresqlConfig12 = 11,
    }
    private PostgresqlConfigOneofCase postgresqlConfigCase_ = PostgresqlConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresqlConfigOneofCase PostgresqlConfigCase {
      get { return postgresqlConfigCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostgresqlConfig() {
      postgresqlConfigCase_ = PostgresqlConfigOneofCase.None;
      postgresqlConfig_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Version != other.Version) return false;
      if (!object.Equals(PostgresqlConfig96, other.PostgresqlConfig96)) return false;
      if (!object.Equals(PostgresqlConfig101C, other.PostgresqlConfig101C)) return false;
      if (!object.Equals(PostgresqlConfig10, other.PostgresqlConfig10)) return false;
      if (!object.Equals(PostgresqlConfig11, other.PostgresqlConfig11)) return false;
      if (!object.Equals(PostgresqlConfig12, other.PostgresqlConfig12)) return false;
      if (!object.Equals(PoolerConfig, other.PoolerConfig)) return false;
      if (!object.Equals(Resources, other.Resources)) return false;
      if (Autofailover != other.Autofailover) return false;
      if (!object.Equals(BackupWindowStart, other.BackupWindowStart)) return false;
      if (!object.Equals(Access, other.Access)) return false;
      if (PostgresqlConfigCase != other.PostgresqlConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) hash ^= PostgresqlConfig96.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) hash ^= PostgresqlConfig101C.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) hash ^= PostgresqlConfig10.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) hash ^= PostgresqlConfig11.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) hash ^= PostgresqlConfig12.GetHashCode();
      if (poolerConfig_ != null) hash ^= PoolerConfig.GetHashCode();
      if (resources_ != null) hash ^= Resources.GetHashCode();
      if (autofailover_ != null) hash ^= Autofailover.GetHashCode();
      if (backupWindowStart_ != null) hash ^= BackupWindowStart.GetHashCode();
      if (access_ != null) hash ^= Access.GetHashCode();
      hash ^= (int) postgresqlConfigCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Version.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Version);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
        output.WriteRawTag(18);
        output.WriteMessage(PostgresqlConfig96);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
        output.WriteRawTag(26);
        output.WriteMessage(PostgresqlConfig10);
      }
      if (poolerConfig_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PoolerConfig);
      }
      if (resources_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Resources);
      }
      if (autofailover_ != null) {
        _single_autofailover_codec.WriteTagAndValue(output, Autofailover);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
        output.WriteRawTag(58);
        output.WriteMessage(PostgresqlConfig11);
      }
      if (backupWindowStart_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(BackupWindowStart);
      }
      if (access_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Access);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
        output.WriteRawTag(82);
        output.WriteMessage(PostgresqlConfig101C);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
        output.WriteRawTag(90);
        output.WriteMessage(PostgresqlConfig12);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig96);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig101C);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig10);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig11);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig12);
      }
      if (poolerConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PoolerConfig);
      }
      if (resources_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resources);
      }
      if (autofailover_ != null) {
        size += _single_autofailover_codec.CalculateSizeWithTag(Autofailover);
      }
      if (backupWindowStart_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BackupWindowStart);
      }
      if (access_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Access);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigSpec other) {
      if (other == null) {
        return;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      if (other.poolerConfig_ != null) {
        if (poolerConfig_ == null) {
          PoolerConfig = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig();
        }
        PoolerConfig.MergeFrom(other.PoolerConfig);
      }
      if (other.resources_ != null) {
        if (resources_ == null) {
          Resources = new global::Yandex.Cloud.Mdb.Postgresql.V1.Resources();
        }
        Resources.MergeFrom(other.Resources);
      }
      if (other.autofailover_ != null) {
        if (autofailover_ == null || other.Autofailover != false) {
          Autofailover = other.Autofailover;
        }
      }
      if (other.backupWindowStart_ != null) {
        if (backupWindowStart_ == null) {
          BackupWindowStart = new global::Google.Type.TimeOfDay();
        }
        BackupWindowStart.MergeFrom(other.BackupWindowStart);
      }
      if (other.access_ != null) {
        if (access_ == null) {
          Access = new global::Yandex.Cloud.Mdb.Postgresql.V1.Access();
        }
        Access.MergeFrom(other.Access);
      }
      switch (other.PostgresqlConfigCase) {
        case PostgresqlConfigOneofCase.PostgresqlConfig96:
          if (PostgresqlConfig96 == null) {
            PostgresqlConfig96 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig9_6();
          }
          PostgresqlConfig96.MergeFrom(other.PostgresqlConfig96);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig101C:
          if (PostgresqlConfig101C == null) {
            PostgresqlConfig101C = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10_1C();
          }
          PostgresqlConfig101C.MergeFrom(other.PostgresqlConfig101C);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig10:
          if (PostgresqlConfig10 == null) {
            PostgresqlConfig10 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10();
          }
          PostgresqlConfig10.MergeFrom(other.PostgresqlConfig10);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig11:
          if (PostgresqlConfig11 == null) {
            PostgresqlConfig11 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig11();
          }
          PostgresqlConfig11.MergeFrom(other.PostgresqlConfig11);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig12:
          if (PostgresqlConfig12 == null) {
            PostgresqlConfig12 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig12();
          }
          PostgresqlConfig12.MergeFrom(other.PostgresqlConfig12);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Version = input.ReadString();
            break;
          }
          case 18: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig9_6 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig9_6();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
              subBuilder.MergeFrom(PostgresqlConfig96);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig96 = subBuilder;
            break;
          }
          case 26: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
              subBuilder.MergeFrom(PostgresqlConfig10);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig10 = subBuilder;
            break;
          }
          case 34: {
            if (poolerConfig_ == null) {
              PoolerConfig = new global::Yandex.Cloud.Mdb.Postgresql.V1.ConnectionPoolerConfig();
            }
            input.ReadMessage(PoolerConfig);
            break;
          }
          case 42: {
            if (resources_ == null) {
              Resources = new global::Yandex.Cloud.Mdb.Postgresql.V1.Resources();
            }
            input.ReadMessage(Resources);
            break;
          }
          case 50: {
            bool? value = _single_autofailover_codec.Read(input);
            if (autofailover_ == null || value != false) {
              Autofailover = value;
            }
            break;
          }
          case 58: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig11 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig11();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
              subBuilder.MergeFrom(PostgresqlConfig11);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig11 = subBuilder;
            break;
          }
          case 66: {
            if (backupWindowStart_ == null) {
              BackupWindowStart = new global::Google.Type.TimeOfDay();
            }
            input.ReadMessage(BackupWindowStart);
            break;
          }
          case 74: {
            if (access_ == null) {
              Access = new global::Yandex.Cloud.Mdb.Postgresql.V1.Access();
            }
            input.ReadMessage(Access);
            break;
          }
          case 82: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10_1C subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig10_1C();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
              subBuilder.MergeFrom(PostgresqlConfig101C);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig101C = subBuilder;
            break;
          }
          case 90: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig12 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlConfig12();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
              subBuilder.MergeFrom(PostgresqlConfig12);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig12 = subBuilder;
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ConfigHostSpec : pb::IMessage<ConfigHostSpec> {
    private static readonly pb::MessageParser<ConfigHostSpec> _parser = new pb::MessageParser<ConfigHostSpec>(() => new ConfigHostSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ConfigHostSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.ClusterServiceReflection.Descriptor.MessageTypes[40]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigHostSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigHostSpec(ConfigHostSpec other) : this() {
      switch (other.PostgresqlConfigCase) {
        case PostgresqlConfigOneofCase.PostgresqlConfig96:
          PostgresqlConfig96 = other.PostgresqlConfig96.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig101C:
          PostgresqlConfig101C = other.PostgresqlConfig101C.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig10:
          PostgresqlConfig10 = other.PostgresqlConfig10.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig11:
          PostgresqlConfig11 = other.PostgresqlConfig11.Clone();
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig12:
          PostgresqlConfig12 = other.PostgresqlConfig12.Clone();
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ConfigHostSpec Clone() {
      return new ConfigHostSpec(this);
    }

    /// <summary>Field number for the "postgresql_config_9_6" field.</summary>
    public const int PostgresqlConfig96FieldNumber = 1;
    /// <summary>
    /// Configuration for a host with PostgreSQL 9.6 server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6 PostgresqlConfig96 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig96;
      }
    }

    /// <summary>Field number for the "postgresql_config_10_1c" field.</summary>
    public const int PostgresqlConfig101CFieldNumber = 4;
    /// <summary>
    /// Configuration for a host with PostgreSQL 10 1C server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C PostgresqlConfig101C {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig101C;
      }
    }

    /// <summary>Field number for the "postgresql_config_10" field.</summary>
    public const int PostgresqlConfig10FieldNumber = 2;
    /// <summary>
    /// Configuration for a host with PostgreSQL 10 server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10 PostgresqlConfig10 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig10;
      }
    }

    /// <summary>Field number for the "postgresql_config_11" field.</summary>
    public const int PostgresqlConfig11FieldNumber = 3;
    /// <summary>
    /// Configuration for a host with PostgreSQL 11 server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11 PostgresqlConfig11 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig11;
      }
    }

    /// <summary>Field number for the "postgresql_config_12" field.</summary>
    public const int PostgresqlConfig12FieldNumber = 5;
    /// <summary>
    /// Configuration for a host with PostgreSQL 12 server deployed.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12 PostgresqlConfig12 {
      get { return postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12 ? (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12) postgresqlConfig_ : null; }
      set {
        postgresqlConfig_ = value;
        postgresqlConfigCase_ = value == null ? PostgresqlConfigOneofCase.None : PostgresqlConfigOneofCase.PostgresqlConfig12;
      }
    }

    private object postgresqlConfig_;
    /// <summary>Enum of possible cases for the "postgresql_config" oneof.</summary>
    public enum PostgresqlConfigOneofCase {
      None = 0,
      PostgresqlConfig96 = 1,
      PostgresqlConfig101C = 4,
      PostgresqlConfig10 = 2,
      PostgresqlConfig11 = 3,
      PostgresqlConfig12 = 5,
    }
    private PostgresqlConfigOneofCase postgresqlConfigCase_ = PostgresqlConfigOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresqlConfigOneofCase PostgresqlConfigCase {
      get { return postgresqlConfigCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPostgresqlConfig() {
      postgresqlConfigCase_ = PostgresqlConfigOneofCase.None;
      postgresqlConfig_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ConfigHostSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ConfigHostSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(PostgresqlConfig96, other.PostgresqlConfig96)) return false;
      if (!object.Equals(PostgresqlConfig101C, other.PostgresqlConfig101C)) return false;
      if (!object.Equals(PostgresqlConfig10, other.PostgresqlConfig10)) return false;
      if (!object.Equals(PostgresqlConfig11, other.PostgresqlConfig11)) return false;
      if (!object.Equals(PostgresqlConfig12, other.PostgresqlConfig12)) return false;
      if (PostgresqlConfigCase != other.PostgresqlConfigCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) hash ^= PostgresqlConfig96.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) hash ^= PostgresqlConfig101C.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) hash ^= PostgresqlConfig10.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) hash ^= PostgresqlConfig11.GetHashCode();
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) hash ^= PostgresqlConfig12.GetHashCode();
      hash ^= (int) postgresqlConfigCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
        output.WriteRawTag(10);
        output.WriteMessage(PostgresqlConfig96);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
        output.WriteRawTag(18);
        output.WriteMessage(PostgresqlConfig10);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
        output.WriteRawTag(26);
        output.WriteMessage(PostgresqlConfig11);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
        output.WriteRawTag(34);
        output.WriteMessage(PostgresqlConfig101C);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
        output.WriteRawTag(42);
        output.WriteMessage(PostgresqlConfig12);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig96);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig101C);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig10);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig11);
      }
      if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PostgresqlConfig12);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ConfigHostSpec other) {
      if (other == null) {
        return;
      }
      switch (other.PostgresqlConfigCase) {
        case PostgresqlConfigOneofCase.PostgresqlConfig96:
          if (PostgresqlConfig96 == null) {
            PostgresqlConfig96 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6();
          }
          PostgresqlConfig96.MergeFrom(other.PostgresqlConfig96);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig101C:
          if (PostgresqlConfig101C == null) {
            PostgresqlConfig101C = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C();
          }
          PostgresqlConfig101C.MergeFrom(other.PostgresqlConfig101C);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig10:
          if (PostgresqlConfig10 == null) {
            PostgresqlConfig10 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10();
          }
          PostgresqlConfig10.MergeFrom(other.PostgresqlConfig10);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig11:
          if (PostgresqlConfig11 == null) {
            PostgresqlConfig11 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11();
          }
          PostgresqlConfig11.MergeFrom(other.PostgresqlConfig11);
          break;
        case PostgresqlConfigOneofCase.PostgresqlConfig12:
          if (PostgresqlConfig12 == null) {
            PostgresqlConfig12 = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12();
          }
          PostgresqlConfig12.MergeFrom(other.PostgresqlConfig12);
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig96) {
              subBuilder.MergeFrom(PostgresqlConfig96);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig96 = subBuilder;
            break;
          }
          case 18: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig10) {
              subBuilder.MergeFrom(PostgresqlConfig10);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig10 = subBuilder;
            break;
          }
          case 26: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig11();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig11) {
              subBuilder.MergeFrom(PostgresqlConfig11);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig11 = subBuilder;
            break;
          }
          case 34: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig10_1C();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig101C) {
              subBuilder.MergeFrom(PostgresqlConfig101C);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig101C = subBuilder;
            break;
          }
          case 42: {
            global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12 subBuilder = new global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig12();
            if (postgresqlConfigCase_ == PostgresqlConfigOneofCase.PostgresqlConfig12) {
              subBuilder.MergeFrom(PostgresqlConfig12);
            }
            input.ReadMessage(subBuilder);
            PostgresqlConfig12 = subBuilder;
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
