// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/mdb/postgresql/v1/config/host9_6.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Mdb.Postgresql.V1.Config {

  /// <summary>Holder for reflection information generated from yandex/cloud/mdb/postgresql/v1/config/host9_6.proto</summary>
  internal static partial class Host96Reflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/mdb/postgresql/v1/config/host9_6.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static Host96Reflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CjN5YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvY29uZmlnL2hvc3Q5",
            "XzYucHJvdG8SJXlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5jb25m",
            "aWcaHmdvb2dsZS9wcm90b2J1Zi93cmFwcGVycy5wcm90bxodeWFuZGV4L2Ns",
            "b3VkL3ZhbGlkYXRpb24ucHJvdG8i5CkKF1Bvc3RncmVzcWxIb3N0Q29uZmln",
            "OV82Ej0KGHJlY292ZXJ5X21pbl9hcHBseV9kZWxheRgBIAEoCzIbLmdvb2ds",
            "ZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEjMKDnNoYXJlZF9idWZmZXJzGAIgASgL",
            "MhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSMQoMdGVtcF9idWZmZXJz",
            "GAMgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSLQoId29ya19t",
            "ZW0YBCABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRI8ChdyZXBs",
            "YWNlbWVudF9zb3J0X3R1cGxlcxgFIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5J",
            "bnQ2NFZhbHVlEjQKD3RlbXBfZmlsZV9saW1pdBgGIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQ2NFZhbHVlEkQKE2JhY2tlbmRfZmx1c2hfYWZ0ZXIYByAB",
            "KAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUIK+scxBjAtMjA0OBJJ",
            "ChZvbGRfc25hcHNob3RfdGhyZXNob2xkGAggASgLMhsuZ29vZ2xlLnByb3Rv",
            "YnVmLkludDY0VmFsdWVCDPrHMQgtMS04NjQwMBJAChttYXhfc3RhbmRieV9z",
            "dHJlYW1pbmdfZGVsYXkYCSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRW",
            "YWx1ZRJwChRjb25zdHJhaW50X2V4Y2x1c2lvbhgKIAEoDjJSLnlhbmRleC5j",
            "bG91ZC5tZGIucG9zdGdyZXNxbC52MS5jb25maWcuUG9zdGdyZXNxbEhvc3RD",
            "b25maWc5XzYuQ29uc3RyYWludEV4Y2x1c2lvbhI7ChVjdXJzb3JfdHVwbGVf",
            "ZnJhY3Rpb24YCyABKAsyHC5nb29nbGUucHJvdG9idWYuRG91YmxlVmFsdWUS",
            "SgoTZnJvbV9jb2xsYXBzZV9saW1pdBgMIAEoCzIbLmdvb2dsZS5wcm90b2J1",
            "Zi5JbnQ2NFZhbHVlQhD6xzEMMS0yMTQ3NDgzNjQ3EkoKE2pvaW5fY29sbGFw",
            "c2VfbGltaXQYDSABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUIQ",
            "+scxDDEtMjE0NzQ4MzY0NxJtChNmb3JjZV9wYXJhbGxlbF9tb2RlGA4gASgO",
            "MlAueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0",
            "Z3Jlc3FsSG9zdENvbmZpZzlfNi5Gb3JjZVBhcmFsbGVsTW9kZRJkChNjbGll",
            "bnRfbWluX21lc3NhZ2VzGA8gASgOMkcueWFuZGV4LmNsb3VkLm1kYi5wb3N0",
            "Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0Z3Jlc3FsSG9zdENvbmZpZzlfNi5Mb2dM",
            "ZXZlbBJhChBsb2dfbWluX21lc3NhZ2VzGBAgASgOMkcueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0Z3Jlc3FsSG9zdENvbmZp",
            "ZzlfNi5Mb2dMZXZlbBJoChdsb2dfbWluX2Vycm9yX3N0YXRlbWVudBgRIAEo",
            "DjJHLnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MS5jb25maWcuUG9z",
            "dGdyZXNxbEhvc3RDb25maWc5XzYuTG9nTGV2ZWwSPwoabG9nX21pbl9kdXJh",
            "dGlvbl9zdGF0ZW1lbnQYEiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRW",
            "YWx1ZRIzCg9sb2dfY2hlY2twb2ludHMYEyABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuQm9vbFZhbHVlEjMKD2xvZ19jb25uZWN0aW9ucxgUIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5Cb29sVmFsdWUSNgoSbG9nX2Rpc2Nvbm5lY3Rpb25zGBUg",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRIwCgxsb2dfZHVyYXRp",
            "b24YFiABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEm0KE2xvZ19l",
            "cnJvcl92ZXJib3NpdHkYFyABKA4yUC55YW5kZXguY2xvdWQubWRiLnBvc3Rn",
            "cmVzcWwudjEuY29uZmlnLlBvc3RncmVzcWxIb3N0Q29uZmlnOV82LkxvZ0Vy",
            "cm9yVmVyYm9zaXR5EjIKDmxvZ19sb2NrX3dhaXRzGBggASgLMhouZ29vZ2xl",
            "LnByb3RvYnVmLkJvb2xWYWx1ZRJiCg1sb2dfc3RhdGVtZW50GBkgASgOMksu",
            "eWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0Z3Jl",
            "c3FsSG9zdENvbmZpZzlfNi5Mb2dTdGF0ZW1lbnQSMwoObG9nX3RlbXBfZmls",
            "ZXMYGiABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZRITCgtzZWFy",
            "Y2hfcGF0aBgbIAEoCRIwCgxyb3dfc2VjdXJpdHkYHCABKAsyGi5nb29nbGUu",
            "cHJvdG9idWYuQm9vbFZhbHVlEnoKHWRlZmF1bHRfdHJhbnNhY3Rpb25faXNv",
            "bGF0aW9uGB0gASgOMlMueWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYx",
            "LmNvbmZpZy5Qb3N0Z3Jlc3FsSG9zdENvbmZpZzlfNi5UcmFuc2FjdGlvbklz",
            "b2xhdGlvbhI2ChFzdGF0ZW1lbnRfdGltZW91dBgeIAEoCzIbLmdvb2dsZS5w",
            "cm90b2J1Zi5JbnQ2NFZhbHVlEjEKDGxvY2tfdGltZW91dBgfIAEoCzIbLmdv",
            "b2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlEkgKI2lkbGVfaW5fdHJhbnNhY3Rp",
            "b25fc2Vzc2lvbl90aW1lb3V0GCAgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDY0VmFsdWUSYAoMYnl0ZWFfb3V0cHV0GCEgASgOMkoueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0Z3Jlc3FsSG9zdENvbmZp",
            "ZzlfNi5CeXRlYU91dHB1dBJbCgl4bWxiaW5hcnkYIiABKA4ySC55YW5kZXgu",
            "Y2xvdWQubWRiLnBvc3RncmVzcWwudjEuY29uZmlnLlBvc3RncmVzcWxIb3N0",
            "Q29uZmlnOV82LlhtbEJpbmFyeRJbCgl4bWxvcHRpb24YIyABKA4ySC55YW5k",
            "ZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuY29uZmlnLlBvc3RncmVzcWxI",
            "b3N0Q29uZmlnOV82LlhtbE9wdGlvbhI7ChZnaW5fcGVuZGluZ19saXN0X2xp",
            "bWl0GCQgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFsdWUSNQoQZGVh",
            "ZGxvY2tfdGltZW91dBglIAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZh",
            "bHVlEj4KGW1heF9sb2Nrc19wZXJfdHJhbnNhY3Rpb24YJiABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50NjRWYWx1ZRJDCh5tYXhfcHJlZF9sb2Nrc19wZXJf",
            "dHJhbnNhY3Rpb24YJyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1",
            "ZRIvCgthcnJheV9udWxscxgoIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29s",
            "VmFsdWUSZgoPYmFja3NsYXNoX3F1b3RlGCkgASgOMk0ueWFuZGV4LmNsb3Vk",
            "Lm1kYi5wb3N0Z3Jlc3FsLnYxLmNvbmZpZy5Qb3N0Z3Jlc3FsSG9zdENvbmZp",
            "ZzlfNi5CYWNrc2xhc2hRdW90ZRI1ChFkZWZhdWx0X3dpdGhfb2lkcxgqIAEo",
            "CzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSOQoVZXNjYXBlX3N0cmlu",
            "Z193YXJuaW5nGCsgASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRI4",
            "ChRsb19jb21wYXRfcHJpdmlsZWdlcxgsIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5Cb29sVmFsdWUSPwobb3BlcmF0b3JfcHJlY2VkZW5jZV93YXJuaW5nGC0g",
            "ASgLMhouZ29vZ2xlLnByb3RvYnVmLkJvb2xWYWx1ZRI5ChVxdW90ZV9hbGxf",
            "aWRlbnRpZmllcnMYLiABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVl",
            "Ej8KG3N0YW5kYXJkX2NvbmZvcm1pbmdfc3RyaW5ncxgvIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5Cb29sVmFsdWUSOAoUc3luY2hyb25pemVfc2Vxc2NhbnMY",
            "MCABKAsyGi5nb29nbGUucHJvdG9idWYuQm9vbFZhbHVlEjkKFXRyYW5zZm9y",
            "bV9udWxsX2VxdWFscxgxIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFs",
            "dWUSMQoNZXhpdF9vbl9lcnJvchgyIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5C",
            "b29sVmFsdWUSMwoNc2VxX3BhZ2VfY29zdBgzIAEoCzIcLmdvb2dsZS5wcm90",
            "b2J1Zi5Eb3VibGVWYWx1ZRI2ChByYW5kb21fcGFnZV9jb3N0GDQgASgLMhwu",
            "Z29vZ2xlLnByb3RvYnVmLkRvdWJsZVZhbHVlEjMKD3NxbF9pbmhlcml0YW5j",
            "ZRg1IAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5Cb29sVmFsdWUSSQoYZWZmZWN0",
            "aXZlX2lvX2NvbmN1cnJlbmN5GDYgASgLMhsuZ29vZ2xlLnByb3RvYnVmLklu",
            "dDY0VmFsdWVCCvrHMQYwLTEwMDASTQoUZWZmZWN0aXZlX2NhY2hlX3NpemUY",
            "NyABKAsyGy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUIS+scxDjAtNTQ5",
            "NzU1ODEzODg4IpoBChNDb25zdHJhaW50RXhjbHVzaW9uEiQKIENPTlNUUkFJ",
            "TlRfRVhDTFVTSU9OX1VOU1BFQ0lGSUVEEAASGwoXQ09OU1RSQUlOVF9FWENM",
            "VVNJT05fT04QARIcChhDT05TVFJBSU5UX0VYQ0xVU0lPTl9PRkYQAhIiCh5D",
            "T05TVFJBSU5UX0VYQ0xVU0lPTl9QQVJUSVRJT04QAyKSAQoRRm9yY2VQYXJh",
            "bGxlbE1vZGUSIwofRk9SQ0VfUEFSQUxMRUxfTU9ERV9VTlNQRUNJRklFRBAA",
            "EhoKFkZPUkNFX1BBUkFMTEVMX01PREVfT04QARIbChdGT1JDRV9QQVJBTExF",
            "TF9NT0RFX09GRhACEh8KG0ZPUkNFX1BBUkFMTEVMX01PREVfUkVHUkVTUxAD",
            "IpICCghMb2dMZXZlbBIZChVMT0dfTEVWRUxfVU5TUEVDSUZJRUQQABIUChBM",
            "T0dfTEVWRUxfREVCVUc1EAESFAoQTE9HX0xFVkVMX0RFQlVHNBACEhQKEExP",
            "R19MRVZFTF9ERUJVRzMQAxIUChBMT0dfTEVWRUxfREVCVUcyEAQSFAoQTE9H",
            "X0xFVkVMX0RFQlVHMRAFEhEKDUxPR19MRVZFTF9MT0cQBhIUChBMT0dfTEVW",
            "RUxfTk9USUNFEAcSFQoRTE9HX0xFVkVMX1dBUk5JTkcQCBITCg9MT0dfTEVW",
            "RUxfRVJST1IQCRITCg9MT0dfTEVWRUxfRkFUQUwQChITCg9MT0dfTEVWRUxf",
            "UEFOSUMQCyKZAQoRTG9nRXJyb3JWZXJib3NpdHkSIwofTE9HX0VSUk9SX1ZF",
            "UkJPU0lUWV9VTlNQRUNJRklFRBAAEh0KGUxPR19FUlJPUl9WRVJCT1NJVFlf",
            "VEVSU0UQARIfChtMT0dfRVJST1JfVkVSQk9TSVRZX0RFRkFVTFQQAhIfChtM",
            "T0dfRVJST1JfVkVSQk9TSVRZX1ZFUkJPU0UQAyKKAQoMTG9nU3RhdGVtZW50",
            "Eh0KGUxPR19TVEFURU1FTlRfVU5TUEVDSUZJRUQQABIWChJMT0dfU1RBVEVN",
            "RU5UX05PTkUQARIVChFMT0dfU1RBVEVNRU5UX0RETBACEhUKEUxPR19TVEFU",
            "RU1FTlRfTU9EEAMSFQoRTE9HX1NUQVRFTUVOVF9BTEwQBCLmAQoUVHJhbnNh",
            "Y3Rpb25Jc29sYXRpb24SJQohVFJBTlNBQ1RJT05fSVNPTEFUSU9OX1VOU1BF",
            "Q0lGSUVEEAASKgomVFJBTlNBQ1RJT05fSVNPTEFUSU9OX1JFQURfVU5DT01N",
            "SVRURUQQARIoCiRUUkFOU0FDVElPTl9JU09MQVRJT05fUkVBRF9DT01NSVRU",
            "RUQQAhIpCiVUUkFOU0FDVElPTl9JU09MQVRJT05fUkVQRUFUQUJMRV9SRUFE",
            "EAMSJgoiVFJBTlNBQ1RJT05fSVNPTEFUSU9OX1NFUklBTElaQUJMRRAEIlsK",
            "C0J5dGVhT3V0cHV0EhwKGEJZVEVBX09VVFBVVF9VTlNQRUNJRklFRBAAEhQK",
            "EEJZVEVBX09VVFBVVF9IRVgQARIYChRCWVRFQV9PVVRQVVRfRVNDQVBFRBAC",
            "IlIKCVhtbEJpbmFyeRIaChZYTUxfQklOQVJZX1VOU1BFQ0lGSUVEEAASFQoR",
            "WE1MX0JJTkFSWV9CQVNFNjQQARISCg5YTUxfQklOQVJZX0hFWBACIlgKCVht",
            "bE9wdGlvbhIaChZYTUxfT1BUSU9OX1VOU1BFQ0lGSUVEEAASFwoTWE1MX09Q",
            "VElPTl9ET0NVTUVOVBABEhYKElhNTF9PUFRJT05fQ09OVEVOVBACIpoBCg5C",
            "YWNrc2xhc2hRdW90ZRIfChtCQUNLU0xBU0hfUVVPVEVfVU5TUEVDSUZJRUQQ",
            "ABITCg9CQUNLU0xBU0hfUVVPVEUQARIWChJCQUNLU0xBU0hfUVVPVEVfT04Q",
            "AhIXChNCQUNLU0xBU0hfUVVPVEVfT0ZGEAMSIQodQkFDS1NMQVNIX1FVT1RF",
            "X1NBRkVfRU5DT0RJTkcQBEKBAQopeWFuZGV4LmNsb3VkLmFwaS5tZGIucG9z",
            "dGdyZXNxbC52MS5jb25maWdaVGdpdGh1Yi5jb20veWFuZGV4LWNsb3VkL2dv",
            "LWdlbnByb3RvL3lhbmRleC9jbG91ZC9tZGIvcG9zdGdyZXNxbC92MS9jb25m",
            "aWc7cG9zdGdyZXNxbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6), global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Parser, new[]{ "RecoveryMinApplyDelay", "SharedBuffers", "TempBuffers", "WorkMem", "ReplacementSortTuples", "TempFileLimit", "BackendFlushAfter", "OldSnapshotThreshold", "MaxStandbyStreamingDelay", "ConstraintExclusion", "CursorTupleFraction", "FromCollapseLimit", "JoinCollapseLimit", "ForceParallelMode", "ClientMinMessages", "LogMinMessages", "LogMinErrorStatement", "LogMinDurationStatement", "LogCheckpoints", "LogConnections", "LogDisconnections", "LogDuration", "LogErrorVerbosity", "LogLockWaits", "LogStatement", "LogTempFiles", "SearchPath", "RowSecurity", "DefaultTransactionIsolation", "StatementTimeout", "LockTimeout", "IdleInTransactionSessionTimeout", "ByteaOutput", "Xmlbinary", "Xmloption", "GinPendingListLimit", "DeadlockTimeout", "MaxLocksPerTransaction", "MaxPredLocksPerTransaction", "ArrayNulls", "BackslashQuote", "DefaultWithOids", "EscapeStringWarning", "LoCompatPrivileges", "OperatorPrecedenceWarning", "QuoteAllIdentifiers", "StandardConformingStrings", "SynchronizeSeqscans", "TransformNullEquals", "ExitOnError", "SeqPageCost", "RandomPageCost", "SqlInheritance", "EffectiveIoConcurrency", "EffectiveCacheSize" }, null, new[]{ typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote) }, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Options and structure of `PostgresqlHostConfig` reflects parameters of a PostgreSQL
  /// configuration file. Detailed description is available in
  /// [PostgreSQL documentation](https://www.postgresql.org/docs/9.6/runtime-config.html).
  /// </summary>
  internal sealed partial class PostgresqlHostConfig9_6 : pb::IMessage<PostgresqlHostConfig9_6> {
    private static readonly pb::MessageParser<PostgresqlHostConfig9_6> _parser = new pb::MessageParser<PostgresqlHostConfig9_6>(() => new PostgresqlHostConfig9_6());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PostgresqlHostConfig9_6> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.Config.Host96Reflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresqlHostConfig9_6() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresqlHostConfig9_6(PostgresqlHostConfig9_6 other) : this() {
      RecoveryMinApplyDelay = other.RecoveryMinApplyDelay;
      SharedBuffers = other.SharedBuffers;
      TempBuffers = other.TempBuffers;
      WorkMem = other.WorkMem;
      ReplacementSortTuples = other.ReplacementSortTuples;
      TempFileLimit = other.TempFileLimit;
      BackendFlushAfter = other.BackendFlushAfter;
      OldSnapshotThreshold = other.OldSnapshotThreshold;
      MaxStandbyStreamingDelay = other.MaxStandbyStreamingDelay;
      constraintExclusion_ = other.constraintExclusion_;
      CursorTupleFraction = other.CursorTupleFraction;
      FromCollapseLimit = other.FromCollapseLimit;
      JoinCollapseLimit = other.JoinCollapseLimit;
      forceParallelMode_ = other.forceParallelMode_;
      clientMinMessages_ = other.clientMinMessages_;
      logMinMessages_ = other.logMinMessages_;
      logMinErrorStatement_ = other.logMinErrorStatement_;
      LogMinDurationStatement = other.LogMinDurationStatement;
      LogCheckpoints = other.LogCheckpoints;
      LogConnections = other.LogConnections;
      LogDisconnections = other.LogDisconnections;
      LogDuration = other.LogDuration;
      logErrorVerbosity_ = other.logErrorVerbosity_;
      LogLockWaits = other.LogLockWaits;
      logStatement_ = other.logStatement_;
      LogTempFiles = other.LogTempFiles;
      searchPath_ = other.searchPath_;
      RowSecurity = other.RowSecurity;
      defaultTransactionIsolation_ = other.defaultTransactionIsolation_;
      StatementTimeout = other.StatementTimeout;
      LockTimeout = other.LockTimeout;
      IdleInTransactionSessionTimeout = other.IdleInTransactionSessionTimeout;
      byteaOutput_ = other.byteaOutput_;
      xmlbinary_ = other.xmlbinary_;
      xmloption_ = other.xmloption_;
      GinPendingListLimit = other.GinPendingListLimit;
      DeadlockTimeout = other.DeadlockTimeout;
      MaxLocksPerTransaction = other.MaxLocksPerTransaction;
      MaxPredLocksPerTransaction = other.MaxPredLocksPerTransaction;
      ArrayNulls = other.ArrayNulls;
      backslashQuote_ = other.backslashQuote_;
      DefaultWithOids = other.DefaultWithOids;
      EscapeStringWarning = other.EscapeStringWarning;
      LoCompatPrivileges = other.LoCompatPrivileges;
      OperatorPrecedenceWarning = other.OperatorPrecedenceWarning;
      QuoteAllIdentifiers = other.QuoteAllIdentifiers;
      StandardConformingStrings = other.StandardConformingStrings;
      SynchronizeSeqscans = other.SynchronizeSeqscans;
      TransformNullEquals = other.TransformNullEquals;
      ExitOnError = other.ExitOnError;
      SeqPageCost = other.SeqPageCost;
      RandomPageCost = other.RandomPageCost;
      SqlInheritance = other.SqlInheritance;
      EffectiveIoConcurrency = other.EffectiveIoConcurrency;
      EffectiveCacheSize = other.EffectiveCacheSize;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PostgresqlHostConfig9_6 Clone() {
      return new PostgresqlHostConfig9_6(this);
    }

    /// <summary>Field number for the "recovery_min_apply_delay" field.</summary>
    public const int RecoveryMinApplyDelayFieldNumber = 1;
    private static readonly pb::FieldCodec<long?> _single_recoveryMinApplyDelay_codec = pb::FieldCodec.ForStructWrapper<long>(10);
    private long? recoveryMinApplyDelay_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? RecoveryMinApplyDelay {
      get { return recoveryMinApplyDelay_; }
      set {
        recoveryMinApplyDelay_ = value;
      }
    }


    /// <summary>Field number for the "shared_buffers" field.</summary>
    public const int SharedBuffersFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_sharedBuffers_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? sharedBuffers_;
    /// <summary>
    /// in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? SharedBuffers {
      get { return sharedBuffers_; }
      set {
        sharedBuffers_ = value;
      }
    }


    /// <summary>Field number for the "temp_buffers" field.</summary>
    public const int TempBuffersFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_tempBuffers_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? tempBuffers_;
    /// <summary>
    /// in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TempBuffers {
      get { return tempBuffers_; }
      set {
        tempBuffers_ = value;
      }
    }


    /// <summary>Field number for the "work_mem" field.</summary>
    public const int WorkMemFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_workMem_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? workMem_;
    /// <summary>
    /// in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? WorkMem {
      get { return workMem_; }
      set {
        workMem_ = value;
      }
    }


    /// <summary>Field number for the "replacement_sort_tuples" field.</summary>
    public const int ReplacementSortTuplesFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_replacementSortTuples_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? replacementSortTuples_;
    /// <summary>
    /// in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? ReplacementSortTuples {
      get { return replacementSortTuples_; }
      set {
        replacementSortTuples_ = value;
      }
    }


    /// <summary>Field number for the "temp_file_limit" field.</summary>
    public const int TempFileLimitFieldNumber = 6;
    private static readonly pb::FieldCodec<long?> _single_tempFileLimit_codec = pb::FieldCodec.ForStructWrapper<long>(50);
    private long? tempFileLimit_;
    /// <summary>
    /// in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TempFileLimit {
      get { return tempFileLimit_; }
      set {
        tempFileLimit_ = value;
      }
    }


    /// <summary>Field number for the "backend_flush_after" field.</summary>
    public const int BackendFlushAfterFieldNumber = 7;
    private static readonly pb::FieldCodec<long?> _single_backendFlushAfter_codec = pb::FieldCodec.ForStructWrapper<long>(58);
    private long? backendFlushAfter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? BackendFlushAfter {
      get { return backendFlushAfter_; }
      set {
        backendFlushAfter_ = value;
      }
    }


    /// <summary>Field number for the "old_snapshot_threshold" field.</summary>
    public const int OldSnapshotThresholdFieldNumber = 8;
    private static readonly pb::FieldCodec<long?> _single_oldSnapshotThreshold_codec = pb::FieldCodec.ForStructWrapper<long>(66);
    private long? oldSnapshotThreshold_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? OldSnapshotThreshold {
      get { return oldSnapshotThreshold_; }
      set {
        oldSnapshotThreshold_ = value;
      }
    }


    /// <summary>Field number for the "max_standby_streaming_delay" field.</summary>
    public const int MaxStandbyStreamingDelayFieldNumber = 9;
    private static readonly pb::FieldCodec<long?> _single_maxStandbyStreamingDelay_codec = pb::FieldCodec.ForStructWrapper<long>(74);
    private long? maxStandbyStreamingDelay_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? MaxStandbyStreamingDelay {
      get { return maxStandbyStreamingDelay_; }
      set {
        maxStandbyStreamingDelay_ = value;
      }
    }


    /// <summary>Field number for the "constraint_exclusion" field.</summary>
    public const int ConstraintExclusionFieldNumber = 10;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion constraintExclusion_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion ConstraintExclusion {
      get { return constraintExclusion_; }
      set {
        constraintExclusion_ = value;
      }
    }

    /// <summary>Field number for the "cursor_tuple_fraction" field.</summary>
    public const int CursorTupleFractionFieldNumber = 11;
    private static readonly pb::FieldCodec<double?> _single_cursorTupleFraction_codec = pb::FieldCodec.ForStructWrapper<double>(90);
    private double? cursorTupleFraction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? CursorTupleFraction {
      get { return cursorTupleFraction_; }
      set {
        cursorTupleFraction_ = value;
      }
    }


    /// <summary>Field number for the "from_collapse_limit" field.</summary>
    public const int FromCollapseLimitFieldNumber = 12;
    private static readonly pb::FieldCodec<long?> _single_fromCollapseLimit_codec = pb::FieldCodec.ForStructWrapper<long>(98);
    private long? fromCollapseLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? FromCollapseLimit {
      get { return fromCollapseLimit_; }
      set {
        fromCollapseLimit_ = value;
      }
    }


    /// <summary>Field number for the "join_collapse_limit" field.</summary>
    public const int JoinCollapseLimitFieldNumber = 13;
    private static readonly pb::FieldCodec<long?> _single_joinCollapseLimit_codec = pb::FieldCodec.ForStructWrapper<long>(106);
    private long? joinCollapseLimit_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? JoinCollapseLimit {
      get { return joinCollapseLimit_; }
      set {
        joinCollapseLimit_ = value;
      }
    }


    /// <summary>Field number for the "force_parallel_mode" field.</summary>
    public const int ForceParallelModeFieldNumber = 14;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode forceParallelMode_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode ForceParallelMode {
      get { return forceParallelMode_; }
      set {
        forceParallelMode_ = value;
      }
    }

    /// <summary>Field number for the "client_min_messages" field.</summary>
    public const int ClientMinMessagesFieldNumber = 15;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel clientMinMessages_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel ClientMinMessages {
      get { return clientMinMessages_; }
      set {
        clientMinMessages_ = value;
      }
    }

    /// <summary>Field number for the "log_min_messages" field.</summary>
    public const int LogMinMessagesFieldNumber = 16;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel logMinMessages_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel LogMinMessages {
      get { return logMinMessages_; }
      set {
        logMinMessages_ = value;
      }
    }

    /// <summary>Field number for the "log_min_error_statement" field.</summary>
    public const int LogMinErrorStatementFieldNumber = 17;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel logMinErrorStatement_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel LogMinErrorStatement {
      get { return logMinErrorStatement_; }
      set {
        logMinErrorStatement_ = value;
      }
    }

    /// <summary>Field number for the "log_min_duration_statement" field.</summary>
    public const int LogMinDurationStatementFieldNumber = 18;
    private static readonly pb::FieldCodec<long?> _single_logMinDurationStatement_codec = pb::FieldCodec.ForStructWrapper<long>(146);
    private long? logMinDurationStatement_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? LogMinDurationStatement {
      get { return logMinDurationStatement_; }
      set {
        logMinDurationStatement_ = value;
      }
    }


    /// <summary>Field number for the "log_checkpoints" field.</summary>
    public const int LogCheckpointsFieldNumber = 19;
    private static readonly pb::FieldCodec<bool?> _single_logCheckpoints_codec = pb::FieldCodec.ForStructWrapper<bool>(154);
    private bool? logCheckpoints_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? LogCheckpoints {
      get { return logCheckpoints_; }
      set {
        logCheckpoints_ = value;
      }
    }


    /// <summary>Field number for the "log_connections" field.</summary>
    public const int LogConnectionsFieldNumber = 20;
    private static readonly pb::FieldCodec<bool?> _single_logConnections_codec = pb::FieldCodec.ForStructWrapper<bool>(162);
    private bool? logConnections_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? LogConnections {
      get { return logConnections_; }
      set {
        logConnections_ = value;
      }
    }


    /// <summary>Field number for the "log_disconnections" field.</summary>
    public const int LogDisconnectionsFieldNumber = 21;
    private static readonly pb::FieldCodec<bool?> _single_logDisconnections_codec = pb::FieldCodec.ForStructWrapper<bool>(170);
    private bool? logDisconnections_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? LogDisconnections {
      get { return logDisconnections_; }
      set {
        logDisconnections_ = value;
      }
    }


    /// <summary>Field number for the "log_duration" field.</summary>
    public const int LogDurationFieldNumber = 22;
    private static readonly pb::FieldCodec<bool?> _single_logDuration_codec = pb::FieldCodec.ForStructWrapper<bool>(178);
    private bool? logDuration_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? LogDuration {
      get { return logDuration_; }
      set {
        logDuration_ = value;
      }
    }


    /// <summary>Field number for the "log_error_verbosity" field.</summary>
    public const int LogErrorVerbosityFieldNumber = 23;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity logErrorVerbosity_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity LogErrorVerbosity {
      get { return logErrorVerbosity_; }
      set {
        logErrorVerbosity_ = value;
      }
    }

    /// <summary>Field number for the "log_lock_waits" field.</summary>
    public const int LogLockWaitsFieldNumber = 24;
    private static readonly pb::FieldCodec<bool?> _single_logLockWaits_codec = pb::FieldCodec.ForStructWrapper<bool>(194);
    private bool? logLockWaits_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? LogLockWaits {
      get { return logLockWaits_; }
      set {
        logLockWaits_ = value;
      }
    }


    /// <summary>Field number for the "log_statement" field.</summary>
    public const int LogStatementFieldNumber = 25;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement logStatement_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement LogStatement {
      get { return logStatement_; }
      set {
        logStatement_ = value;
      }
    }

    /// <summary>Field number for the "log_temp_files" field.</summary>
    public const int LogTempFilesFieldNumber = 26;
    private static readonly pb::FieldCodec<long?> _single_logTempFiles_codec = pb::FieldCodec.ForStructWrapper<long>(210);
    private long? logTempFiles_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? LogTempFiles {
      get { return logTempFiles_; }
      set {
        logTempFiles_ = value;
      }
    }


    /// <summary>Field number for the "search_path" field.</summary>
    public const int SearchPathFieldNumber = 27;
    private string searchPath_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SearchPath {
      get { return searchPath_; }
      set {
        searchPath_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "row_security" field.</summary>
    public const int RowSecurityFieldNumber = 28;
    private static readonly pb::FieldCodec<bool?> _single_rowSecurity_codec = pb::FieldCodec.ForStructWrapper<bool>(226);
    private bool? rowSecurity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? RowSecurity {
      get { return rowSecurity_; }
      set {
        rowSecurity_ = value;
      }
    }


    /// <summary>Field number for the "default_transaction_isolation" field.</summary>
    public const int DefaultTransactionIsolationFieldNumber = 29;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation defaultTransactionIsolation_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation DefaultTransactionIsolation {
      get { return defaultTransactionIsolation_; }
      set {
        defaultTransactionIsolation_ = value;
      }
    }

    /// <summary>Field number for the "statement_timeout" field.</summary>
    public const int StatementTimeoutFieldNumber = 30;
    private static readonly pb::FieldCodec<long?> _single_statementTimeout_codec = pb::FieldCodec.ForStructWrapper<long>(242);
    private long? statementTimeout_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? StatementTimeout {
      get { return statementTimeout_; }
      set {
        statementTimeout_ = value;
      }
    }


    /// <summary>Field number for the "lock_timeout" field.</summary>
    public const int LockTimeoutFieldNumber = 31;
    private static readonly pb::FieldCodec<long?> _single_lockTimeout_codec = pb::FieldCodec.ForStructWrapper<long>(250);
    private long? lockTimeout_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? LockTimeout {
      get { return lockTimeout_; }
      set {
        lockTimeout_ = value;
      }
    }


    /// <summary>Field number for the "idle_in_transaction_session_timeout" field.</summary>
    public const int IdleInTransactionSessionTimeoutFieldNumber = 32;
    private static readonly pb::FieldCodec<long?> _single_idleInTransactionSessionTimeout_codec = pb::FieldCodec.ForStructWrapper<long>(258);
    private long? idleInTransactionSessionTimeout_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? IdleInTransactionSessionTimeout {
      get { return idleInTransactionSessionTimeout_; }
      set {
        idleInTransactionSessionTimeout_ = value;
      }
    }


    /// <summary>Field number for the "bytea_output" field.</summary>
    public const int ByteaOutputFieldNumber = 33;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput byteaOutput_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput ByteaOutput {
      get { return byteaOutput_; }
      set {
        byteaOutput_ = value;
      }
    }

    /// <summary>Field number for the "xmlbinary" field.</summary>
    public const int XmlbinaryFieldNumber = 34;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary xmlbinary_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary Xmlbinary {
      get { return xmlbinary_; }
      set {
        xmlbinary_ = value;
      }
    }

    /// <summary>Field number for the "xmloption" field.</summary>
    public const int XmloptionFieldNumber = 35;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption xmloption_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption Xmloption {
      get { return xmloption_; }
      set {
        xmloption_ = value;
      }
    }

    /// <summary>Field number for the "gin_pending_list_limit" field.</summary>
    public const int GinPendingListLimitFieldNumber = 36;
    private static readonly pb::FieldCodec<long?> _single_ginPendingListLimit_codec = pb::FieldCodec.ForStructWrapper<long>(290);
    private long? ginPendingListLimit_;
    /// <summary>
    /// in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? GinPendingListLimit {
      get { return ginPendingListLimit_; }
      set {
        ginPendingListLimit_ = value;
      }
    }


    /// <summary>Field number for the "deadlock_timeout" field.</summary>
    public const int DeadlockTimeoutFieldNumber = 37;
    private static readonly pb::FieldCodec<long?> _single_deadlockTimeout_codec = pb::FieldCodec.ForStructWrapper<long>(298);
    private long? deadlockTimeout_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? DeadlockTimeout {
      get { return deadlockTimeout_; }
      set {
        deadlockTimeout_ = value;
      }
    }


    /// <summary>Field number for the "max_locks_per_transaction" field.</summary>
    public const int MaxLocksPerTransactionFieldNumber = 38;
    private static readonly pb::FieldCodec<long?> _single_maxLocksPerTransaction_codec = pb::FieldCodec.ForStructWrapper<long>(306);
    private long? maxLocksPerTransaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? MaxLocksPerTransaction {
      get { return maxLocksPerTransaction_; }
      set {
        maxLocksPerTransaction_ = value;
      }
    }


    /// <summary>Field number for the "max_pred_locks_per_transaction" field.</summary>
    public const int MaxPredLocksPerTransactionFieldNumber = 39;
    private static readonly pb::FieldCodec<long?> _single_maxPredLocksPerTransaction_codec = pb::FieldCodec.ForStructWrapper<long>(314);
    private long? maxPredLocksPerTransaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? MaxPredLocksPerTransaction {
      get { return maxPredLocksPerTransaction_; }
      set {
        maxPredLocksPerTransaction_ = value;
      }
    }


    /// <summary>Field number for the "array_nulls" field.</summary>
    public const int ArrayNullsFieldNumber = 40;
    private static readonly pb::FieldCodec<bool?> _single_arrayNulls_codec = pb::FieldCodec.ForStructWrapper<bool>(322);
    private bool? arrayNulls_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? ArrayNulls {
      get { return arrayNulls_; }
      set {
        arrayNulls_ = value;
      }
    }


    /// <summary>Field number for the "backslash_quote" field.</summary>
    public const int BackslashQuoteFieldNumber = 41;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote backslashQuote_ = global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote.Unspecified;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote BackslashQuote {
      get { return backslashQuote_; }
      set {
        backslashQuote_ = value;
      }
    }

    /// <summary>Field number for the "default_with_oids" field.</summary>
    public const int DefaultWithOidsFieldNumber = 42;
    private static readonly pb::FieldCodec<bool?> _single_defaultWithOids_codec = pb::FieldCodec.ForStructWrapper<bool>(338);
    private bool? defaultWithOids_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? DefaultWithOids {
      get { return defaultWithOids_; }
      set {
        defaultWithOids_ = value;
      }
    }


    /// <summary>Field number for the "escape_string_warning" field.</summary>
    public const int EscapeStringWarningFieldNumber = 43;
    private static readonly pb::FieldCodec<bool?> _single_escapeStringWarning_codec = pb::FieldCodec.ForStructWrapper<bool>(346);
    private bool? escapeStringWarning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? EscapeStringWarning {
      get { return escapeStringWarning_; }
      set {
        escapeStringWarning_ = value;
      }
    }


    /// <summary>Field number for the "lo_compat_privileges" field.</summary>
    public const int LoCompatPrivilegesFieldNumber = 44;
    private static readonly pb::FieldCodec<bool?> _single_loCompatPrivileges_codec = pb::FieldCodec.ForStructWrapper<bool>(354);
    private bool? loCompatPrivileges_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? LoCompatPrivileges {
      get { return loCompatPrivileges_; }
      set {
        loCompatPrivileges_ = value;
      }
    }


    /// <summary>Field number for the "operator_precedence_warning" field.</summary>
    public const int OperatorPrecedenceWarningFieldNumber = 45;
    private static readonly pb::FieldCodec<bool?> _single_operatorPrecedenceWarning_codec = pb::FieldCodec.ForStructWrapper<bool>(362);
    private bool? operatorPrecedenceWarning_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? OperatorPrecedenceWarning {
      get { return operatorPrecedenceWarning_; }
      set {
        operatorPrecedenceWarning_ = value;
      }
    }


    /// <summary>Field number for the "quote_all_identifiers" field.</summary>
    public const int QuoteAllIdentifiersFieldNumber = 46;
    private static readonly pb::FieldCodec<bool?> _single_quoteAllIdentifiers_codec = pb::FieldCodec.ForStructWrapper<bool>(370);
    private bool? quoteAllIdentifiers_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? QuoteAllIdentifiers {
      get { return quoteAllIdentifiers_; }
      set {
        quoteAllIdentifiers_ = value;
      }
    }


    /// <summary>Field number for the "standard_conforming_strings" field.</summary>
    public const int StandardConformingStringsFieldNumber = 47;
    private static readonly pb::FieldCodec<bool?> _single_standardConformingStrings_codec = pb::FieldCodec.ForStructWrapper<bool>(378);
    private bool? standardConformingStrings_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? StandardConformingStrings {
      get { return standardConformingStrings_; }
      set {
        standardConformingStrings_ = value;
      }
    }


    /// <summary>Field number for the "synchronize_seqscans" field.</summary>
    public const int SynchronizeSeqscansFieldNumber = 48;
    private static readonly pb::FieldCodec<bool?> _single_synchronizeSeqscans_codec = pb::FieldCodec.ForStructWrapper<bool>(386);
    private bool? synchronizeSeqscans_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? SynchronizeSeqscans {
      get { return synchronizeSeqscans_; }
      set {
        synchronizeSeqscans_ = value;
      }
    }


    /// <summary>Field number for the "transform_null_equals" field.</summary>
    public const int TransformNullEqualsFieldNumber = 49;
    private static readonly pb::FieldCodec<bool?> _single_transformNullEquals_codec = pb::FieldCodec.ForStructWrapper<bool>(394);
    private bool? transformNullEquals_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? TransformNullEquals {
      get { return transformNullEquals_; }
      set {
        transformNullEquals_ = value;
      }
    }


    /// <summary>Field number for the "exit_on_error" field.</summary>
    public const int ExitOnErrorFieldNumber = 50;
    private static readonly pb::FieldCodec<bool?> _single_exitOnError_codec = pb::FieldCodec.ForStructWrapper<bool>(402);
    private bool? exitOnError_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? ExitOnError {
      get { return exitOnError_; }
      set {
        exitOnError_ = value;
      }
    }


    /// <summary>Field number for the "seq_page_cost" field.</summary>
    public const int SeqPageCostFieldNumber = 51;
    private static readonly pb::FieldCodec<double?> _single_seqPageCost_codec = pb::FieldCodec.ForStructWrapper<double>(410);
    private double? seqPageCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? SeqPageCost {
      get { return seqPageCost_; }
      set {
        seqPageCost_ = value;
      }
    }


    /// <summary>Field number for the "random_page_cost" field.</summary>
    public const int RandomPageCostFieldNumber = 52;
    private static readonly pb::FieldCodec<double?> _single_randomPageCost_codec = pb::FieldCodec.ForStructWrapper<double>(418);
    private double? randomPageCost_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double? RandomPageCost {
      get { return randomPageCost_; }
      set {
        randomPageCost_ = value;
      }
    }


    /// <summary>Field number for the "sql_inheritance" field.</summary>
    public const int SqlInheritanceFieldNumber = 53;
    private static readonly pb::FieldCodec<bool?> _single_sqlInheritance_codec = pb::FieldCodec.ForStructWrapper<bool>(426);
    private bool? sqlInheritance_;
    /// <summary>
    /// This option has been removed in PostgreSQL 10.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? SqlInheritance {
      get { return sqlInheritance_; }
      set {
        sqlInheritance_ = value;
      }
    }


    /// <summary>Field number for the "effective_io_concurrency" field.</summary>
    public const int EffectiveIoConcurrencyFieldNumber = 54;
    private static readonly pb::FieldCodec<long?> _single_effectiveIoConcurrency_codec = pb::FieldCodec.ForStructWrapper<long>(434);
    private long? effectiveIoConcurrency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? EffectiveIoConcurrency {
      get { return effectiveIoConcurrency_; }
      set {
        effectiveIoConcurrency_ = value;
      }
    }


    /// <summary>Field number for the "effective_cache_size" field.</summary>
    public const int EffectiveCacheSizeFieldNumber = 55;
    private static readonly pb::FieldCodec<long?> _single_effectiveCacheSize_codec = pb::FieldCodec.ForStructWrapper<long>(442);
    private long? effectiveCacheSize_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? EffectiveCacheSize {
      get { return effectiveCacheSize_; }
      set {
        effectiveCacheSize_ = value;
      }
    }


    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PostgresqlHostConfig9_6);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PostgresqlHostConfig9_6 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RecoveryMinApplyDelay != other.RecoveryMinApplyDelay) return false;
      if (SharedBuffers != other.SharedBuffers) return false;
      if (TempBuffers != other.TempBuffers) return false;
      if (WorkMem != other.WorkMem) return false;
      if (ReplacementSortTuples != other.ReplacementSortTuples) return false;
      if (TempFileLimit != other.TempFileLimit) return false;
      if (BackendFlushAfter != other.BackendFlushAfter) return false;
      if (OldSnapshotThreshold != other.OldSnapshotThreshold) return false;
      if (MaxStandbyStreamingDelay != other.MaxStandbyStreamingDelay) return false;
      if (ConstraintExclusion != other.ConstraintExclusion) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(CursorTupleFraction, other.CursorTupleFraction)) return false;
      if (FromCollapseLimit != other.FromCollapseLimit) return false;
      if (JoinCollapseLimit != other.JoinCollapseLimit) return false;
      if (ForceParallelMode != other.ForceParallelMode) return false;
      if (ClientMinMessages != other.ClientMinMessages) return false;
      if (LogMinMessages != other.LogMinMessages) return false;
      if (LogMinErrorStatement != other.LogMinErrorStatement) return false;
      if (LogMinDurationStatement != other.LogMinDurationStatement) return false;
      if (LogCheckpoints != other.LogCheckpoints) return false;
      if (LogConnections != other.LogConnections) return false;
      if (LogDisconnections != other.LogDisconnections) return false;
      if (LogDuration != other.LogDuration) return false;
      if (LogErrorVerbosity != other.LogErrorVerbosity) return false;
      if (LogLockWaits != other.LogLockWaits) return false;
      if (LogStatement != other.LogStatement) return false;
      if (LogTempFiles != other.LogTempFiles) return false;
      if (SearchPath != other.SearchPath) return false;
      if (RowSecurity != other.RowSecurity) return false;
      if (DefaultTransactionIsolation != other.DefaultTransactionIsolation) return false;
      if (StatementTimeout != other.StatementTimeout) return false;
      if (LockTimeout != other.LockTimeout) return false;
      if (IdleInTransactionSessionTimeout != other.IdleInTransactionSessionTimeout) return false;
      if (ByteaOutput != other.ByteaOutput) return false;
      if (Xmlbinary != other.Xmlbinary) return false;
      if (Xmloption != other.Xmloption) return false;
      if (GinPendingListLimit != other.GinPendingListLimit) return false;
      if (DeadlockTimeout != other.DeadlockTimeout) return false;
      if (MaxLocksPerTransaction != other.MaxLocksPerTransaction) return false;
      if (MaxPredLocksPerTransaction != other.MaxPredLocksPerTransaction) return false;
      if (ArrayNulls != other.ArrayNulls) return false;
      if (BackslashQuote != other.BackslashQuote) return false;
      if (DefaultWithOids != other.DefaultWithOids) return false;
      if (EscapeStringWarning != other.EscapeStringWarning) return false;
      if (LoCompatPrivileges != other.LoCompatPrivileges) return false;
      if (OperatorPrecedenceWarning != other.OperatorPrecedenceWarning) return false;
      if (QuoteAllIdentifiers != other.QuoteAllIdentifiers) return false;
      if (StandardConformingStrings != other.StandardConformingStrings) return false;
      if (SynchronizeSeqscans != other.SynchronizeSeqscans) return false;
      if (TransformNullEquals != other.TransformNullEquals) return false;
      if (ExitOnError != other.ExitOnError) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(SeqPageCost, other.SeqPageCost)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.Equals(RandomPageCost, other.RandomPageCost)) return false;
      if (SqlInheritance != other.SqlInheritance) return false;
      if (EffectiveIoConcurrency != other.EffectiveIoConcurrency) return false;
      if (EffectiveCacheSize != other.EffectiveCacheSize) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (recoveryMinApplyDelay_ != null) hash ^= RecoveryMinApplyDelay.GetHashCode();
      if (sharedBuffers_ != null) hash ^= SharedBuffers.GetHashCode();
      if (tempBuffers_ != null) hash ^= TempBuffers.GetHashCode();
      if (workMem_ != null) hash ^= WorkMem.GetHashCode();
      if (replacementSortTuples_ != null) hash ^= ReplacementSortTuples.GetHashCode();
      if (tempFileLimit_ != null) hash ^= TempFileLimit.GetHashCode();
      if (backendFlushAfter_ != null) hash ^= BackendFlushAfter.GetHashCode();
      if (oldSnapshotThreshold_ != null) hash ^= OldSnapshotThreshold.GetHashCode();
      if (maxStandbyStreamingDelay_ != null) hash ^= MaxStandbyStreamingDelay.GetHashCode();
      if (ConstraintExclusion != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion.Unspecified) hash ^= ConstraintExclusion.GetHashCode();
      if (cursorTupleFraction_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(CursorTupleFraction);
      if (fromCollapseLimit_ != null) hash ^= FromCollapseLimit.GetHashCode();
      if (joinCollapseLimit_ != null) hash ^= JoinCollapseLimit.GetHashCode();
      if (ForceParallelMode != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode.Unspecified) hash ^= ForceParallelMode.GetHashCode();
      if (ClientMinMessages != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) hash ^= ClientMinMessages.GetHashCode();
      if (LogMinMessages != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) hash ^= LogMinMessages.GetHashCode();
      if (LogMinErrorStatement != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) hash ^= LogMinErrorStatement.GetHashCode();
      if (logMinDurationStatement_ != null) hash ^= LogMinDurationStatement.GetHashCode();
      if (logCheckpoints_ != null) hash ^= LogCheckpoints.GetHashCode();
      if (logConnections_ != null) hash ^= LogConnections.GetHashCode();
      if (logDisconnections_ != null) hash ^= LogDisconnections.GetHashCode();
      if (logDuration_ != null) hash ^= LogDuration.GetHashCode();
      if (LogErrorVerbosity != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity.Unspecified) hash ^= LogErrorVerbosity.GetHashCode();
      if (logLockWaits_ != null) hash ^= LogLockWaits.GetHashCode();
      if (LogStatement != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement.Unspecified) hash ^= LogStatement.GetHashCode();
      if (logTempFiles_ != null) hash ^= LogTempFiles.GetHashCode();
      if (SearchPath.Length != 0) hash ^= SearchPath.GetHashCode();
      if (rowSecurity_ != null) hash ^= RowSecurity.GetHashCode();
      if (DefaultTransactionIsolation != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation.Unspecified) hash ^= DefaultTransactionIsolation.GetHashCode();
      if (statementTimeout_ != null) hash ^= StatementTimeout.GetHashCode();
      if (lockTimeout_ != null) hash ^= LockTimeout.GetHashCode();
      if (idleInTransactionSessionTimeout_ != null) hash ^= IdleInTransactionSessionTimeout.GetHashCode();
      if (ByteaOutput != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput.Unspecified) hash ^= ByteaOutput.GetHashCode();
      if (Xmlbinary != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary.Unspecified) hash ^= Xmlbinary.GetHashCode();
      if (Xmloption != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption.Unspecified) hash ^= Xmloption.GetHashCode();
      if (ginPendingListLimit_ != null) hash ^= GinPendingListLimit.GetHashCode();
      if (deadlockTimeout_ != null) hash ^= DeadlockTimeout.GetHashCode();
      if (maxLocksPerTransaction_ != null) hash ^= MaxLocksPerTransaction.GetHashCode();
      if (maxPredLocksPerTransaction_ != null) hash ^= MaxPredLocksPerTransaction.GetHashCode();
      if (arrayNulls_ != null) hash ^= ArrayNulls.GetHashCode();
      if (BackslashQuote != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote.Unspecified) hash ^= BackslashQuote.GetHashCode();
      if (defaultWithOids_ != null) hash ^= DefaultWithOids.GetHashCode();
      if (escapeStringWarning_ != null) hash ^= EscapeStringWarning.GetHashCode();
      if (loCompatPrivileges_ != null) hash ^= LoCompatPrivileges.GetHashCode();
      if (operatorPrecedenceWarning_ != null) hash ^= OperatorPrecedenceWarning.GetHashCode();
      if (quoteAllIdentifiers_ != null) hash ^= QuoteAllIdentifiers.GetHashCode();
      if (standardConformingStrings_ != null) hash ^= StandardConformingStrings.GetHashCode();
      if (synchronizeSeqscans_ != null) hash ^= SynchronizeSeqscans.GetHashCode();
      if (transformNullEquals_ != null) hash ^= TransformNullEquals.GetHashCode();
      if (exitOnError_ != null) hash ^= ExitOnError.GetHashCode();
      if (seqPageCost_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(SeqPageCost);
      if (randomPageCost_ != null) hash ^= pbc::ProtobufEqualityComparers.BitwiseNullableDoubleEqualityComparer.GetHashCode(RandomPageCost);
      if (sqlInheritance_ != null) hash ^= SqlInheritance.GetHashCode();
      if (effectiveIoConcurrency_ != null) hash ^= EffectiveIoConcurrency.GetHashCode();
      if (effectiveCacheSize_ != null) hash ^= EffectiveCacheSize.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (recoveryMinApplyDelay_ != null) {
        _single_recoveryMinApplyDelay_codec.WriteTagAndValue(output, RecoveryMinApplyDelay);
      }
      if (sharedBuffers_ != null) {
        _single_sharedBuffers_codec.WriteTagAndValue(output, SharedBuffers);
      }
      if (tempBuffers_ != null) {
        _single_tempBuffers_codec.WriteTagAndValue(output, TempBuffers);
      }
      if (workMem_ != null) {
        _single_workMem_codec.WriteTagAndValue(output, WorkMem);
      }
      if (replacementSortTuples_ != null) {
        _single_replacementSortTuples_codec.WriteTagAndValue(output, ReplacementSortTuples);
      }
      if (tempFileLimit_ != null) {
        _single_tempFileLimit_codec.WriteTagAndValue(output, TempFileLimit);
      }
      if (backendFlushAfter_ != null) {
        _single_backendFlushAfter_codec.WriteTagAndValue(output, BackendFlushAfter);
      }
      if (oldSnapshotThreshold_ != null) {
        _single_oldSnapshotThreshold_codec.WriteTagAndValue(output, OldSnapshotThreshold);
      }
      if (maxStandbyStreamingDelay_ != null) {
        _single_maxStandbyStreamingDelay_codec.WriteTagAndValue(output, MaxStandbyStreamingDelay);
      }
      if (ConstraintExclusion != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion.Unspecified) {
        output.WriteRawTag(80);
        output.WriteEnum((int) ConstraintExclusion);
      }
      if (cursorTupleFraction_ != null) {
        _single_cursorTupleFraction_codec.WriteTagAndValue(output, CursorTupleFraction);
      }
      if (fromCollapseLimit_ != null) {
        _single_fromCollapseLimit_codec.WriteTagAndValue(output, FromCollapseLimit);
      }
      if (joinCollapseLimit_ != null) {
        _single_joinCollapseLimit_codec.WriteTagAndValue(output, JoinCollapseLimit);
      }
      if (ForceParallelMode != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode.Unspecified) {
        output.WriteRawTag(112);
        output.WriteEnum((int) ForceParallelMode);
      }
      if (ClientMinMessages != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        output.WriteRawTag(120);
        output.WriteEnum((int) ClientMinMessages);
      }
      if (LogMinMessages != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        output.WriteRawTag(128, 1);
        output.WriteEnum((int) LogMinMessages);
      }
      if (LogMinErrorStatement != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        output.WriteRawTag(136, 1);
        output.WriteEnum((int) LogMinErrorStatement);
      }
      if (logMinDurationStatement_ != null) {
        _single_logMinDurationStatement_codec.WriteTagAndValue(output, LogMinDurationStatement);
      }
      if (logCheckpoints_ != null) {
        _single_logCheckpoints_codec.WriteTagAndValue(output, LogCheckpoints);
      }
      if (logConnections_ != null) {
        _single_logConnections_codec.WriteTagAndValue(output, LogConnections);
      }
      if (logDisconnections_ != null) {
        _single_logDisconnections_codec.WriteTagAndValue(output, LogDisconnections);
      }
      if (logDuration_ != null) {
        _single_logDuration_codec.WriteTagAndValue(output, LogDuration);
      }
      if (LogErrorVerbosity != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity.Unspecified) {
        output.WriteRawTag(184, 1);
        output.WriteEnum((int) LogErrorVerbosity);
      }
      if (logLockWaits_ != null) {
        _single_logLockWaits_codec.WriteTagAndValue(output, LogLockWaits);
      }
      if (LogStatement != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement.Unspecified) {
        output.WriteRawTag(200, 1);
        output.WriteEnum((int) LogStatement);
      }
      if (logTempFiles_ != null) {
        _single_logTempFiles_codec.WriteTagAndValue(output, LogTempFiles);
      }
      if (SearchPath.Length != 0) {
        output.WriteRawTag(218, 1);
        output.WriteString(SearchPath);
      }
      if (rowSecurity_ != null) {
        _single_rowSecurity_codec.WriteTagAndValue(output, RowSecurity);
      }
      if (DefaultTransactionIsolation != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation.Unspecified) {
        output.WriteRawTag(232, 1);
        output.WriteEnum((int) DefaultTransactionIsolation);
      }
      if (statementTimeout_ != null) {
        _single_statementTimeout_codec.WriteTagAndValue(output, StatementTimeout);
      }
      if (lockTimeout_ != null) {
        _single_lockTimeout_codec.WriteTagAndValue(output, LockTimeout);
      }
      if (idleInTransactionSessionTimeout_ != null) {
        _single_idleInTransactionSessionTimeout_codec.WriteTagAndValue(output, IdleInTransactionSessionTimeout);
      }
      if (ByteaOutput != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput.Unspecified) {
        output.WriteRawTag(136, 2);
        output.WriteEnum((int) ByteaOutput);
      }
      if (Xmlbinary != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary.Unspecified) {
        output.WriteRawTag(144, 2);
        output.WriteEnum((int) Xmlbinary);
      }
      if (Xmloption != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption.Unspecified) {
        output.WriteRawTag(152, 2);
        output.WriteEnum((int) Xmloption);
      }
      if (ginPendingListLimit_ != null) {
        _single_ginPendingListLimit_codec.WriteTagAndValue(output, GinPendingListLimit);
      }
      if (deadlockTimeout_ != null) {
        _single_deadlockTimeout_codec.WriteTagAndValue(output, DeadlockTimeout);
      }
      if (maxLocksPerTransaction_ != null) {
        _single_maxLocksPerTransaction_codec.WriteTagAndValue(output, MaxLocksPerTransaction);
      }
      if (maxPredLocksPerTransaction_ != null) {
        _single_maxPredLocksPerTransaction_codec.WriteTagAndValue(output, MaxPredLocksPerTransaction);
      }
      if (arrayNulls_ != null) {
        _single_arrayNulls_codec.WriteTagAndValue(output, ArrayNulls);
      }
      if (BackslashQuote != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote.Unspecified) {
        output.WriteRawTag(200, 2);
        output.WriteEnum((int) BackslashQuote);
      }
      if (defaultWithOids_ != null) {
        _single_defaultWithOids_codec.WriteTagAndValue(output, DefaultWithOids);
      }
      if (escapeStringWarning_ != null) {
        _single_escapeStringWarning_codec.WriteTagAndValue(output, EscapeStringWarning);
      }
      if (loCompatPrivileges_ != null) {
        _single_loCompatPrivileges_codec.WriteTagAndValue(output, LoCompatPrivileges);
      }
      if (operatorPrecedenceWarning_ != null) {
        _single_operatorPrecedenceWarning_codec.WriteTagAndValue(output, OperatorPrecedenceWarning);
      }
      if (quoteAllIdentifiers_ != null) {
        _single_quoteAllIdentifiers_codec.WriteTagAndValue(output, QuoteAllIdentifiers);
      }
      if (standardConformingStrings_ != null) {
        _single_standardConformingStrings_codec.WriteTagAndValue(output, StandardConformingStrings);
      }
      if (synchronizeSeqscans_ != null) {
        _single_synchronizeSeqscans_codec.WriteTagAndValue(output, SynchronizeSeqscans);
      }
      if (transformNullEquals_ != null) {
        _single_transformNullEquals_codec.WriteTagAndValue(output, TransformNullEquals);
      }
      if (exitOnError_ != null) {
        _single_exitOnError_codec.WriteTagAndValue(output, ExitOnError);
      }
      if (seqPageCost_ != null) {
        _single_seqPageCost_codec.WriteTagAndValue(output, SeqPageCost);
      }
      if (randomPageCost_ != null) {
        _single_randomPageCost_codec.WriteTagAndValue(output, RandomPageCost);
      }
      if (sqlInheritance_ != null) {
        _single_sqlInheritance_codec.WriteTagAndValue(output, SqlInheritance);
      }
      if (effectiveIoConcurrency_ != null) {
        _single_effectiveIoConcurrency_codec.WriteTagAndValue(output, EffectiveIoConcurrency);
      }
      if (effectiveCacheSize_ != null) {
        _single_effectiveCacheSize_codec.WriteTagAndValue(output, EffectiveCacheSize);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (recoveryMinApplyDelay_ != null) {
        size += _single_recoveryMinApplyDelay_codec.CalculateSizeWithTag(RecoveryMinApplyDelay);
      }
      if (sharedBuffers_ != null) {
        size += _single_sharedBuffers_codec.CalculateSizeWithTag(SharedBuffers);
      }
      if (tempBuffers_ != null) {
        size += _single_tempBuffers_codec.CalculateSizeWithTag(TempBuffers);
      }
      if (workMem_ != null) {
        size += _single_workMem_codec.CalculateSizeWithTag(WorkMem);
      }
      if (replacementSortTuples_ != null) {
        size += _single_replacementSortTuples_codec.CalculateSizeWithTag(ReplacementSortTuples);
      }
      if (tempFileLimit_ != null) {
        size += _single_tempFileLimit_codec.CalculateSizeWithTag(TempFileLimit);
      }
      if (backendFlushAfter_ != null) {
        size += _single_backendFlushAfter_codec.CalculateSizeWithTag(BackendFlushAfter);
      }
      if (oldSnapshotThreshold_ != null) {
        size += _single_oldSnapshotThreshold_codec.CalculateSizeWithTag(OldSnapshotThreshold);
      }
      if (maxStandbyStreamingDelay_ != null) {
        size += _single_maxStandbyStreamingDelay_codec.CalculateSizeWithTag(MaxStandbyStreamingDelay);
      }
      if (ConstraintExclusion != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ConstraintExclusion);
      }
      if (cursorTupleFraction_ != null) {
        size += _single_cursorTupleFraction_codec.CalculateSizeWithTag(CursorTupleFraction);
      }
      if (fromCollapseLimit_ != null) {
        size += _single_fromCollapseLimit_codec.CalculateSizeWithTag(FromCollapseLimit);
      }
      if (joinCollapseLimit_ != null) {
        size += _single_joinCollapseLimit_codec.CalculateSizeWithTag(JoinCollapseLimit);
      }
      if (ForceParallelMode != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ForceParallelMode);
      }
      if (ClientMinMessages != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) ClientMinMessages);
      }
      if (LogMinMessages != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LogMinMessages);
      }
      if (LogMinErrorStatement != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LogMinErrorStatement);
      }
      if (logMinDurationStatement_ != null) {
        size += _single_logMinDurationStatement_codec.CalculateSizeWithTag(LogMinDurationStatement);
      }
      if (logCheckpoints_ != null) {
        size += _single_logCheckpoints_codec.CalculateSizeWithTag(LogCheckpoints);
      }
      if (logConnections_ != null) {
        size += _single_logConnections_codec.CalculateSizeWithTag(LogConnections);
      }
      if (logDisconnections_ != null) {
        size += _single_logDisconnections_codec.CalculateSizeWithTag(LogDisconnections);
      }
      if (logDuration_ != null) {
        size += _single_logDuration_codec.CalculateSizeWithTag(LogDuration);
      }
      if (LogErrorVerbosity != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LogErrorVerbosity);
      }
      if (logLockWaits_ != null) {
        size += _single_logLockWaits_codec.CalculateSizeWithTag(LogLockWaits);
      }
      if (LogStatement != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) LogStatement);
      }
      if (logTempFiles_ != null) {
        size += _single_logTempFiles_codec.CalculateSizeWithTag(LogTempFiles);
      }
      if (SearchPath.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(SearchPath);
      }
      if (rowSecurity_ != null) {
        size += _single_rowSecurity_codec.CalculateSizeWithTag(RowSecurity);
      }
      if (DefaultTransactionIsolation != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultTransactionIsolation);
      }
      if (statementTimeout_ != null) {
        size += _single_statementTimeout_codec.CalculateSizeWithTag(StatementTimeout);
      }
      if (lockTimeout_ != null) {
        size += _single_lockTimeout_codec.CalculateSizeWithTag(LockTimeout);
      }
      if (idleInTransactionSessionTimeout_ != null) {
        size += _single_idleInTransactionSessionTimeout_codec.CalculateSizeWithTag(IdleInTransactionSessionTimeout);
      }
      if (ByteaOutput != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) ByteaOutput);
      }
      if (Xmlbinary != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Xmlbinary);
      }
      if (Xmloption != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) Xmloption);
      }
      if (ginPendingListLimit_ != null) {
        size += _single_ginPendingListLimit_codec.CalculateSizeWithTag(GinPendingListLimit);
      }
      if (deadlockTimeout_ != null) {
        size += _single_deadlockTimeout_codec.CalculateSizeWithTag(DeadlockTimeout);
      }
      if (maxLocksPerTransaction_ != null) {
        size += _single_maxLocksPerTransaction_codec.CalculateSizeWithTag(MaxLocksPerTransaction);
      }
      if (maxPredLocksPerTransaction_ != null) {
        size += _single_maxPredLocksPerTransaction_codec.CalculateSizeWithTag(MaxPredLocksPerTransaction);
      }
      if (arrayNulls_ != null) {
        size += _single_arrayNulls_codec.CalculateSizeWithTag(ArrayNulls);
      }
      if (BackslashQuote != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote.Unspecified) {
        size += 2 + pb::CodedOutputStream.ComputeEnumSize((int) BackslashQuote);
      }
      if (defaultWithOids_ != null) {
        size += _single_defaultWithOids_codec.CalculateSizeWithTag(DefaultWithOids);
      }
      if (escapeStringWarning_ != null) {
        size += _single_escapeStringWarning_codec.CalculateSizeWithTag(EscapeStringWarning);
      }
      if (loCompatPrivileges_ != null) {
        size += _single_loCompatPrivileges_codec.CalculateSizeWithTag(LoCompatPrivileges);
      }
      if (operatorPrecedenceWarning_ != null) {
        size += _single_operatorPrecedenceWarning_codec.CalculateSizeWithTag(OperatorPrecedenceWarning);
      }
      if (quoteAllIdentifiers_ != null) {
        size += _single_quoteAllIdentifiers_codec.CalculateSizeWithTag(QuoteAllIdentifiers);
      }
      if (standardConformingStrings_ != null) {
        size += _single_standardConformingStrings_codec.CalculateSizeWithTag(StandardConformingStrings);
      }
      if (synchronizeSeqscans_ != null) {
        size += _single_synchronizeSeqscans_codec.CalculateSizeWithTag(SynchronizeSeqscans);
      }
      if (transformNullEquals_ != null) {
        size += _single_transformNullEquals_codec.CalculateSizeWithTag(TransformNullEquals);
      }
      if (exitOnError_ != null) {
        size += _single_exitOnError_codec.CalculateSizeWithTag(ExitOnError);
      }
      if (seqPageCost_ != null) {
        size += _single_seqPageCost_codec.CalculateSizeWithTag(SeqPageCost);
      }
      if (randomPageCost_ != null) {
        size += _single_randomPageCost_codec.CalculateSizeWithTag(RandomPageCost);
      }
      if (sqlInheritance_ != null) {
        size += _single_sqlInheritance_codec.CalculateSizeWithTag(SqlInheritance);
      }
      if (effectiveIoConcurrency_ != null) {
        size += _single_effectiveIoConcurrency_codec.CalculateSizeWithTag(EffectiveIoConcurrency);
      }
      if (effectiveCacheSize_ != null) {
        size += _single_effectiveCacheSize_codec.CalculateSizeWithTag(EffectiveCacheSize);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PostgresqlHostConfig9_6 other) {
      if (other == null) {
        return;
      }
      if (other.recoveryMinApplyDelay_ != null) {
        if (recoveryMinApplyDelay_ == null || other.RecoveryMinApplyDelay != 0L) {
          RecoveryMinApplyDelay = other.RecoveryMinApplyDelay;
        }
      }
      if (other.sharedBuffers_ != null) {
        if (sharedBuffers_ == null || other.SharedBuffers != 0L) {
          SharedBuffers = other.SharedBuffers;
        }
      }
      if (other.tempBuffers_ != null) {
        if (tempBuffers_ == null || other.TempBuffers != 0L) {
          TempBuffers = other.TempBuffers;
        }
      }
      if (other.workMem_ != null) {
        if (workMem_ == null || other.WorkMem != 0L) {
          WorkMem = other.WorkMem;
        }
      }
      if (other.replacementSortTuples_ != null) {
        if (replacementSortTuples_ == null || other.ReplacementSortTuples != 0L) {
          ReplacementSortTuples = other.ReplacementSortTuples;
        }
      }
      if (other.tempFileLimit_ != null) {
        if (tempFileLimit_ == null || other.TempFileLimit != 0L) {
          TempFileLimit = other.TempFileLimit;
        }
      }
      if (other.backendFlushAfter_ != null) {
        if (backendFlushAfter_ == null || other.BackendFlushAfter != 0L) {
          BackendFlushAfter = other.BackendFlushAfter;
        }
      }
      if (other.oldSnapshotThreshold_ != null) {
        if (oldSnapshotThreshold_ == null || other.OldSnapshotThreshold != 0L) {
          OldSnapshotThreshold = other.OldSnapshotThreshold;
        }
      }
      if (other.maxStandbyStreamingDelay_ != null) {
        if (maxStandbyStreamingDelay_ == null || other.MaxStandbyStreamingDelay != 0L) {
          MaxStandbyStreamingDelay = other.MaxStandbyStreamingDelay;
        }
      }
      if (other.ConstraintExclusion != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion.Unspecified) {
        ConstraintExclusion = other.ConstraintExclusion;
      }
      if (other.cursorTupleFraction_ != null) {
        if (cursorTupleFraction_ == null || other.CursorTupleFraction != 0D) {
          CursorTupleFraction = other.CursorTupleFraction;
        }
      }
      if (other.fromCollapseLimit_ != null) {
        if (fromCollapseLimit_ == null || other.FromCollapseLimit != 0L) {
          FromCollapseLimit = other.FromCollapseLimit;
        }
      }
      if (other.joinCollapseLimit_ != null) {
        if (joinCollapseLimit_ == null || other.JoinCollapseLimit != 0L) {
          JoinCollapseLimit = other.JoinCollapseLimit;
        }
      }
      if (other.ForceParallelMode != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode.Unspecified) {
        ForceParallelMode = other.ForceParallelMode;
      }
      if (other.ClientMinMessages != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        ClientMinMessages = other.ClientMinMessages;
      }
      if (other.LogMinMessages != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        LogMinMessages = other.LogMinMessages;
      }
      if (other.LogMinErrorStatement != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel.Unspecified) {
        LogMinErrorStatement = other.LogMinErrorStatement;
      }
      if (other.logMinDurationStatement_ != null) {
        if (logMinDurationStatement_ == null || other.LogMinDurationStatement != 0L) {
          LogMinDurationStatement = other.LogMinDurationStatement;
        }
      }
      if (other.logCheckpoints_ != null) {
        if (logCheckpoints_ == null || other.LogCheckpoints != false) {
          LogCheckpoints = other.LogCheckpoints;
        }
      }
      if (other.logConnections_ != null) {
        if (logConnections_ == null || other.LogConnections != false) {
          LogConnections = other.LogConnections;
        }
      }
      if (other.logDisconnections_ != null) {
        if (logDisconnections_ == null || other.LogDisconnections != false) {
          LogDisconnections = other.LogDisconnections;
        }
      }
      if (other.logDuration_ != null) {
        if (logDuration_ == null || other.LogDuration != false) {
          LogDuration = other.LogDuration;
        }
      }
      if (other.LogErrorVerbosity != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity.Unspecified) {
        LogErrorVerbosity = other.LogErrorVerbosity;
      }
      if (other.logLockWaits_ != null) {
        if (logLockWaits_ == null || other.LogLockWaits != false) {
          LogLockWaits = other.LogLockWaits;
        }
      }
      if (other.LogStatement != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement.Unspecified) {
        LogStatement = other.LogStatement;
      }
      if (other.logTempFiles_ != null) {
        if (logTempFiles_ == null || other.LogTempFiles != 0L) {
          LogTempFiles = other.LogTempFiles;
        }
      }
      if (other.SearchPath.Length != 0) {
        SearchPath = other.SearchPath;
      }
      if (other.rowSecurity_ != null) {
        if (rowSecurity_ == null || other.RowSecurity != false) {
          RowSecurity = other.RowSecurity;
        }
      }
      if (other.DefaultTransactionIsolation != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation.Unspecified) {
        DefaultTransactionIsolation = other.DefaultTransactionIsolation;
      }
      if (other.statementTimeout_ != null) {
        if (statementTimeout_ == null || other.StatementTimeout != 0L) {
          StatementTimeout = other.StatementTimeout;
        }
      }
      if (other.lockTimeout_ != null) {
        if (lockTimeout_ == null || other.LockTimeout != 0L) {
          LockTimeout = other.LockTimeout;
        }
      }
      if (other.idleInTransactionSessionTimeout_ != null) {
        if (idleInTransactionSessionTimeout_ == null || other.IdleInTransactionSessionTimeout != 0L) {
          IdleInTransactionSessionTimeout = other.IdleInTransactionSessionTimeout;
        }
      }
      if (other.ByteaOutput != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput.Unspecified) {
        ByteaOutput = other.ByteaOutput;
      }
      if (other.Xmlbinary != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary.Unspecified) {
        Xmlbinary = other.Xmlbinary;
      }
      if (other.Xmloption != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption.Unspecified) {
        Xmloption = other.Xmloption;
      }
      if (other.ginPendingListLimit_ != null) {
        if (ginPendingListLimit_ == null || other.GinPendingListLimit != 0L) {
          GinPendingListLimit = other.GinPendingListLimit;
        }
      }
      if (other.deadlockTimeout_ != null) {
        if (deadlockTimeout_ == null || other.DeadlockTimeout != 0L) {
          DeadlockTimeout = other.DeadlockTimeout;
        }
      }
      if (other.maxLocksPerTransaction_ != null) {
        if (maxLocksPerTransaction_ == null || other.MaxLocksPerTransaction != 0L) {
          MaxLocksPerTransaction = other.MaxLocksPerTransaction;
        }
      }
      if (other.maxPredLocksPerTransaction_ != null) {
        if (maxPredLocksPerTransaction_ == null || other.MaxPredLocksPerTransaction != 0L) {
          MaxPredLocksPerTransaction = other.MaxPredLocksPerTransaction;
        }
      }
      if (other.arrayNulls_ != null) {
        if (arrayNulls_ == null || other.ArrayNulls != false) {
          ArrayNulls = other.ArrayNulls;
        }
      }
      if (other.BackslashQuote != global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote.Unspecified) {
        BackslashQuote = other.BackslashQuote;
      }
      if (other.defaultWithOids_ != null) {
        if (defaultWithOids_ == null || other.DefaultWithOids != false) {
          DefaultWithOids = other.DefaultWithOids;
        }
      }
      if (other.escapeStringWarning_ != null) {
        if (escapeStringWarning_ == null || other.EscapeStringWarning != false) {
          EscapeStringWarning = other.EscapeStringWarning;
        }
      }
      if (other.loCompatPrivileges_ != null) {
        if (loCompatPrivileges_ == null || other.LoCompatPrivileges != false) {
          LoCompatPrivileges = other.LoCompatPrivileges;
        }
      }
      if (other.operatorPrecedenceWarning_ != null) {
        if (operatorPrecedenceWarning_ == null || other.OperatorPrecedenceWarning != false) {
          OperatorPrecedenceWarning = other.OperatorPrecedenceWarning;
        }
      }
      if (other.quoteAllIdentifiers_ != null) {
        if (quoteAllIdentifiers_ == null || other.QuoteAllIdentifiers != false) {
          QuoteAllIdentifiers = other.QuoteAllIdentifiers;
        }
      }
      if (other.standardConformingStrings_ != null) {
        if (standardConformingStrings_ == null || other.StandardConformingStrings != false) {
          StandardConformingStrings = other.StandardConformingStrings;
        }
      }
      if (other.synchronizeSeqscans_ != null) {
        if (synchronizeSeqscans_ == null || other.SynchronizeSeqscans != false) {
          SynchronizeSeqscans = other.SynchronizeSeqscans;
        }
      }
      if (other.transformNullEquals_ != null) {
        if (transformNullEquals_ == null || other.TransformNullEquals != false) {
          TransformNullEquals = other.TransformNullEquals;
        }
      }
      if (other.exitOnError_ != null) {
        if (exitOnError_ == null || other.ExitOnError != false) {
          ExitOnError = other.ExitOnError;
        }
      }
      if (other.seqPageCost_ != null) {
        if (seqPageCost_ == null || other.SeqPageCost != 0D) {
          SeqPageCost = other.SeqPageCost;
        }
      }
      if (other.randomPageCost_ != null) {
        if (randomPageCost_ == null || other.RandomPageCost != 0D) {
          RandomPageCost = other.RandomPageCost;
        }
      }
      if (other.sqlInheritance_ != null) {
        if (sqlInheritance_ == null || other.SqlInheritance != false) {
          SqlInheritance = other.SqlInheritance;
        }
      }
      if (other.effectiveIoConcurrency_ != null) {
        if (effectiveIoConcurrency_ == null || other.EffectiveIoConcurrency != 0L) {
          EffectiveIoConcurrency = other.EffectiveIoConcurrency;
        }
      }
      if (other.effectiveCacheSize_ != null) {
        if (effectiveCacheSize_ == null || other.EffectiveCacheSize != 0L) {
          EffectiveCacheSize = other.EffectiveCacheSize;
        }
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            long? value = _single_recoveryMinApplyDelay_codec.Read(input);
            if (recoveryMinApplyDelay_ == null || value != 0L) {
              RecoveryMinApplyDelay = value;
            }
            break;
          }
          case 18: {
            long? value = _single_sharedBuffers_codec.Read(input);
            if (sharedBuffers_ == null || value != 0L) {
              SharedBuffers = value;
            }
            break;
          }
          case 26: {
            long? value = _single_tempBuffers_codec.Read(input);
            if (tempBuffers_ == null || value != 0L) {
              TempBuffers = value;
            }
            break;
          }
          case 34: {
            long? value = _single_workMem_codec.Read(input);
            if (workMem_ == null || value != 0L) {
              WorkMem = value;
            }
            break;
          }
          case 42: {
            long? value = _single_replacementSortTuples_codec.Read(input);
            if (replacementSortTuples_ == null || value != 0L) {
              ReplacementSortTuples = value;
            }
            break;
          }
          case 50: {
            long? value = _single_tempFileLimit_codec.Read(input);
            if (tempFileLimit_ == null || value != 0L) {
              TempFileLimit = value;
            }
            break;
          }
          case 58: {
            long? value = _single_backendFlushAfter_codec.Read(input);
            if (backendFlushAfter_ == null || value != 0L) {
              BackendFlushAfter = value;
            }
            break;
          }
          case 66: {
            long? value = _single_oldSnapshotThreshold_codec.Read(input);
            if (oldSnapshotThreshold_ == null || value != 0L) {
              OldSnapshotThreshold = value;
            }
            break;
          }
          case 74: {
            long? value = _single_maxStandbyStreamingDelay_codec.Read(input);
            if (maxStandbyStreamingDelay_ == null || value != 0L) {
              MaxStandbyStreamingDelay = value;
            }
            break;
          }
          case 80: {
            ConstraintExclusion = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ConstraintExclusion) input.ReadEnum();
            break;
          }
          case 90: {
            double? value = _single_cursorTupleFraction_codec.Read(input);
            if (cursorTupleFraction_ == null || value != 0D) {
              CursorTupleFraction = value;
            }
            break;
          }
          case 98: {
            long? value = _single_fromCollapseLimit_codec.Read(input);
            if (fromCollapseLimit_ == null || value != 0L) {
              FromCollapseLimit = value;
            }
            break;
          }
          case 106: {
            long? value = _single_joinCollapseLimit_codec.Read(input);
            if (joinCollapseLimit_ == null || value != 0L) {
              JoinCollapseLimit = value;
            }
            break;
          }
          case 112: {
            ForceParallelMode = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ForceParallelMode) input.ReadEnum();
            break;
          }
          case 120: {
            ClientMinMessages = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel) input.ReadEnum();
            break;
          }
          case 128: {
            LogMinMessages = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel) input.ReadEnum();
            break;
          }
          case 136: {
            LogMinErrorStatement = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogLevel) input.ReadEnum();
            break;
          }
          case 146: {
            long? value = _single_logMinDurationStatement_codec.Read(input);
            if (logMinDurationStatement_ == null || value != 0L) {
              LogMinDurationStatement = value;
            }
            break;
          }
          case 154: {
            bool? value = _single_logCheckpoints_codec.Read(input);
            if (logCheckpoints_ == null || value != false) {
              LogCheckpoints = value;
            }
            break;
          }
          case 162: {
            bool? value = _single_logConnections_codec.Read(input);
            if (logConnections_ == null || value != false) {
              LogConnections = value;
            }
            break;
          }
          case 170: {
            bool? value = _single_logDisconnections_codec.Read(input);
            if (logDisconnections_ == null || value != false) {
              LogDisconnections = value;
            }
            break;
          }
          case 178: {
            bool? value = _single_logDuration_codec.Read(input);
            if (logDuration_ == null || value != false) {
              LogDuration = value;
            }
            break;
          }
          case 184: {
            LogErrorVerbosity = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogErrorVerbosity) input.ReadEnum();
            break;
          }
          case 194: {
            bool? value = _single_logLockWaits_codec.Read(input);
            if (logLockWaits_ == null || value != false) {
              LogLockWaits = value;
            }
            break;
          }
          case 200: {
            LogStatement = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.LogStatement) input.ReadEnum();
            break;
          }
          case 210: {
            long? value = _single_logTempFiles_codec.Read(input);
            if (logTempFiles_ == null || value != 0L) {
              LogTempFiles = value;
            }
            break;
          }
          case 218: {
            SearchPath = input.ReadString();
            break;
          }
          case 226: {
            bool? value = _single_rowSecurity_codec.Read(input);
            if (rowSecurity_ == null || value != false) {
              RowSecurity = value;
            }
            break;
          }
          case 232: {
            DefaultTransactionIsolation = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.TransactionIsolation) input.ReadEnum();
            break;
          }
          case 242: {
            long? value = _single_statementTimeout_codec.Read(input);
            if (statementTimeout_ == null || value != 0L) {
              StatementTimeout = value;
            }
            break;
          }
          case 250: {
            long? value = _single_lockTimeout_codec.Read(input);
            if (lockTimeout_ == null || value != 0L) {
              LockTimeout = value;
            }
            break;
          }
          case 258: {
            long? value = _single_idleInTransactionSessionTimeout_codec.Read(input);
            if (idleInTransactionSessionTimeout_ == null || value != 0L) {
              IdleInTransactionSessionTimeout = value;
            }
            break;
          }
          case 264: {
            ByteaOutput = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.ByteaOutput) input.ReadEnum();
            break;
          }
          case 272: {
            Xmlbinary = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlBinary) input.ReadEnum();
            break;
          }
          case 280: {
            Xmloption = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.XmlOption) input.ReadEnum();
            break;
          }
          case 290: {
            long? value = _single_ginPendingListLimit_codec.Read(input);
            if (ginPendingListLimit_ == null || value != 0L) {
              GinPendingListLimit = value;
            }
            break;
          }
          case 298: {
            long? value = _single_deadlockTimeout_codec.Read(input);
            if (deadlockTimeout_ == null || value != 0L) {
              DeadlockTimeout = value;
            }
            break;
          }
          case 306: {
            long? value = _single_maxLocksPerTransaction_codec.Read(input);
            if (maxLocksPerTransaction_ == null || value != 0L) {
              MaxLocksPerTransaction = value;
            }
            break;
          }
          case 314: {
            long? value = _single_maxPredLocksPerTransaction_codec.Read(input);
            if (maxPredLocksPerTransaction_ == null || value != 0L) {
              MaxPredLocksPerTransaction = value;
            }
            break;
          }
          case 322: {
            bool? value = _single_arrayNulls_codec.Read(input);
            if (arrayNulls_ == null || value != false) {
              ArrayNulls = value;
            }
            break;
          }
          case 328: {
            BackslashQuote = (global::Yandex.Cloud.Mdb.Postgresql.V1.Config.PostgresqlHostConfig9_6.Types.BackslashQuote) input.ReadEnum();
            break;
          }
          case 338: {
            bool? value = _single_defaultWithOids_codec.Read(input);
            if (defaultWithOids_ == null || value != false) {
              DefaultWithOids = value;
            }
            break;
          }
          case 346: {
            bool? value = _single_escapeStringWarning_codec.Read(input);
            if (escapeStringWarning_ == null || value != false) {
              EscapeStringWarning = value;
            }
            break;
          }
          case 354: {
            bool? value = _single_loCompatPrivileges_codec.Read(input);
            if (loCompatPrivileges_ == null || value != false) {
              LoCompatPrivileges = value;
            }
            break;
          }
          case 362: {
            bool? value = _single_operatorPrecedenceWarning_codec.Read(input);
            if (operatorPrecedenceWarning_ == null || value != false) {
              OperatorPrecedenceWarning = value;
            }
            break;
          }
          case 370: {
            bool? value = _single_quoteAllIdentifiers_codec.Read(input);
            if (quoteAllIdentifiers_ == null || value != false) {
              QuoteAllIdentifiers = value;
            }
            break;
          }
          case 378: {
            bool? value = _single_standardConformingStrings_codec.Read(input);
            if (standardConformingStrings_ == null || value != false) {
              StandardConformingStrings = value;
            }
            break;
          }
          case 386: {
            bool? value = _single_synchronizeSeqscans_codec.Read(input);
            if (synchronizeSeqscans_ == null || value != false) {
              SynchronizeSeqscans = value;
            }
            break;
          }
          case 394: {
            bool? value = _single_transformNullEquals_codec.Read(input);
            if (transformNullEquals_ == null || value != false) {
              TransformNullEquals = value;
            }
            break;
          }
          case 402: {
            bool? value = _single_exitOnError_codec.Read(input);
            if (exitOnError_ == null || value != false) {
              ExitOnError = value;
            }
            break;
          }
          case 410: {
            double? value = _single_seqPageCost_codec.Read(input);
            if (seqPageCost_ == null || value != 0D) {
              SeqPageCost = value;
            }
            break;
          }
          case 418: {
            double? value = _single_randomPageCost_codec.Read(input);
            if (randomPageCost_ == null || value != 0D) {
              RandomPageCost = value;
            }
            break;
          }
          case 426: {
            bool? value = _single_sqlInheritance_codec.Read(input);
            if (sqlInheritance_ == null || value != false) {
              SqlInheritance = value;
            }
            break;
          }
          case 434: {
            long? value = _single_effectiveIoConcurrency_codec.Read(input);
            if (effectiveIoConcurrency_ == null || value != 0L) {
              EffectiveIoConcurrency = value;
            }
            break;
          }
          case 442: {
            long? value = _single_effectiveCacheSize_codec.Read(input);
            if (effectiveCacheSize_ == null || value != 0L) {
              EffectiveCacheSize = value;
            }
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the PostgresqlHostConfig9_6 message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum ConstraintExclusion {
        [pbr::OriginalName("CONSTRAINT_EXCLUSION_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("CONSTRAINT_EXCLUSION_ON")] On = 1,
        [pbr::OriginalName("CONSTRAINT_EXCLUSION_OFF")] Off = 2,
        [pbr::OriginalName("CONSTRAINT_EXCLUSION_PARTITION")] Partition = 3,
      }

      internal enum ForceParallelMode {
        [pbr::OriginalName("FORCE_PARALLEL_MODE_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("FORCE_PARALLEL_MODE_ON")] On = 1,
        [pbr::OriginalName("FORCE_PARALLEL_MODE_OFF")] Off = 2,
        [pbr::OriginalName("FORCE_PARALLEL_MODE_REGRESS")] Regress = 3,
      }

      internal enum LogLevel {
        [pbr::OriginalName("LOG_LEVEL_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("LOG_LEVEL_DEBUG5")] Debug5 = 1,
        [pbr::OriginalName("LOG_LEVEL_DEBUG4")] Debug4 = 2,
        [pbr::OriginalName("LOG_LEVEL_DEBUG3")] Debug3 = 3,
        [pbr::OriginalName("LOG_LEVEL_DEBUG2")] Debug2 = 4,
        [pbr::OriginalName("LOG_LEVEL_DEBUG1")] Debug1 = 5,
        [pbr::OriginalName("LOG_LEVEL_LOG")] Log = 6,
        [pbr::OriginalName("LOG_LEVEL_NOTICE")] Notice = 7,
        [pbr::OriginalName("LOG_LEVEL_WARNING")] Warning = 8,
        [pbr::OriginalName("LOG_LEVEL_ERROR")] Error = 9,
        [pbr::OriginalName("LOG_LEVEL_FATAL")] Fatal = 10,
        [pbr::OriginalName("LOG_LEVEL_PANIC")] Panic = 11,
      }

      internal enum LogErrorVerbosity {
        [pbr::OriginalName("LOG_ERROR_VERBOSITY_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("LOG_ERROR_VERBOSITY_TERSE")] Terse = 1,
        [pbr::OriginalName("LOG_ERROR_VERBOSITY_DEFAULT")] Default = 2,
        [pbr::OriginalName("LOG_ERROR_VERBOSITY_VERBOSE")] Verbose = 3,
      }

      internal enum LogStatement {
        [pbr::OriginalName("LOG_STATEMENT_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("LOG_STATEMENT_NONE")] None = 1,
        [pbr::OriginalName("LOG_STATEMENT_DDL")] Ddl = 2,
        [pbr::OriginalName("LOG_STATEMENT_MOD")] Mod = 3,
        [pbr::OriginalName("LOG_STATEMENT_ALL")] All = 4,
      }

      internal enum TransactionIsolation {
        [pbr::OriginalName("TRANSACTION_ISOLATION_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("TRANSACTION_ISOLATION_READ_UNCOMMITTED")] ReadUncommitted = 1,
        [pbr::OriginalName("TRANSACTION_ISOLATION_READ_COMMITTED")] ReadCommitted = 2,
        [pbr::OriginalName("TRANSACTION_ISOLATION_REPEATABLE_READ")] RepeatableRead = 3,
        [pbr::OriginalName("TRANSACTION_ISOLATION_SERIALIZABLE")] Serializable = 4,
      }

      internal enum ByteaOutput {
        [pbr::OriginalName("BYTEA_OUTPUT_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("BYTEA_OUTPUT_HEX")] Hex = 1,
        [pbr::OriginalName("BYTEA_OUTPUT_ESCAPED")] Escaped = 2,
      }

      internal enum XmlBinary {
        [pbr::OriginalName("XML_BINARY_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("XML_BINARY_BASE64")] Base64 = 1,
        [pbr::OriginalName("XML_BINARY_HEX")] Hex = 2,
      }

      internal enum XmlOption {
        [pbr::OriginalName("XML_OPTION_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("XML_OPTION_DOCUMENT")] Document = 1,
        [pbr::OriginalName("XML_OPTION_CONTENT")] Content = 2,
      }

      internal enum BackslashQuote {
        [pbr::OriginalName("BACKSLASH_QUOTE_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("BACKSLASH_QUOTE")] BackslashQuote = 1,
        [pbr::OriginalName("BACKSLASH_QUOTE_ON")] On = 2,
        [pbr::OriginalName("BACKSLASH_QUOTE_OFF")] Off = 3,
        [pbr::OriginalName("BACKSLASH_QUOTE_SAFE_ENCODING")] SafeEncoding = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
