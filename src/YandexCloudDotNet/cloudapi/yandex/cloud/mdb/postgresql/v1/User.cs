// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/mdb/postgresql/v1/user.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Mdb.Postgresql.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/mdb/postgresql/v1/user.proto</summary>
  internal static partial class UserReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/mdb/postgresql/v1/user.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static UserReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cil5YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvdXNlci5wcm90bxIe",
            "eWFuZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxGh5nb29nbGUvcHJvdG9i",
            "dWYvd3JhcHBlcnMucHJvdG8aHXlhbmRleC9jbG91ZC92YWxpZGF0aW9uLnBy",
            "b3RvIpMCCgRVc2VyEgwKBG5hbWUYASABKAkSEgoKY2x1c3Rlcl9pZBgCIAEo",
            "CRI/CgtwZXJtaXNzaW9ucxgDIAMoCzIqLnlhbmRleC5jbG91ZC5tZGIucG9z",
            "dGdyZXNxbC52MS5QZXJtaXNzaW9uEhIKCmNvbm5fbGltaXQYBCABKAMSPgoI",
            "c2V0dGluZ3MYBSABKAsyLC55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwu",
            "djEuVXNlclNldHRpbmdzEikKBWxvZ2luGAYgASgLMhouZ29vZ2xlLnByb3Rv",
            "YnVmLkJvb2xWYWx1ZRIpCgZncmFudHMYByADKAlCGYrIMQQ8PTYz8scxDVth",
            "LXpBLVowLTlfXSoiIwoKUGVybWlzc2lvbhIVCg1kYXRhYmFzZV9uYW1lGAEg",
            "ASgJIuoCCghVc2VyU3BlYxIrCgRuYW1lGAEgASgJQh3oxzEBisgxBDw9NjPy",
            "xzENW2EtekEtWjAtOV9dKhIfCghwYXNzd29yZBgCIAEoCUIN6McxAYrIMQU4",
            "LTEyOBI/CgtwZXJtaXNzaW9ucxgDIAMoCzIqLnlhbmRleC5jbG91ZC5tZGIu",
            "cG9zdGdyZXNxbC52MS5QZXJtaXNzaW9uEjkKCmNvbm5fbGltaXQYBCABKAsy",
            "Gy5nb29nbGUucHJvdG9idWYuSW50NjRWYWx1ZUII+scxBD49MTASPgoIc2V0",
            "dGluZ3MYBSABKAsyLC55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEu",
            "VXNlclNldHRpbmdzEikKBWxvZ2luGAYgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LkJvb2xWYWx1ZRIpCgZncmFudHMYByADKAlCGYrIMQQ8PTYz8scxDVthLXpB",
            "LVowLTlfXSoinwgKDFVzZXJTZXR0aW5ncxJoCh1kZWZhdWx0X3RyYW5zYWN0",
            "aW9uX2lzb2xhdGlvbhgBIAEoDjJBLnlhbmRleC5jbG91ZC5tZGIucG9zdGdy",
            "ZXNxbC52MS5Vc2VyU2V0dGluZ3MuVHJhbnNhY3Rpb25Jc29sYXRpb24SMQoM",
            "bG9ja190aW1lb3V0GAIgASgLMhsuZ29vZ2xlLnByb3RvYnVmLkludDY0VmFs",
            "dWUSPwoabG9nX21pbl9kdXJhdGlvbl9zdGF0ZW1lbnQYAyABKAsyGy5nb29n",
            "bGUucHJvdG9idWYuSW50NjRWYWx1ZRJaChJzeW5jaHJvbm91c19jb21taXQY",
            "BCABKA4yPi55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuVXNlclNl",
            "dHRpbmdzLlN5bmNocm9ub3VzQ29tbWl0EjQKD3RlbXBfZmlsZV9saW1pdBgF",
            "IAEoCzIbLmdvb2dsZS5wcm90b2J1Zi5JbnQ2NFZhbHVlElAKDWxvZ19zdGF0",
            "ZW1lbnQYBiABKA4yOS55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEu",
            "VXNlclNldHRpbmdzLkxvZ1N0YXRlbWVudCLWAQoRU3luY2hyb25vdXNDb21t",
            "aXQSIgoeU1lOQ0hST05PVVNfQ09NTUlUX1VOU1BFQ0lGSUVEEAASGQoVU1lO",
            "Q0hST05PVVNfQ09NTUlUX09OEAESGgoWU1lOQ0hST05PVVNfQ09NTUlUX09G",
            "RhACEhwKGFNZTkNIUk9OT1VTX0NPTU1JVF9MT0NBTBADEiMKH1NZTkNIUk9O",
            "T1VTX0NPTU1JVF9SRU1PVEVfV1JJVEUQBBIjCh9TWU5DSFJPTk9VU19DT01N",
            "SVRfUkVNT1RFX0FQUExZEAUiigEKDExvZ1N0YXRlbWVudBIdChlMT0dfU1RB",
            "VEVNRU5UX1VOU1BFQ0lGSUVEEAASFgoSTE9HX1NUQVRFTUVOVF9OT05FEAES",
            "FQoRTE9HX1NUQVRFTUVOVF9EREwQAhIVChFMT0dfU1RBVEVNRU5UX01PRBAD",
            "EhUKEUxPR19TVEFURU1FTlRfQUxMEAQi5gEKFFRyYW5zYWN0aW9uSXNvbGF0",
            "aW9uEiUKIVRSQU5TQUNUSU9OX0lTT0xBVElPTl9VTlNQRUNJRklFRBAAEioK",
            "JlRSQU5TQUNUSU9OX0lTT0xBVElPTl9SRUFEX1VOQ09NTUlUVEVEEAESKAok",
            "VFJBTlNBQ1RJT05fSVNPTEFUSU9OX1JFQURfQ09NTUlUVEVEEAISKQolVFJB",
            "TlNBQ1RJT05fSVNPTEFUSU9OX1JFUEVBVEFCTEVfUkVBRBADEiYKIlRSQU5T",
            "QUNUSU9OX0lTT0xBVElPTl9TRVJJQUxJWkFCTEUQBEJzCiJ5YW5kZXguY2xv",
            "dWQuYXBpLm1kYi5wb3N0Z3Jlc3FsLnYxWk1naXRodWIuY29tL3lhbmRleC1j",
            "bG91ZC9nby1nZW5wcm90by95YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwv",
            "djE7cG9zdGdyZXNxbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.WrappersReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.User), global::Yandex.Cloud.Mdb.Postgresql.V1.User.Parser, new[]{ "Name", "ClusterId", "Permissions", "ConnLimit", "Settings", "Login", "Grants" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Permission), global::Yandex.Cloud.Mdb.Postgresql.V1.Permission.Parser, new[]{ "DatabaseName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UserSpec), global::Yandex.Cloud.Mdb.Postgresql.V1.UserSpec.Parser, new[]{ "Name", "Password", "Permissions", "ConnLimit", "Settings", "Login", "Grants" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings), global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Parser, new[]{ "DefaultTransactionIsolation", "LockTimeout", "LogMinDurationStatement", "SynchronousCommit", "TempFileLimit", "LogStatement" }, null, new[]{ typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.SynchronousCommit), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.LogStatement), typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.TransactionIsolation) }, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A PostgreSQL User resource. For more information, see
  /// the [Developer's Guide](/docs/managed-postgresql/concepts).
  /// </summary>
  internal sealed partial class User : pb::IMessage<User> {
    private static readonly pb::MessageParser<User> _parser = new pb::MessageParser<User>(() => new User());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<User> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.UserReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User(User other) : this() {
      name_ = other.name_;
      clusterId_ = other.clusterId_;
      permissions_ = other.permissions_.Clone();
      connLimit_ = other.connLimit_;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      Login = other.Login;
      grants_ = other.grants_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public User Clone() {
      return new User(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the PostgreSQL user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 2;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster the user belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Permission> _repeated_permissions_codec
        = pb::FieldCodec.ForMessage(26, global::Yandex.Cloud.Mdb.Postgresql.V1.Permission.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Permission> permissions_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Permission>();
    /// <summary>
    /// Set of permissions granted to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Permission> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "conn_limit" field.</summary>
    public const int ConnLimitFieldNumber = 4;
    private long connLimit_;
    /// <summary>
    /// Number of database connections available to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConnLimit {
      get { return connLimit_; }
      set {
        connLimit_ = value;
      }
    }

    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 5;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings settings_;
    /// <summary>
    /// Postgresql settings for this user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 6;
    private static readonly pb::FieldCodec<bool?> _single_login_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
    private bool? login_;
    /// <summary>
    /// User can login (default True)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Login {
      get { return login_; }
      set {
        login_ = value;
      }
    }


    /// <summary>Field number for the "grants" field.</summary>
    public const int GrantsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_grants_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> grants_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// User grants (GRANT &lt;role> TO &lt;user>), role must be other user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Grants {
      get { return grants_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as User);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(User other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ClusterId != other.ClusterId) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (ConnLimit != other.ConnLimit) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      if (Login != other.Login) return false;
      if(!grants_.Equals(other.grants_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (ConnLimit != 0L) hash ^= ConnLimit.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (login_ != null) hash ^= Login.GetHashCode();
      hash ^= grants_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterId);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (ConnLimit != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ConnLimit);
      }
      if (settings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Settings);
      }
      if (login_ != null) {
        _single_login_codec.WriteTagAndValue(output, Login);
      }
      grants_.WriteTo(output, _repeated_grants_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (ConnLimit != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConnLimit);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (login_ != null) {
        size += _single_login_codec.CalculateSizeWithTag(Login);
      }
      size += grants_.CalculateSize(_repeated_grants_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(User other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      permissions_.Add(other.permissions_);
      if (other.ConnLimit != 0L) {
        ConnLimit = other.ConnLimit;
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
      if (other.login_ != null) {
        if (login_ == null || other.Login != false) {
          Login = other.Login;
        }
      }
      grants_.Add(other.grants_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ClusterId = input.ReadString();
            break;
          }
          case 26: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 32: {
            ConnLimit = input.ReadInt64();
            break;
          }
          case 42: {
            if (settings_ == null) {
              Settings = new global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
          case 50: {
            bool? value = _single_login_codec.Read(input);
            if (login_ == null || value != false) {
              Login = value;
            }
            break;
          }
          case 58: {
            grants_.AddEntriesFrom(input, _repeated_grants_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Permission : pb::IMessage<Permission> {
    private static readonly pb::MessageParser<Permission> _parser = new pb::MessageParser<Permission>(() => new Permission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Permission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.UserReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permission(Permission other) : this() {
      databaseName_ = other.databaseName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Permission Clone() {
      return new Permission(this);
    }

    /// <summary>Field number for the "database_name" field.</summary>
    public const int DatabaseNameFieldNumber = 1;
    private string databaseName_ = "";
    /// <summary>
    /// Name of the database that the permission grants access to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DatabaseName {
      get { return databaseName_; }
      set {
        databaseName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Permission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Permission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DatabaseName != other.DatabaseName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DatabaseName.Length != 0) hash ^= DatabaseName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DatabaseName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(DatabaseName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DatabaseName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DatabaseName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Permission other) {
      if (other == null) {
        return;
      }
      if (other.DatabaseName.Length != 0) {
        DatabaseName = other.DatabaseName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            DatabaseName = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UserSpec : pb::IMessage<UserSpec> {
    private static readonly pb::MessageParser<UserSpec> _parser = new pb::MessageParser<UserSpec>(() => new UserSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.UserReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSpec(UserSpec other) : this() {
      name_ = other.name_;
      password_ = other.password_;
      permissions_ = other.permissions_.Clone();
      ConnLimit = other.ConnLimit;
      settings_ = other.settings_ != null ? other.settings_.Clone() : null;
      Login = other.Login;
      grants_ = other.grants_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSpec Clone() {
      return new UserSpec(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the PostgreSQL user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "password" field.</summary>
    public const int PasswordFieldNumber = 2;
    private string password_ = "";
    /// <summary>
    /// Password of the PostgreSQL user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Password {
      get { return password_; }
      set {
        password_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "permissions" field.</summary>
    public const int PermissionsFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Permission> _repeated_permissions_codec
        = pb::FieldCodec.ForMessage(26, global::Yandex.Cloud.Mdb.Postgresql.V1.Permission.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Permission> permissions_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Permission>();
    /// <summary>
    /// Set of permissions to grant to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Permission> Permissions {
      get { return permissions_; }
    }

    /// <summary>Field number for the "conn_limit" field.</summary>
    public const int ConnLimitFieldNumber = 4;
    private static readonly pb::FieldCodec<long?> _single_connLimit_codec = pb::FieldCodec.ForStructWrapper<long>(34);
    private long? connLimit_;
    /// <summary>
    /// Number of database connections that should be available to the user.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? ConnLimit {
      get { return connLimit_; }
      set {
        connLimit_ = value;
      }
    }


    /// <summary>Field number for the "settings" field.</summary>
    public const int SettingsFieldNumber = 5;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings settings_;
    /// <summary>
    /// Postgresql settings for this user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings Settings {
      get { return settings_; }
      set {
        settings_ = value;
      }
    }

    /// <summary>Field number for the "login" field.</summary>
    public const int LoginFieldNumber = 6;
    private static readonly pb::FieldCodec<bool?> _single_login_codec = pb::FieldCodec.ForStructWrapper<bool>(50);
    private bool? login_;
    /// <summary>
    /// User can login (default True)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool? Login {
      get { return login_; }
      set {
        login_ = value;
      }
    }


    /// <summary>Field number for the "grants" field.</summary>
    public const int GrantsFieldNumber = 7;
    private static readonly pb::FieldCodec<string> _repeated_grants_codec
        = pb::FieldCodec.ForString(58);
    private readonly pbc::RepeatedField<string> grants_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// User grants (GRANT &lt;role> TO &lt;user>), role must be other user
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Grants {
      get { return grants_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Password != other.Password) return false;
      if(!permissions_.Equals(other.permissions_)) return false;
      if (ConnLimit != other.ConnLimit) return false;
      if (!object.Equals(Settings, other.Settings)) return false;
      if (Login != other.Login) return false;
      if(!grants_.Equals(other.grants_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Password.Length != 0) hash ^= Password.GetHashCode();
      hash ^= permissions_.GetHashCode();
      if (connLimit_ != null) hash ^= ConnLimit.GetHashCode();
      if (settings_ != null) hash ^= Settings.GetHashCode();
      if (login_ != null) hash ^= Login.GetHashCode();
      hash ^= grants_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Password.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Password);
      }
      permissions_.WriteTo(output, _repeated_permissions_codec);
      if (connLimit_ != null) {
        _single_connLimit_codec.WriteTagAndValue(output, ConnLimit);
      }
      if (settings_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Settings);
      }
      if (login_ != null) {
        _single_login_codec.WriteTagAndValue(output, Login);
      }
      grants_.WriteTo(output, _repeated_grants_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Password.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Password);
      }
      size += permissions_.CalculateSize(_repeated_permissions_codec);
      if (connLimit_ != null) {
        size += _single_connLimit_codec.CalculateSizeWithTag(ConnLimit);
      }
      if (settings_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Settings);
      }
      if (login_ != null) {
        size += _single_login_codec.CalculateSizeWithTag(Login);
      }
      size += grants_.CalculateSize(_repeated_grants_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSpec other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Password.Length != 0) {
        Password = other.Password;
      }
      permissions_.Add(other.permissions_);
      if (other.connLimit_ != null) {
        if (connLimit_ == null || other.ConnLimit != 0L) {
          ConnLimit = other.ConnLimit;
        }
      }
      if (other.settings_ != null) {
        if (settings_ == null) {
          Settings = new global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings();
        }
        Settings.MergeFrom(other.Settings);
      }
      if (other.login_ != null) {
        if (login_ == null || other.Login != false) {
          Login = other.Login;
        }
      }
      grants_.Add(other.grants_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Password = input.ReadString();
            break;
          }
          case 26: {
            permissions_.AddEntriesFrom(input, _repeated_permissions_codec);
            break;
          }
          case 34: {
            long? value = _single_connLimit_codec.Read(input);
            if (connLimit_ == null || value != 0L) {
              ConnLimit = value;
            }
            break;
          }
          case 42: {
            if (settings_ == null) {
              Settings = new global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings();
            }
            input.ReadMessage(Settings);
            break;
          }
          case 50: {
            bool? value = _single_login_codec.Read(input);
            if (login_ == null || value != false) {
              Login = value;
            }
            break;
          }
          case 58: {
            grants_.AddEntriesFrom(input, _repeated_grants_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Postgresql user settings config
  /// </summary>
  internal sealed partial class UserSettings : pb::IMessage<UserSettings> {
    private static readonly pb::MessageParser<UserSettings> _parser = new pb::MessageParser<UserSettings>(() => new UserSettings());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserSettings> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.UserReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings(UserSettings other) : this() {
      defaultTransactionIsolation_ = other.defaultTransactionIsolation_;
      LockTimeout = other.LockTimeout;
      LogMinDurationStatement = other.LogMinDurationStatement;
      synchronousCommit_ = other.synchronousCommit_;
      TempFileLimit = other.TempFileLimit;
      logStatement_ = other.logStatement_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserSettings Clone() {
      return new UserSettings(this);
    }

    /// <summary>Field number for the "default_transaction_isolation" field.</summary>
    public const int DefaultTransactionIsolationFieldNumber = 1;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.TransactionIsolation defaultTransactionIsolation_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.TransactionIsolation DefaultTransactionIsolation {
      get { return defaultTransactionIsolation_; }
      set {
        defaultTransactionIsolation_ = value;
      }
    }

    /// <summary>Field number for the "lock_timeout" field.</summary>
    public const int LockTimeoutFieldNumber = 2;
    private static readonly pb::FieldCodec<long?> _single_lockTimeout_codec = pb::FieldCodec.ForStructWrapper<long>(18);
    private long? lockTimeout_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? LockTimeout {
      get { return lockTimeout_; }
      set {
        lockTimeout_ = value;
      }
    }


    /// <summary>Field number for the "log_min_duration_statement" field.</summary>
    public const int LogMinDurationStatementFieldNumber = 3;
    private static readonly pb::FieldCodec<long?> _single_logMinDurationStatement_codec = pb::FieldCodec.ForStructWrapper<long>(26);
    private long? logMinDurationStatement_;
    /// <summary>
    /// in milliseconds.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? LogMinDurationStatement {
      get { return logMinDurationStatement_; }
      set {
        logMinDurationStatement_ = value;
      }
    }


    /// <summary>Field number for the "synchronous_commit" field.</summary>
    public const int SynchronousCommitFieldNumber = 4;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.SynchronousCommit synchronousCommit_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.SynchronousCommit SynchronousCommit {
      get { return synchronousCommit_; }
      set {
        synchronousCommit_ = value;
      }
    }

    /// <summary>Field number for the "temp_file_limit" field.</summary>
    public const int TempFileLimitFieldNumber = 5;
    private static readonly pb::FieldCodec<long?> _single_tempFileLimit_codec = pb::FieldCodec.ForStructWrapper<long>(42);
    private long? tempFileLimit_;
    /// <summary>
    /// in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long? TempFileLimit {
      get { return tempFileLimit_; }
      set {
        tempFileLimit_ = value;
      }
    }


    /// <summary>Field number for the "log_statement" field.</summary>
    public const int LogStatementFieldNumber = 6;
    private global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.LogStatement logStatement_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.LogStatement LogStatement {
      get { return logStatement_; }
      set {
        logStatement_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserSettings);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserSettings other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (DefaultTransactionIsolation != other.DefaultTransactionIsolation) return false;
      if (LockTimeout != other.LockTimeout) return false;
      if (LogMinDurationStatement != other.LogMinDurationStatement) return false;
      if (SynchronousCommit != other.SynchronousCommit) return false;
      if (TempFileLimit != other.TempFileLimit) return false;
      if (LogStatement != other.LogStatement) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (DefaultTransactionIsolation != 0) hash ^= DefaultTransactionIsolation.GetHashCode();
      if (lockTimeout_ != null) hash ^= LockTimeout.GetHashCode();
      if (logMinDurationStatement_ != null) hash ^= LogMinDurationStatement.GetHashCode();
      if (SynchronousCommit != 0) hash ^= SynchronousCommit.GetHashCode();
      if (tempFileLimit_ != null) hash ^= TempFileLimit.GetHashCode();
      if (LogStatement != 0) hash ^= LogStatement.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (DefaultTransactionIsolation != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) DefaultTransactionIsolation);
      }
      if (lockTimeout_ != null) {
        _single_lockTimeout_codec.WriteTagAndValue(output, LockTimeout);
      }
      if (logMinDurationStatement_ != null) {
        _single_logMinDurationStatement_codec.WriteTagAndValue(output, LogMinDurationStatement);
      }
      if (SynchronousCommit != 0) {
        output.WriteRawTag(32);
        output.WriteEnum((int) SynchronousCommit);
      }
      if (tempFileLimit_ != null) {
        _single_tempFileLimit_codec.WriteTagAndValue(output, TempFileLimit);
      }
      if (LogStatement != 0) {
        output.WriteRawTag(48);
        output.WriteEnum((int) LogStatement);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (DefaultTransactionIsolation != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) DefaultTransactionIsolation);
      }
      if (lockTimeout_ != null) {
        size += _single_lockTimeout_codec.CalculateSizeWithTag(LockTimeout);
      }
      if (logMinDurationStatement_ != null) {
        size += _single_logMinDurationStatement_codec.CalculateSizeWithTag(LogMinDurationStatement);
      }
      if (SynchronousCommit != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) SynchronousCommit);
      }
      if (tempFileLimit_ != null) {
        size += _single_tempFileLimit_codec.CalculateSizeWithTag(TempFileLimit);
      }
      if (LogStatement != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) LogStatement);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserSettings other) {
      if (other == null) {
        return;
      }
      if (other.DefaultTransactionIsolation != 0) {
        DefaultTransactionIsolation = other.DefaultTransactionIsolation;
      }
      if (other.lockTimeout_ != null) {
        if (lockTimeout_ == null || other.LockTimeout != 0L) {
          LockTimeout = other.LockTimeout;
        }
      }
      if (other.logMinDurationStatement_ != null) {
        if (logMinDurationStatement_ == null || other.LogMinDurationStatement != 0L) {
          LogMinDurationStatement = other.LogMinDurationStatement;
        }
      }
      if (other.SynchronousCommit != 0) {
        SynchronousCommit = other.SynchronousCommit;
      }
      if (other.tempFileLimit_ != null) {
        if (tempFileLimit_ == null || other.TempFileLimit != 0L) {
          TempFileLimit = other.TempFileLimit;
        }
      }
      if (other.LogStatement != 0) {
        LogStatement = other.LogStatement;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            DefaultTransactionIsolation = (global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.TransactionIsolation) input.ReadEnum();
            break;
          }
          case 18: {
            long? value = _single_lockTimeout_codec.Read(input);
            if (lockTimeout_ == null || value != 0L) {
              LockTimeout = value;
            }
            break;
          }
          case 26: {
            long? value = _single_logMinDurationStatement_codec.Read(input);
            if (logMinDurationStatement_ == null || value != 0L) {
              LogMinDurationStatement = value;
            }
            break;
          }
          case 32: {
            SynchronousCommit = (global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.SynchronousCommit) input.ReadEnum();
            break;
          }
          case 42: {
            long? value = _single_tempFileLimit_codec.Read(input);
            if (tempFileLimit_ == null || value != 0L) {
              TempFileLimit = value;
            }
            break;
          }
          case 48: {
            LogStatement = (global::Yandex.Cloud.Mdb.Postgresql.V1.UserSettings.Types.LogStatement) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the UserSettings message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum SynchronousCommit {
        [pbr::OriginalName("SYNCHRONOUS_COMMIT_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("SYNCHRONOUS_COMMIT_ON")] On = 1,
        [pbr::OriginalName("SYNCHRONOUS_COMMIT_OFF")] Off = 2,
        [pbr::OriginalName("SYNCHRONOUS_COMMIT_LOCAL")] Local = 3,
        [pbr::OriginalName("SYNCHRONOUS_COMMIT_REMOTE_WRITE")] RemoteWrite = 4,
        [pbr::OriginalName("SYNCHRONOUS_COMMIT_REMOTE_APPLY")] RemoteApply = 5,
      }

      internal enum LogStatement {
        [pbr::OriginalName("LOG_STATEMENT_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("LOG_STATEMENT_NONE")] None = 1,
        [pbr::OriginalName("LOG_STATEMENT_DDL")] Ddl = 2,
        [pbr::OriginalName("LOG_STATEMENT_MOD")] Mod = 3,
        [pbr::OriginalName("LOG_STATEMENT_ALL")] All = 4,
      }

      internal enum TransactionIsolation {
        [pbr::OriginalName("TRANSACTION_ISOLATION_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("TRANSACTION_ISOLATION_READ_UNCOMMITTED")] ReadUncommitted = 1,
        [pbr::OriginalName("TRANSACTION_ISOLATION_READ_COMMITTED")] ReadCommitted = 2,
        [pbr::OriginalName("TRANSACTION_ISOLATION_REPEATABLE_READ")] RepeatableRead = 3,
        [pbr::OriginalName("TRANSACTION_ISOLATION_SERIALIZABLE")] Serializable = 4,
      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
