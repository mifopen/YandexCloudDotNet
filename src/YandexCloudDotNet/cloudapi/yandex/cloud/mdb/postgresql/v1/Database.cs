// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/mdb/postgresql/v1/database.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Mdb.Postgresql.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/mdb/postgresql/v1/database.proto</summary>
  internal static partial class DatabaseReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/mdb/postgresql/v1/database.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static DatabaseReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Ci15YW5kZXgvY2xvdWQvbWRiL3Bvc3RncmVzcWwvdjEvZGF0YWJhc2UucHJv",
            "dG8SHnlhbmRleC5jbG91ZC5tZGIucG9zdGdyZXNxbC52MRodeWFuZGV4L2Ns",
            "b3VkL3ZhbGlkYXRpb24ucHJvdG8ioAEKCERhdGFiYXNlEgwKBG5hbWUYASAB",
            "KAkSEgoKY2x1c3Rlcl9pZBgCIAEoCRINCgVvd25lchgDIAEoCRISCgpsY19j",
            "b2xsYXRlGAQgASgJEhAKCGxjX2N0eXBlGAUgASgJEj0KCmV4dGVuc2lvbnMY",
            "BiADKAsyKS55YW5kZXguY2xvdWQubWRiLnBvc3RncmVzcWwudjEuRXh0ZW5z",
            "aW9uIioKCUV4dGVuc2lvbhIMCgRuYW1lGAEgASgJEg8KB3ZlcnNpb24YAiAB",
            "KAkigQIKDERhdGFiYXNlU3BlYxIsCgRuYW1lGAEgASgJQh7oxzEBisgxBDw9",
            "NjPyxzEOW2EtekEtWjAtOV8tXSoSLAoFb3duZXIYAiABKAlCHejHMQGKyDEE",
            "PD02M/LHMQ1bYS16QS1aMC05X10qEisKCmxjX2NvbGxhdGUYAyABKAlCF/LH",
            "MRN8W2EtekEtWl9dKy5VVEYtOHxDEikKCGxjX2N0eXBlGAQgASgJQhfyxzET",
            "fFthLXpBLVpfXSsuVVRGLTh8QxI9CgpleHRlbnNpb25zGAUgAygLMikueWFu",
            "ZGV4LmNsb3VkLm1kYi5wb3N0Z3Jlc3FsLnYxLkV4dGVuc2lvbkJzCiJ5YW5k",
            "ZXguY2xvdWQuYXBpLm1kYi5wb3N0Z3Jlc3FsLnYxWk1naXRodWIuY29tL3lh",
            "bmRleC1jbG91ZC9nby1nZW5wcm90by95YW5kZXgvY2xvdWQvbWRiL3Bvc3Rn",
            "cmVzcWwvdjE7cG9zdGdyZXNxbGIGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Yandex.Cloud.ValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Database), global::Yandex.Cloud.Mdb.Postgresql.V1.Database.Parser, new[]{ "Name", "ClusterId", "Owner", "LcCollate", "LcCtype", "Extensions" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.Extension), global::Yandex.Cloud.Mdb.Postgresql.V1.Extension.Parser, new[]{ "Name", "Version" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseSpec), global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseSpec.Parser, new[]{ "Name", "Owner", "LcCollate", "LcCtype", "Extensions" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A PostgreSQL Database resource. For more information, see 
  /// the [Developer's Guide](/docs/managed-postgresql/concepts).
  /// </summary>
  internal sealed partial class Database : pb::IMessage<Database> {
    private static readonly pb::MessageParser<Database> _parser = new pb::MessageParser<Database>(() => new Database());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Database> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database(Database other) : this() {
      name_ = other.name_;
      clusterId_ = other.clusterId_;
      owner_ = other.owner_;
      lcCollate_ = other.lcCollate_;
      lcCtype_ = other.lcCtype_;
      extensions_ = other.extensions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Database Clone() {
      return new Database(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 2;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the PostgreSQL cluster that the database belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 3;
    private string owner_ = "";
    /// <summary>
    /// Name of the user assigned as the owner of the database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lc_collate" field.</summary>
    public const int LcCollateFieldNumber = 4;
    private string lcCollate_ = "";
    /// <summary>
    /// POSIX locale for string sorting order.
    /// Can only be set at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LcCollate {
      get { return lcCollate_; }
      set {
        lcCollate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lc_ctype" field.</summary>
    public const int LcCtypeFieldNumber = 5;
    private string lcCtype_ = "";
    /// <summary>
    /// POSIX locale for character classification.
    /// Can only be set at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LcCtype {
      get { return lcCtype_; }
      set {
        lcCtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 6;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Extension> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(50, global::Yandex.Cloud.Mdb.Postgresql.V1.Extension.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Extension> extensions_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Extension>();
    /// <summary>
    /// PostgreSQL extensions enabled for the database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Extension> Extensions {
      get { return extensions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Database);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Database other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (ClusterId != other.ClusterId) return false;
      if (Owner != other.Owner) return false;
      if (LcCollate != other.LcCollate) return false;
      if (LcCtype != other.LcCtype) return false;
      if(!extensions_.Equals(other.extensions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (LcCollate.Length != 0) hash ^= LcCollate.GetHashCode();
      if (LcCtype.Length != 0) hash ^= LcCtype.GetHashCode();
      hash ^= extensions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterId);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Owner);
      }
      if (LcCollate.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LcCollate);
      }
      if (LcCtype.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(LcCtype);
      }
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (LcCollate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LcCollate);
      }
      if (LcCtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LcCtype);
      }
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Database other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.LcCollate.Length != 0) {
        LcCollate = other.LcCollate;
      }
      if (other.LcCtype.Length != 0) {
        LcCtype = other.LcCtype;
      }
      extensions_.Add(other.extensions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            ClusterId = input.ReadString();
            break;
          }
          case 26: {
            Owner = input.ReadString();
            break;
          }
          case 34: {
            LcCollate = input.ReadString();
            break;
          }
          case 42: {
            LcCtype = input.ReadString();
            break;
          }
          case 50: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class Extension : pb::IMessage<Extension> {
    private static readonly pb::MessageParser<Extension> _parser = new pb::MessageParser<Extension>(() => new Extension());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Extension> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Extension() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Extension(Extension other) : this() {
      name_ = other.name_;
      version_ = other.version_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Extension Clone() {
      return new Extension(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the extension, e.g. `pg_trgm` or `pg_btree`.
    /// Extensions supported by Managed Service for PostgreSQL are [listed in the Developer's Guide](/docs/managed-postgresql/operations/cluster-extensions).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private string version_ = "";
    /// <summary>
    /// Version of the extension.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Version {
      get { return version_; }
      set {
        version_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Extension);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Extension other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Version != other.Version) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Version.Length != 0) hash ^= Version.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Version.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Version);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Version.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Version);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Extension other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Version.Length != 0) {
        Version = other.Version;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Version = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DatabaseSpec : pb::IMessage<DatabaseSpec> {
    private static readonly pb::MessageParser<DatabaseSpec> _parser = new pb::MessageParser<DatabaseSpec>(() => new DatabaseSpec());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DatabaseSpec> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Postgresql.V1.DatabaseReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseSpec() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseSpec(DatabaseSpec other) : this() {
      name_ = other.name_;
      owner_ = other.owner_;
      lcCollate_ = other.lcCollate_;
      lcCtype_ = other.lcCtype_;
      extensions_ = other.extensions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DatabaseSpec Clone() {
      return new DatabaseSpec(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the PostgreSQL database. 1-63 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "owner" field.</summary>
    public const int OwnerFieldNumber = 2;
    private string owner_ = "";
    /// <summary>
    /// Name of the user to be assigned as the owner of the database.
    /// To get the list of available PostgreSQL users, make a [UserService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Owner {
      get { return owner_; }
      set {
        owner_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lc_collate" field.</summary>
    public const int LcCollateFieldNumber = 3;
    private string lcCollate_ = "";
    /// <summary>
    /// POSIX locale for string sorting order.
    /// Can only be set at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LcCollate {
      get { return lcCollate_; }
      set {
        lcCollate_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "lc_ctype" field.</summary>
    public const int LcCtypeFieldNumber = 4;
    private string lcCtype_ = "";
    /// <summary>
    /// POSIX locale for character classification.
    /// Can only be set at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string LcCtype {
      get { return lcCtype_; }
      set {
        lcCtype_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "extensions" field.</summary>
    public const int ExtensionsFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Mdb.Postgresql.V1.Extension> _repeated_extensions_codec
        = pb::FieldCodec.ForMessage(42, global::Yandex.Cloud.Mdb.Postgresql.V1.Extension.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Extension> extensions_ = new pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Extension>();
    /// <summary>
    /// PostgreSQL extensions to be enabled for the database.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Mdb.Postgresql.V1.Extension> Extensions {
      get { return extensions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DatabaseSpec);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DatabaseSpec other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Owner != other.Owner) return false;
      if (LcCollate != other.LcCollate) return false;
      if (LcCtype != other.LcCtype) return false;
      if(!extensions_.Equals(other.extensions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Owner.Length != 0) hash ^= Owner.GetHashCode();
      if (LcCollate.Length != 0) hash ^= LcCollate.GetHashCode();
      if (LcCtype.Length != 0) hash ^= LcCtype.GetHashCode();
      hash ^= extensions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Owner.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Owner);
      }
      if (LcCollate.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(LcCollate);
      }
      if (LcCtype.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(LcCtype);
      }
      extensions_.WriteTo(output, _repeated_extensions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Owner.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Owner);
      }
      if (LcCollate.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LcCollate);
      }
      if (LcCtype.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(LcCtype);
      }
      size += extensions_.CalculateSize(_repeated_extensions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DatabaseSpec other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Owner.Length != 0) {
        Owner = other.Owner;
      }
      if (other.LcCollate.Length != 0) {
        LcCollate = other.LcCollate;
      }
      if (other.LcCtype.Length != 0) {
        LcCtype = other.LcCtype;
      }
      extensions_.Add(other.extensions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Owner = input.ReadString();
            break;
          }
          case 26: {
            LcCollate = input.ReadString();
            break;
          }
          case 34: {
            LcCtype = input.ReadString();
            break;
          }
          case 42: {
            extensions_.AddEntriesFrom(input, _repeated_extensions_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
