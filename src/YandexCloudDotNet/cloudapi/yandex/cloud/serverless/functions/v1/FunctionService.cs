// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/serverless/functions/v1/function_service.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Serverless.Functions.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/serverless/functions/v1/function_service.proto</summary>
  internal static partial class FunctionServiceReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/serverless/functions/v1/function_service.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static FunctionServiceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cjt5YW5kZXgvY2xvdWQvc2VydmVybGVzcy9mdW5jdGlvbnMvdjEvZnVuY3Rp",
            "b25fc2VydmljZS5wcm90bxIkeWFuZGV4LmNsb3VkLnNlcnZlcmxlc3MuZnVu",
            "Y3Rpb25zLnYxGhxnb29nbGUvYXBpL2Fubm90YXRpb25zLnByb3RvGiBnb29n",
            "bGUvcHJvdG9idWYvZmllbGRfbWFzay5wcm90bxoeZ29vZ2xlL3Byb3RvYnVm",
            "L2R1cmF0aW9uLnByb3RvGh9nb29nbGUvcHJvdG9idWYvdGltZXN0YW1wLnBy",
            "b3RvGiB5YW5kZXgvY2xvdWQvYXBpL29wZXJhdGlvbi5wcm90bxogeWFuZGV4",
            "L2Nsb3VkL2FjY2Vzcy9hY2Nlc3MucHJvdG8aM3lhbmRleC9jbG91ZC9zZXJ2",
            "ZXJsZXNzL2Z1bmN0aW9ucy92MS9mdW5jdGlvbi5wcm90bxomeWFuZGV4L2Ns",
            "b3VkL29wZXJhdGlvbi9vcGVyYXRpb24ucHJvdG8aHXlhbmRleC9jbG91ZC92",
            "YWxpZGF0aW9uLnByb3RvIi8KEkdldEZ1bmN0aW9uUmVxdWVzdBIZCgtmdW5j",
            "dGlvbl9pZBgBIAEoCUIE6McxASI+ChlHZXRGdW5jdGlvblZlcnNpb25SZXF1",
            "ZXN0EiEKE2Z1bmN0aW9uX3ZlcnNpb25faWQYASABKAlCBOjHMQEiaAoeR2V0",
            "RnVuY3Rpb25WZXJzaW9uQnlUYWdSZXF1ZXN0EhkKC2Z1bmN0aW9uX2lkGAEg",
            "ASgJQgToxzEBEisKA3RhZxgCIAEoCUIe8scxGlthLXpdWy1fMC05YS16XSp8",
            "WyRdbGF0ZXN0ImYKFExpc3RGdW5jdGlvbnNSZXF1ZXN0EhcKCWZvbGRlcl9p",
            "ZBgBIAEoCUIE6McxARIRCglwYWdlX3NpemUYAiABKAMSEgoKcGFnZV90b2tl",
            "bhgDIAEoCRIOCgZmaWx0ZXIYBCABKAkicwoVTGlzdEZ1bmN0aW9uc1Jlc3Bv",
            "bnNlEkEKCWZ1bmN0aW9ucxgBIAMoCzIuLnlhbmRleC5jbG91ZC5zZXJ2ZXJs",
            "ZXNzLmZ1bmN0aW9ucy52MS5GdW5jdGlvbhIXCg9uZXh0X3BhZ2VfdG9rZW4Y",
            "AiABKAkiywIKFUNyZWF0ZUZ1bmN0aW9uUmVxdWVzdBIXCglmb2xkZXJfaWQY",
            "ASABKAlCBOjHMQESLwoEbmFtZRgCIAEoCUIh8scxHXxbYS16XVstYS16MC05",
            "XXsxLDYxfVthLXowLTldEh4KC2Rlc2NyaXB0aW9uGAMgASgJQgmKyDEFPD0y",
            "NTYSmAEKBmxhYmVscxgEIAMoCzJHLnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNz",
            "LmZ1bmN0aW9ucy52MS5DcmVhdGVGdW5jdGlvblJlcXVlc3QuTGFiZWxzRW50",
            "cnlCP4LIMQQ8PTY0isgxBDw9NjPyxzELWy1fMC05YS16XSqyyDEGGgQxLTYz",
            "ssgxEhIQW2Etel1bLV8wLTlhLXpdKhotCgtMYWJlbHNFbnRyeRILCgNrZXkY",
            "ASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIi0KFkNyZWF0ZUZ1bmN0aW9uTWV0",
            "YWRhdGESEwoLZnVuY3Rpb25faWQYASABKAki/gIKFVVwZGF0ZUZ1bmN0aW9u",
            "UmVxdWVzdBIZCgtmdW5jdGlvbl9pZBgBIAEoCUIE6McxARIvCgt1cGRhdGVf",
            "bWFzaxgCIAEoCzIaLmdvb2dsZS5wcm90b2J1Zi5GaWVsZE1hc2sSLwoEbmFt",
            "ZRgDIAEoCUIh8scxHXxbYS16XVstYS16MC05XXsxLDYxfVthLXowLTldEh4K",
            "C2Rlc2NyaXB0aW9uGAQgASgJQgmKyDEFPD0yNTYSmAEKBmxhYmVscxgFIAMo",
            "CzJHLnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNzLmZ1bmN0aW9ucy52MS5VcGRh",
            "dGVGdW5jdGlvblJlcXVlc3QuTGFiZWxzRW50cnlCP4LIMQQ8PTY0isgxBDw9",
            "NjPyxzELWy1fMC05YS16XSqyyDEGGgQxLTYzssgxEhIQW2Etel1bLV8wLTlh",
            "LXpdKhotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiAB",
            "KAk6AjgBIi0KFlVwZGF0ZUZ1bmN0aW9uTWV0YWRhdGESEwoLZnVuY3Rpb25f",
            "aWQYASABKAkiMgoVRGVsZXRlRnVuY3Rpb25SZXF1ZXN0EhkKC2Z1bmN0aW9u",
            "X2lkGAEgASgJQgToxzEBIi0KFkRlbGV0ZUZ1bmN0aW9uTWV0YWRhdGESEwoL",
            "ZnVuY3Rpb25faWQYASABKAkiFQoTTGlzdFJ1bnRpbWVzUmVxdWVzdCIoChRM",
            "aXN0UnVudGltZXNSZXNwb25zZRIQCghydW50aW1lcxgBIAMoCSKwAQocTGlz",
            "dEZ1bmN0aW9uc1ZlcnNpb25zUmVxdWVzdBITCglmb2xkZXJfaWQYASABKAlI",
            "ABIVCgtmdW5jdGlvbl9pZBgCIAEoCUgAEh0KCXBhZ2Vfc2l6ZRgDIAEoA0IK",
            "+scxBjAtMTAwMBIdCgpwYWdlX3Rva2VuGAQgASgJQgmKyDEFPD0xMDASGgoG",
            "ZmlsdGVyGAUgASgJQgqKyDEGPD0xMDAwQgoKAmlkEgTAwTEBInkKHUxpc3RG",
            "dW5jdGlvbnNWZXJzaW9uc1Jlc3BvbnNlEj8KCHZlcnNpb25zGAEgAygLMi0u",
            "eWFuZGV4LmNsb3VkLnNlcnZlcmxlc3MuZnVuY3Rpb25zLnYxLlZlcnNpb24S",
            "FwoPbmV4dF9wYWdlX3Rva2VuGAIgASgJIpQBCh1MaXN0RnVuY3Rpb25PcGVy",
            "YXRpb25zUmVxdWVzdBIZCgtmdW5jdGlvbl9pZBgBIAEoCUIE6McxARIdCglw",
            "YWdlX3NpemUYAiABKANCCvrHMQYwLTEwMDASHQoKcGFnZV90b2tlbhgDIAEo",
            "CUIJisgxBTw9MTAwEhoKBmZpbHRlchgEIAEoCUIKisgxBjw9MTAwMCJwCh5M",
            "aXN0RnVuY3Rpb25PcGVyYXRpb25zUmVzcG9uc2USNQoKb3BlcmF0aW9ucxgB",
            "IAMoCzIhLnlhbmRleC5jbG91ZC5vcGVyYXRpb24uT3BlcmF0aW9uEhcKD25l",
            "eHRfcGFnZV90b2tlbhgCIAEoCSKYBQocQ3JlYXRlRnVuY3Rpb25WZXJzaW9u",
            "UmVxdWVzdBIZCgtmdW5jdGlvbl9pZBgBIAEoCUIE6McxARIVCgdydW50aW1l",
            "GAIgASgJQgToxzEBEh4KC2Rlc2NyaXB0aW9uGAMgASgJQgmKyDEFMC0yNTYS",
            "GAoKZW50cnlwb2ludBgEIAEoCUIE6McxARJICglyZXNvdXJjZXMYBSABKAsy",
            "Ly55YW5kZXguY2xvdWQuc2VydmVybGVzcy5mdW5jdGlvbnMudjEuUmVzb3Vy",
            "Y2VzQgToxzEBEjoKEWV4ZWN1dGlvbl90aW1lb3V0GAYgASgLMhkuZ29vZ2xl",
            "LnByb3RvYnVmLkR1cmF0aW9uQgToxzEBEhoKEnNlcnZpY2VfYWNjb3VudF9p",
            "ZBgHIAEoCRJACgdwYWNrYWdlGAkgASgLMi0ueWFuZGV4LmNsb3VkLnNlcnZl",
            "cmxlc3MuZnVuY3Rpb25zLnYxLlBhY2thZ2VIABIhCgdjb250ZW50GAogASgM",
            "Qg6KyDEKPD01MjQyODgwMEgAEo8BCgtlbnZpcm9ubWVudBgMIAMoCzJTLnlh",
            "bmRleC5jbG91ZC5zZXJ2ZXJsZXNzLmZ1bmN0aW9ucy52MS5DcmVhdGVGdW5j",
            "dGlvblZlcnNpb25SZXF1ZXN0LkVudmlyb25tZW50RW50cnlCJYrIMQY8PTQw",
            "OTayyDEXEhVbYS16QS1aXVthLXpBLVowLTlfXSoSIQoDdGFnGA0gAygJQhTy",
            "xzEQW2Etel1bLV8wLTlhLXpdKhoyChBFbnZpcm9ubWVudEVudHJ5EgsKA2tl",
            "eRgBIAEoCRINCgV2YWx1ZRgCIAEoCToCOAFCFgoOcGFja2FnZV9zb3VyY2US",
            "BMDBMQFKBAgIEAkiPAodQ3JlYXRlRnVuY3Rpb25WZXJzaW9uTWV0YWRhdGES",
            "GwoTZnVuY3Rpb25fdmVyc2lvbl9pZBgBIAEoCSJdChVTZXRGdW5jdGlvblRh",
            "Z1JlcXVlc3QSIQoTZnVuY3Rpb25fdmVyc2lvbl9pZBgBIAEoCUIE6McxARIh",
            "CgN0YWcYAiABKAlCFPLHMRBbYS16XVstXzAtOWEtel0qImAKGFJlbW92ZUZ1",
            "bmN0aW9uVGFnUmVxdWVzdBIhChNmdW5jdGlvbl92ZXJzaW9uX2lkGAEgASgJ",
            "QgToxzEBEiEKA3RhZxgCIAEoCUIU8scxEFthLXpdWy1fMC05YS16XSoiNQoW",
            "U2V0RnVuY3Rpb25UYWdNZXRhZGF0YRIbChNmdW5jdGlvbl92ZXJzaW9uX2lk",
            "GAEgASgJIjgKGVJlbW92ZUZ1bmN0aW9uVGFnTWV0YWRhdGESGwoTZnVuY3Rp",
            "b25fdmVyc2lvbl9pZBgBIAEoCSLBAQodTGlzdEZ1bmN0aW9uVGFnSGlzdG9y",
            "eVJlcXVlc3QSGQoLZnVuY3Rpb25faWQYASABKAlCBOjHMQESKwoDdGFnGAIg",
            "ASgJQh7yxzEaW2Etel1bLV8wLTlhLXpdKnxbJF1sYXRlc3QSHQoJcGFnZV9z",
            "aXplGAMgASgDQgr6xzEGMC0xMDAwEh0KCnBhZ2VfdG9rZW4YBCABKAlCCYrI",
            "MQU8PTEwMBIaCgZmaWx0ZXIYBSABKAlCCorIMQY8PTEwMDAigAMKHkxpc3RG",
            "dW5jdGlvblRhZ0hpc3RvcnlSZXNwb25zZRKCAQobZnVuY3Rpb25fdGFnX2hp",
            "c3RvcnlfcmVjb3JkGAEgAygLMl0ueWFuZGV4LmNsb3VkLnNlcnZlcmxlc3Mu",
            "ZnVuY3Rpb25zLnYxLkxpc3RGdW5jdGlvblRhZ0hpc3RvcnlSZXNwb25zZS5G",
            "dW5jdGlvblRhZ0hpc3RvcnlSZWNvcmQSFwoPbmV4dF9wYWdlX3Rva2VuGAIg",
            "ASgJGr8BChhGdW5jdGlvblRhZ0hpc3RvcnlSZWNvcmQSEwoLZnVuY3Rpb25f",
            "aWQYASABKAkSGwoTZnVuY3Rpb25fdmVyc2lvbl9pZBgDIAEoCRILCgN0YWcY",
            "AiABKAkSMgoOZWZmZWN0aXZlX2Zyb20YBCABKAsyGi5nb29nbGUucHJvdG9i",
            "dWYuVGltZXN0YW1wEjAKDGVmZmVjdGl2ZV90bxgFIAEoCzIaLmdvb2dsZS5w",
            "cm90b2J1Zi5UaW1lc3RhbXAynRoKD0Z1bmN0aW9uU2VydmljZRKeAQoDR2V0",
            "EjgueWFuZGV4LmNsb3VkLnNlcnZlcmxlc3MuZnVuY3Rpb25zLnYxLkdldEZ1",
            "bmN0aW9uUmVxdWVzdBouLnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNzLmZ1bmN0",
            "aW9ucy52MS5GdW5jdGlvbiItgtPkkwInEiUvZnVuY3Rpb25zL3YxL2Z1bmN0",
            "aW9ucy97ZnVuY3Rpb25faWR9EqABCgRMaXN0EjoueWFuZGV4LmNsb3VkLnNl",
            "cnZlcmxlc3MuZnVuY3Rpb25zLnYxLkxpc3RGdW5jdGlvbnNSZXF1ZXN0Gjsu",
            "eWFuZGV4LmNsb3VkLnNlcnZlcmxlc3MuZnVuY3Rpb25zLnYxLkxpc3RGdW5j",
            "dGlvbnNSZXNwb25zZSIfgtPkkwIZEhcvZnVuY3Rpb25zL3YxL2Z1bmN0aW9u",
            "cxKyAQoGQ3JlYXRlEjsueWFuZGV4LmNsb3VkLnNlcnZlcmxlc3MuZnVuY3Rp",
            "b25zLnYxLkNyZWF0ZUZ1bmN0aW9uUmVxdWVzdBohLnlhbmRleC5jbG91ZC5v",
            "cGVyYXRpb24uT3BlcmF0aW9uIkiC0+STAhwiFy9mdW5jdGlvbnMvdjEvZnVu",
            "Y3Rpb25zOgEqstIqIgoWQ3JlYXRlRnVuY3Rpb25NZXRhZGF0YRIIRnVuY3Rp",
            "b24SwAEKBlVwZGF0ZRI7LnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNzLmZ1bmN0",
            "aW9ucy52MS5VcGRhdGVGdW5jdGlvblJlcXVlc3QaIS55YW5kZXguY2xvdWQu",
            "b3BlcmF0aW9uLk9wZXJhdGlvbiJWgtPkkwIqMiUvZnVuY3Rpb25zL3YxL2Z1",
            "bmN0aW9ucy97ZnVuY3Rpb25faWR9OgEqstIqIgoWVXBkYXRlRnVuY3Rpb25N",
            "ZXRhZGF0YRIIRnVuY3Rpb24SygEKBkRlbGV0ZRI7LnlhbmRleC5jbG91ZC5z",
            "ZXJ2ZXJsZXNzLmZ1bmN0aW9ucy52MS5EZWxldGVGdW5jdGlvblJlcXVlc3Qa",
            "IS55YW5kZXguY2xvdWQub3BlcmF0aW9uLk9wZXJhdGlvbiJggtPkkwInKiUv",
            "ZnVuY3Rpb25zL3YxL2Z1bmN0aW9ucy97ZnVuY3Rpb25faWR9stIqLwoWRGVs",
            "ZXRlRnVuY3Rpb25NZXRhZGF0YRIVZ29vZ2xlLnByb3RvYnVmLkVtcHR5ErIB",
            "CgpHZXRWZXJzaW9uEj8ueWFuZGV4LmNsb3VkLnNlcnZlcmxlc3MuZnVuY3Rp",
            "b25zLnYxLkdldEZ1bmN0aW9uVmVyc2lvblJlcXVlc3QaLS55YW5kZXguY2xv",
            "dWQuc2VydmVybGVzcy5mdW5jdGlvbnMudjEuVmVyc2lvbiI0gtPkkwIuEiwv",
            "ZnVuY3Rpb25zL3YxL3ZlcnNpb25zL3tmdW5jdGlvbl92ZXJzaW9uX2lkfRKs",
            "AQoPR2V0VmVyc2lvbkJ5VGFnEkQueWFuZGV4LmNsb3VkLnNlcnZlcmxlc3Mu",
            "ZnVuY3Rpb25zLnYxLkdldEZ1bmN0aW9uVmVyc2lvbkJ5VGFnUmVxdWVzdBot",
            "LnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNzLmZ1bmN0aW9ucy52MS5WZXJzaW9u",
            "IiSC0+STAh4SHC9mdW5jdGlvbnMvdjEvdmVyc2lvbnM6YnlUYWcStwEKDExp",
            "c3RWZXJzaW9ucxJCLnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNzLmZ1bmN0aW9u",
            "cy52MS5MaXN0RnVuY3Rpb25zVmVyc2lvbnNSZXF1ZXN0GkMueWFuZGV4LmNs",
            "b3VkLnNlcnZlcmxlc3MuZnVuY3Rpb25zLnYxLkxpc3RGdW5jdGlvbnNWZXJz",
            "aW9uc1Jlc3BvbnNlIh6C0+STAhgSFi9mdW5jdGlvbnMvdjEvdmVyc2lvbnMS",
            "zQEKBlNldFRhZxI7LnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNzLmZ1bmN0aW9u",
            "cy52MS5TZXRGdW5jdGlvblRhZ1JlcXVlc3QaIS55YW5kZXguY2xvdWQub3Bl",
            "cmF0aW9uLk9wZXJhdGlvbiJjgtPkkwI4IjMvZnVuY3Rpb25zL3YxL3ZlcnNp",
            "b25zL3tmdW5jdGlvbl92ZXJzaW9uX2lkfTpzZXRUYWc6ASqy0iohChZTZXRG",
            "dW5jdGlvblRhZ01ldGFkYXRhEgdWZXJzaW9uEtkBCglSZW1vdmVUYWcSPi55",
            "YW5kZXguY2xvdWQuc2VydmVybGVzcy5mdW5jdGlvbnMudjEuUmVtb3ZlRnVu",
            "Y3Rpb25UYWdSZXF1ZXN0GiEueWFuZGV4LmNsb3VkLm9wZXJhdGlvbi5PcGVy",
            "YXRpb24iaYLT5JMCOyI2L2Z1bmN0aW9ucy92MS92ZXJzaW9ucy97ZnVuY3Rp",
            "b25fdmVyc2lvbl9pZH06cmVtb3ZlVGFnOgEqstIqJAoZUmVtb3ZlRnVuY3Rp",
            "b25UYWdNZXRhZGF0YRIHVmVyc2lvbhLVAQoOTGlzdFRhZ0hpc3RvcnkSQy55",
            "YW5kZXguY2xvdWQuc2VydmVybGVzcy5mdW5jdGlvbnMudjEuTGlzdEZ1bmN0",
            "aW9uVGFnSGlzdG9yeVJlcXVlc3QaRC55YW5kZXguY2xvdWQuc2VydmVybGVz",
            "cy5mdW5jdGlvbnMudjEuTGlzdEZ1bmN0aW9uVGFnSGlzdG9yeVJlc3BvbnNl",
            "IjiC0+STAjISMC9mdW5jdGlvbnMvdjEvZnVuY3Rpb25zL3tmdW5jdGlvbl9p",
            "ZH06dGFnSGlzdG9yeRLFAQoNQ3JlYXRlVmVyc2lvbhJCLnlhbmRleC5jbG91",
            "ZC5zZXJ2ZXJsZXNzLmZ1bmN0aW9ucy52MS5DcmVhdGVGdW5jdGlvblZlcnNp",
            "b25SZXF1ZXN0GiEueWFuZGV4LmNsb3VkLm9wZXJhdGlvbi5PcGVyYXRpb24i",
            "TYLT5JMCGyIWL2Z1bmN0aW9ucy92MS92ZXJzaW9uczoBKrLSKigKHUNyZWF0",
            "ZUZ1bmN0aW9uVmVyc2lvbk1ldGFkYXRhEgdWZXJzaW9uEqUBCgxMaXN0UnVu",
            "dGltZXMSOS55YW5kZXguY2xvdWQuc2VydmVybGVzcy5mdW5jdGlvbnMudjEu",
            "TGlzdFJ1bnRpbWVzUmVxdWVzdBo6LnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNz",
            "LmZ1bmN0aW9ucy52MS5MaXN0UnVudGltZXNSZXNwb25zZSIegtPkkwIYEhYv",
            "ZnVuY3Rpb25zL3YxL3J1bnRpbWVzEtUBCg5MaXN0T3BlcmF0aW9ucxJDLnlh",
            "bmRleC5jbG91ZC5zZXJ2ZXJsZXNzLmZ1bmN0aW9ucy52MS5MaXN0RnVuY3Rp",
            "b25PcGVyYXRpb25zUmVxdWVzdBpELnlhbmRleC5jbG91ZC5zZXJ2ZXJsZXNz",
            "LmZ1bmN0aW9ucy52MS5MaXN0RnVuY3Rpb25PcGVyYXRpb25zUmVzcG9uc2Ui",
            "OILT5JMCMhIwL2Z1bmN0aW9ucy92MS9mdW5jdGlvbnMve2Z1bmN0aW9uX2lk",
            "fS9vcGVyYXRpb25zErcBChJMaXN0QWNjZXNzQmluZGluZ3MSLi55YW5kZXgu",
            "Y2xvdWQuYWNjZXNzLkxpc3RBY2Nlc3NCaW5kaW5nc1JlcXVlc3QaLy55YW5k",
            "ZXguY2xvdWQuYWNjZXNzLkxpc3RBY2Nlc3NCaW5kaW5nc1Jlc3BvbnNlIkCC",
            "0+STAjoSOC9mdW5jdGlvbnMvdjEvZnVuY3Rpb25zL3tyZXNvdXJjZV9pZH06",
            "bGlzdEFjY2Vzc0JpbmRpbmdzEuYBChFTZXRBY2Nlc3NCaW5kaW5ncxItLnlh",
            "bmRleC5jbG91ZC5hY2Nlc3MuU2V0QWNjZXNzQmluZGluZ3NSZXF1ZXN0GiEu",
            "eWFuZGV4LmNsb3VkLm9wZXJhdGlvbi5PcGVyYXRpb24if4LT5JMCPCI3L2Z1",
            "bmN0aW9ucy92MS9mdW5jdGlvbnMve3Jlc291cmNlX2lkfTpzZXRBY2Nlc3NC",
            "aW5kaW5nczoBKrLSKjkKIGFjY2Vzcy5TZXRBY2Nlc3NCaW5kaW5nc01ldGFk",
            "YXRhEhVnb29nbGUucHJvdG9idWYuRW1wdHkS8wEKFFVwZGF0ZUFjY2Vzc0Jp",
            "bmRpbmdzEjAueWFuZGV4LmNsb3VkLmFjY2Vzcy5VcGRhdGVBY2Nlc3NCaW5k",
            "aW5nc1JlcXVlc3QaIS55YW5kZXguY2xvdWQub3BlcmF0aW9uLk9wZXJhdGlv",
            "biKFAYLT5JMCPyI6L2Z1bmN0aW9ucy92MS9mdW5jdGlvbnMve3Jlc291cmNl",
            "X2lkfTp1cGRhdGVBY2Nlc3NCaW5kaW5nczoBKrLSKjwKI2FjY2Vzcy5VcGRh",
            "dGVBY2Nlc3NCaW5kaW5nc01ldGFkYXRhEhVnb29nbGUucHJvdG9idWYuRW1w",
            "dHlCfgooeWFuZGV4LmNsb3VkLmFwaS5zZXJ2ZXJsZXNzLmZ1bmN0aW9ucy52",
            "MVpSZ2l0aHViLmNvbS95YW5kZXgtY2xvdWQvZ28tZ2VucHJvdG8veWFuZGV4",
            "L2Nsb3VkL3NlcnZlcmxlc3MvZnVuY3Rpb25zL3YxO2Z1bmN0aW9uc2IGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Api.AnnotationsReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.FieldMaskReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Yandex.Cloud.Api.OperationReflection.Descriptor, global::Yandex.Cloud.Access.AccessReflection.Descriptor, global::Yandex.Cloud.Serverless.Functions.V1.FunctionReflection.Descriptor, global::Yandex.Cloud.Operation.OperationReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.GetFunctionRequest), global::Yandex.Cloud.Serverless.Functions.V1.GetFunctionRequest.Parser, new[]{ "FunctionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.GetFunctionVersionRequest), global::Yandex.Cloud.Serverless.Functions.V1.GetFunctionVersionRequest.Parser, new[]{ "FunctionVersionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.GetFunctionVersionByTagRequest), global::Yandex.Cloud.Serverless.Functions.V1.GetFunctionVersionByTagRequest.Parser, new[]{ "FunctionId", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionsRequest), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionsRequest.Parser, new[]{ "FolderId", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionsResponse), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionsResponse.Parser, new[]{ "Functions", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.CreateFunctionRequest), global::Yandex.Cloud.Serverless.Functions.V1.CreateFunctionRequest.Parser, new[]{ "FolderId", "Name", "Description", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.CreateFunctionMetadata), global::Yandex.Cloud.Serverless.Functions.V1.CreateFunctionMetadata.Parser, new[]{ "FunctionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.UpdateFunctionRequest), global::Yandex.Cloud.Serverless.Functions.V1.UpdateFunctionRequest.Parser, new[]{ "FunctionId", "UpdateMask", "Name", "Description", "Labels" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.UpdateFunctionMetadata), global::Yandex.Cloud.Serverless.Functions.V1.UpdateFunctionMetadata.Parser, new[]{ "FunctionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.DeleteFunctionRequest), global::Yandex.Cloud.Serverless.Functions.V1.DeleteFunctionRequest.Parser, new[]{ "FunctionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.DeleteFunctionMetadata), global::Yandex.Cloud.Serverless.Functions.V1.DeleteFunctionMetadata.Parser, new[]{ "FunctionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListRuntimesRequest), global::Yandex.Cloud.Serverless.Functions.V1.ListRuntimesRequest.Parser, null, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListRuntimesResponse), global::Yandex.Cloud.Serverless.Functions.V1.ListRuntimesResponse.Parser, new[]{ "Runtimes" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionsVersionsRequest), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionsVersionsRequest.Parser, new[]{ "FolderId", "FunctionId", "PageSize", "PageToken", "Filter" }, new[]{ "Id" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionsVersionsResponse), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionsVersionsResponse.Parser, new[]{ "Versions", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionOperationsRequest), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionOperationsRequest.Parser, new[]{ "FunctionId", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionOperationsResponse), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionOperationsResponse.Parser, new[]{ "Operations", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.CreateFunctionVersionRequest), global::Yandex.Cloud.Serverless.Functions.V1.CreateFunctionVersionRequest.Parser, new[]{ "FunctionId", "Runtime", "Description", "Entrypoint", "Resources", "ExecutionTimeout", "ServiceAccountId", "Package", "Content", "Environment", "Tag" }, new[]{ "PackageSource" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.CreateFunctionVersionMetadata), global::Yandex.Cloud.Serverless.Functions.V1.CreateFunctionVersionMetadata.Parser, new[]{ "FunctionVersionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.SetFunctionTagRequest), global::Yandex.Cloud.Serverless.Functions.V1.SetFunctionTagRequest.Parser, new[]{ "FunctionVersionId", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.RemoveFunctionTagRequest), global::Yandex.Cloud.Serverless.Functions.V1.RemoveFunctionTagRequest.Parser, new[]{ "FunctionVersionId", "Tag" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.SetFunctionTagMetadata), global::Yandex.Cloud.Serverless.Functions.V1.SetFunctionTagMetadata.Parser, new[]{ "FunctionVersionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.RemoveFunctionTagMetadata), global::Yandex.Cloud.Serverless.Functions.V1.RemoveFunctionTagMetadata.Parser, new[]{ "FunctionVersionId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryRequest), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryRequest.Parser, new[]{ "FunctionId", "Tag", "PageSize", "PageToken", "Filter" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Parser, new[]{ "FunctionTagHistoryRecord", "NextPageToken" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Types.FunctionTagHistoryRecord), global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Types.FunctionTagHistoryRecord.Parser, new[]{ "FunctionId", "FunctionVersionId", "Tag", "EffectiveFrom", "EffectiveTo" }, null, null, null, null)})
          }));
    }
    #endregion

  }
  #region Messages
  internal sealed partial class GetFunctionRequest : pb::IMessage<GetFunctionRequest> {
    private static readonly pb::MessageParser<GetFunctionRequest> _parser = new pb::MessageParser<GetFunctionRequest>(() => new GetFunctionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFunctionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionRequest(GetFunctionRequest other) : this() {
      functionId_ = other.functionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionRequest Clone() {
      return new GetFunctionRequest(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function to return.
    ///
    /// To get a function ID make a [FunctionService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFunctionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFunctionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFunctionRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetFunctionVersionRequest : pb::IMessage<GetFunctionVersionRequest> {
    private static readonly pb::MessageParser<GetFunctionVersionRequest> _parser = new pb::MessageParser<GetFunctionVersionRequest>(() => new GetFunctionVersionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFunctionVersionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionVersionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionVersionRequest(GetFunctionVersionRequest other) : this() {
      functionVersionId_ = other.functionVersionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionVersionRequest Clone() {
      return new GetFunctionVersionRequest(this);
    }

    /// <summary>Field number for the "function_version_id" field.</summary>
    public const int FunctionVersionIdFieldNumber = 1;
    private string functionVersionId_ = "";
    /// <summary>
    /// ID of the version to return.
    ///
    /// To get a version ID make a [FunctionService.ListVersions] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionVersionId {
      get { return functionVersionId_; }
      set {
        functionVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFunctionVersionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFunctionVersionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionVersionId != other.FunctionVersionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionVersionId.Length != 0) hash ^= FunctionVersionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionVersionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionVersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionVersionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFunctionVersionRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionVersionId.Length != 0) {
        FunctionVersionId = other.FunctionVersionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionVersionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class GetFunctionVersionByTagRequest : pb::IMessage<GetFunctionVersionByTagRequest> {
    private static readonly pb::MessageParser<GetFunctionVersionByTagRequest> _parser = new pb::MessageParser<GetFunctionVersionByTagRequest>(() => new GetFunctionVersionByTagRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<GetFunctionVersionByTagRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionVersionByTagRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionVersionByTagRequest(GetFunctionVersionByTagRequest other) : this() {
      functionId_ = other.functionId_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public GetFunctionVersionByTagRequest Clone() {
      return new GetFunctionVersionByTagRequest(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function whose versions should be listed.
    ///
    /// To get a function ID use a [FunctionService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private string tag_ = "";
    /// <summary>
    /// Version tag.
    ///
    /// To get the history of version tags make a [FunctionService.ListTagHistory] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as GetFunctionVersionByTagRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(GetFunctionVersionByTagRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(GetFunctionVersionByTagRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
          case 18: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFunctionsRequest : pb::IMessage<ListFunctionsRequest> {
    private static readonly pb::MessageParser<ListFunctionsRequest> _parser = new pb::MessageParser<ListFunctionsRequest>(() => new ListFunctionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFunctionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsRequest(ListFunctionsRequest other) : this() {
      folderId_ = other.folderId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsRequest Clone() {
      return new ListFunctionsRequest(this);
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 1;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder to list functions in.
    ///
    /// To get a folder ID make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available
    /// results is larger than `pageSize`, the service returns a [ListFunctionsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    ///
    /// Default value: 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set `pageToken` to the
    /// [ListFunctionsResponse.next_page_token] returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// A filter expression that filters functions listed in the response.
    ///
    /// The expression must specify:
    /// 1. The field name. Currently filtering can only be applied to the [Function.name] field.
    /// 2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN`
    /// for lists of values.
    /// 3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.
    /// Example of a filter: `name=my-function`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFunctionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFunctionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FolderId != other.FolderId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FolderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FolderId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFunctionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FolderId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFunctionsResponse : pb::IMessage<ListFunctionsResponse> {
    private static readonly pb::MessageParser<ListFunctionsResponse> _parser = new pb::MessageParser<ListFunctionsResponse>(() => new ListFunctionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFunctionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsResponse(ListFunctionsResponse other) : this() {
      functions_ = other.functions_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsResponse Clone() {
      return new ListFunctionsResponse(this);
    }

    /// <summary>Field number for the "functions" field.</summary>
    public const int FunctionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Serverless.Functions.V1.Function> _repeated_functions_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Serverless.Functions.V1.Function.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.Function> functions_ = new pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.Function>();
    /// <summary>
    /// List of functions in the specified folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.Function> Functions {
      get { return functions_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Token for getting the next page of the list. If the number of results is greater than
    /// the specified [ListFunctionsRequest.page_size], use `nextPageToken` as the value
    /// for the [ListFunctionsRequest.page_token] parameter in the next list request.
    ///
    /// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFunctionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFunctionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!functions_.Equals(other.functions_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= functions_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      functions_.WriteTo(output, _repeated_functions_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += functions_.CalculateSize(_repeated_functions_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFunctionsResponse other) {
      if (other == null) {
        return;
      }
      functions_.Add(other.functions_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            functions_.AddEntriesFrom(input, _repeated_functions_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateFunctionRequest : pb::IMessage<CreateFunctionRequest> {
    private static readonly pb::MessageParser<CreateFunctionRequest> _parser = new pb::MessageParser<CreateFunctionRequest>(() => new CreateFunctionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFunctionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionRequest(CreateFunctionRequest other) : this() {
      folderId_ = other.folderId_;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionRequest Clone() {
      return new CreateFunctionRequest(this);
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 1;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder to create a function in.
    ///
    /// To get a folder ID make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 2;
    private string name_ = "";
    /// <summary>
    /// Name of the function.
    /// The name must be unique within the folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of the function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 4;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 34);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels as `key:value` pairs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFunctionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFunctionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FolderId != other.FolderId) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FolderId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FolderId);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFunctionRequest other) {
      if (other == null) {
        return;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FolderId = input.ReadString();
            break;
          }
          case 18: {
            Name = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateFunctionMetadata : pb::IMessage<CreateFunctionMetadata> {
    private static readonly pb::MessageParser<CreateFunctionMetadata> _parser = new pb::MessageParser<CreateFunctionMetadata>(() => new CreateFunctionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFunctionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionMetadata(CreateFunctionMetadata other) : this() {
      functionId_ = other.functionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionMetadata Clone() {
      return new CreateFunctionMetadata(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function that is being created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFunctionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFunctionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFunctionMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateFunctionRequest : pb::IMessage<UpdateFunctionRequest> {
    private static readonly pb::MessageParser<UpdateFunctionRequest> _parser = new pb::MessageParser<UpdateFunctionRequest>(() => new UpdateFunctionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFunctionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFunctionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFunctionRequest(UpdateFunctionRequest other) : this() {
      functionId_ = other.functionId_;
      updateMask_ = other.updateMask_ != null ? other.updateMask_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFunctionRequest Clone() {
      return new UpdateFunctionRequest(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function to update.
    ///
    /// To get a function ID make a [FunctionService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "update_mask" field.</summary>
    public const int UpdateMaskFieldNumber = 2;
    private global::Google.Protobuf.WellKnownTypes.FieldMask updateMask_;
    /// <summary>
    /// Field mask that specifies which attributes of the function should be updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.FieldMask UpdateMask {
      get { return updateMask_; }
      set {
        updateMask_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 3;
    private string name_ = "";
    /// <summary>
    /// New name for the function.
    /// The name must be unique within the folder.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 4;
    private string description_ = "";
    /// <summary>
    /// New description for the function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 5;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 42);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Function labels as `key:value` pairs.
    ///
    /// Existing set of labels is completely replaced by the provided set, so if you just want
    /// to add or remove a label, request the current set of labels with a [FunctionService.Get] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFunctionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFunctionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      if (!object.Equals(UpdateMask, other.UpdateMask)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (updateMask_ != null) hash ^= UpdateMask.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (updateMask_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(UpdateMask);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (updateMask_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(UpdateMask);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFunctionRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      if (other.updateMask_ != null) {
        if (updateMask_ == null) {
          UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
        }
        UpdateMask.MergeFrom(other.UpdateMask);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
          case 18: {
            if (updateMask_ == null) {
              UpdateMask = new global::Google.Protobuf.WellKnownTypes.FieldMask();
            }
            input.ReadMessage(UpdateMask);
            break;
          }
          case 26: {
            Name = input.ReadString();
            break;
          }
          case 34: {
            Description = input.ReadString();
            break;
          }
          case 42: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateFunctionMetadata : pb::IMessage<UpdateFunctionMetadata> {
    private static readonly pb::MessageParser<UpdateFunctionMetadata> _parser = new pb::MessageParser<UpdateFunctionMetadata>(() => new UpdateFunctionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateFunctionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFunctionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFunctionMetadata(UpdateFunctionMetadata other) : this() {
      functionId_ = other.functionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateFunctionMetadata Clone() {
      return new UpdateFunctionMetadata(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function that is being updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateFunctionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateFunctionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateFunctionMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteFunctionRequest : pb::IMessage<DeleteFunctionRequest> {
    private static readonly pb::MessageParser<DeleteFunctionRequest> _parser = new pb::MessageParser<DeleteFunctionRequest>(() => new DeleteFunctionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFunctionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFunctionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFunctionRequest(DeleteFunctionRequest other) : this() {
      functionId_ = other.functionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFunctionRequest Clone() {
      return new DeleteFunctionRequest(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function to delete.
    /// To get a function ID make a [FunctionService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFunctionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFunctionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFunctionRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class DeleteFunctionMetadata : pb::IMessage<DeleteFunctionMetadata> {
    private static readonly pb::MessageParser<DeleteFunctionMetadata> _parser = new pb::MessageParser<DeleteFunctionMetadata>(() => new DeleteFunctionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DeleteFunctionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFunctionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFunctionMetadata(DeleteFunctionMetadata other) : this() {
      functionId_ = other.functionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DeleteFunctionMetadata Clone() {
      return new DeleteFunctionMetadata(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function that is being deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DeleteFunctionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DeleteFunctionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DeleteFunctionMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListRuntimesRequest : pb::IMessage<ListRuntimesRequest> {
    private static readonly pb::MessageParser<ListRuntimesRequest> _parser = new pb::MessageParser<ListRuntimesRequest>(() => new ListRuntimesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRuntimesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRuntimesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRuntimesRequest(ListRuntimesRequest other) : this() {
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRuntimesRequest Clone() {
      return new ListRuntimesRequest(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRuntimesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRuntimesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRuntimesRequest other) {
      if (other == null) {
        return;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
        }
      }
    }

  }

  internal sealed partial class ListRuntimesResponse : pb::IMessage<ListRuntimesResponse> {
    private static readonly pb::MessageParser<ListRuntimesResponse> _parser = new pb::MessageParser<ListRuntimesResponse>(() => new ListRuntimesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListRuntimesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRuntimesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRuntimesResponse(ListRuntimesResponse other) : this() {
      runtimes_ = other.runtimes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListRuntimesResponse Clone() {
      return new ListRuntimesResponse(this);
    }

    /// <summary>Field number for the "runtimes" field.</summary>
    public const int RuntimesFieldNumber = 1;
    private static readonly pb::FieldCodec<string> _repeated_runtimes_codec
        = pb::FieldCodec.ForString(10);
    private readonly pbc::RepeatedField<string> runtimes_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Runtime environments available for the specified function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Runtimes {
      get { return runtimes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListRuntimesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListRuntimesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!runtimes_.Equals(other.runtimes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= runtimes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      runtimes_.WriteTo(output, _repeated_runtimes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += runtimes_.CalculateSize(_repeated_runtimes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListRuntimesResponse other) {
      if (other == null) {
        return;
      }
      runtimes_.Add(other.runtimes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            runtimes_.AddEntriesFrom(input, _repeated_runtimes_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFunctionsVersionsRequest : pb::IMessage<ListFunctionsVersionsRequest> {
    private static readonly pb::MessageParser<ListFunctionsVersionsRequest> _parser = new pb::MessageParser<ListFunctionsVersionsRequest>(() => new ListFunctionsVersionsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFunctionsVersionsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsVersionsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsVersionsRequest(ListFunctionsVersionsRequest other) : this() {
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      switch (other.IdCase) {
        case IdOneofCase.FolderId:
          FolderId = other.FolderId;
          break;
        case IdOneofCase.FunctionId:
          FunctionId = other.FunctionId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsVersionsRequest Clone() {
      return new ListFunctionsVersionsRequest(this);
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 1;
    /// <summary>
    /// ID of the folder to list function versions for.
    /// To get a folder ID make a [yandex.cloud.resourcemanager.v1.FolderService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return idCase_ == IdOneofCase.FolderId ? (string) id_ : ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        idCase_ = IdOneofCase.FolderId;
      }
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 2;
    /// <summary>
    /// ID of the function to list versions for.
    /// To get a function ID use a [FunctionService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return idCase_ == IdOneofCase.FunctionId ? (string) id_ : ""; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        idCase_ = IdOneofCase.FunctionId;
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page to return. If the number of available results
    /// is larger than `pageSize`, the service returns a [ListFunctionsVersionsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    ///
    /// Default value: 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set `pageToken` to the
    /// [ListFunctionsVersionsResponse.next_page_token] returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private string filter_ = "";
    /// <summary>
    /// A filter expression that filters resources listed in the response.
    ///
    /// The expression must specify:
    /// 1. The field name. Currently filtering can only be applied to the [Function.name] field.
    /// 2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN`
    /// for lists of values.
    /// 3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.
    /// Example of a filter: `name=my-function`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    private object id_;
    /// <summary>Enum of possible cases for the "id" oneof.</summary>
    public enum IdOneofCase {
      None = 0,
      FolderId = 1,
      FunctionId = 2,
    }
    private IdOneofCase idCase_ = IdOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public IdOneofCase IdCase {
      get { return idCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearId() {
      idCase_ = IdOneofCase.None;
      id_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFunctionsVersionsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFunctionsVersionsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FolderId != other.FolderId) return false;
      if (FunctionId != other.FunctionId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      if (IdCase != other.IdCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (idCase_ == IdOneofCase.FolderId) hash ^= FolderId.GetHashCode();
      if (idCase_ == IdOneofCase.FunctionId) hash ^= FunctionId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      hash ^= (int) idCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (idCase_ == IdOneofCase.FolderId) {
        output.WriteRawTag(10);
        output.WriteString(FolderId);
      }
      if (idCase_ == IdOneofCase.FunctionId) {
        output.WriteRawTag(18);
        output.WriteString(FunctionId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (idCase_ == IdOneofCase.FolderId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (idCase_ == IdOneofCase.FunctionId) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFunctionsVersionsRequest other) {
      if (other == null) {
        return;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      switch (other.IdCase) {
        case IdOneofCase.FolderId:
          FolderId = other.FolderId;
          break;
        case IdOneofCase.FunctionId:
          FunctionId = other.FunctionId;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FolderId = input.ReadString();
            break;
          }
          case 18: {
            FunctionId = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt64();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
          case 42: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFunctionsVersionsResponse : pb::IMessage<ListFunctionsVersionsResponse> {
    private static readonly pb::MessageParser<ListFunctionsVersionsResponse> _parser = new pb::MessageParser<ListFunctionsVersionsResponse>(() => new ListFunctionsVersionsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFunctionsVersionsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsVersionsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsVersionsResponse(ListFunctionsVersionsResponse other) : this() {
      versions_ = other.versions_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionsVersionsResponse Clone() {
      return new ListFunctionsVersionsResponse(this);
    }

    /// <summary>Field number for the "versions" field.</summary>
    public const int VersionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Serverless.Functions.V1.Version> _repeated_versions_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Serverless.Functions.V1.Version.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.Version> versions_ = new pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.Version>();
    /// <summary>
    /// List of versions for the specified folder or function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.Version> Versions {
      get { return versions_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Token for getting the next page of the list. If the number of results is greater than
    /// the specified [ListFunctionsVersionsRequest.page_size], use `nextPageToken` as the value
    /// for the [ListFunctionsVersionsRequest.page_token] parameter in the next list request.
    ///
    /// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFunctionsVersionsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFunctionsVersionsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!versions_.Equals(other.versions_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= versions_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      versions_.WriteTo(output, _repeated_versions_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += versions_.CalculateSize(_repeated_versions_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFunctionsVersionsResponse other) {
      if (other == null) {
        return;
      }
      versions_.Add(other.versions_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            versions_.AddEntriesFrom(input, _repeated_versions_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFunctionOperationsRequest : pb::IMessage<ListFunctionOperationsRequest> {
    private static readonly pb::MessageParser<ListFunctionOperationsRequest> _parser = new pb::MessageParser<ListFunctionOperationsRequest>(() => new ListFunctionOperationsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFunctionOperationsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionOperationsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionOperationsRequest(ListFunctionOperationsRequest other) : this() {
      functionId_ = other.functionId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionOperationsRequest Clone() {
      return new ListFunctionOperationsRequest(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function to list operations for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page that should be returned. If the number of available
    /// results is larger than `pageSize`, the service returns a [ListFunctionOperationsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    ///
    /// Default value: 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set `pageToken` to the
    /// [ListFunctionOperationsResponse.next_page_token] returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 4;
    private string filter_ = "";
    /// <summary>
    /// A filter expression that filters resources listed in the response.
    ///
    /// The expression must specify:
    /// 1. The field name. Currently filtering can be applied to the [operation.Operation.done], [operation.Operation.created_by] field.
    /// 2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN`
    /// for lists of values.
    /// 3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.
    /// Examples of a filter: `done=false`, `created_by='John.Doe'`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFunctionOperationsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFunctionOperationsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFunctionOperationsRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
          case 34: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFunctionOperationsResponse : pb::IMessage<ListFunctionOperationsResponse> {
    private static readonly pb::MessageParser<ListFunctionOperationsResponse> _parser = new pb::MessageParser<ListFunctionOperationsResponse>(() => new ListFunctionOperationsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFunctionOperationsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionOperationsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionOperationsResponse(ListFunctionOperationsResponse other) : this() {
      operations_ = other.operations_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionOperationsResponse Clone() {
      return new ListFunctionOperationsResponse(this);
    }

    /// <summary>Field number for the "operations" field.</summary>
    public const int OperationsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Operation.Operation> _repeated_operations_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Operation.Operation.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation> operations_ = new pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation>();
    /// <summary>
    /// List of operations for the specified function.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Operation.Operation> Operations {
      get { return operations_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Token for getting the next page of the list. If the number of results is greater than
    /// the specified [ListFunctionOperationsRequest.page_size], use `nextPageToken` as the value
    /// for the [ListFunctionOperationsRequest.page_token] parameter in the next list request.
    ///
    /// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFunctionOperationsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFunctionOperationsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!operations_.Equals(other.operations_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= operations_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      operations_.WriteTo(output, _repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += operations_.CalculateSize(_repeated_operations_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFunctionOperationsResponse other) {
      if (other == null) {
        return;
      }
      operations_.Add(other.operations_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            operations_.AddEntriesFrom(input, _repeated_operations_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateFunctionVersionRequest : pb::IMessage<CreateFunctionVersionRequest> {
    private static readonly pb::MessageParser<CreateFunctionVersionRequest> _parser = new pb::MessageParser<CreateFunctionVersionRequest>(() => new CreateFunctionVersionRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFunctionVersionRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionVersionRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionVersionRequest(CreateFunctionVersionRequest other) : this() {
      functionId_ = other.functionId_;
      runtime_ = other.runtime_;
      description_ = other.description_;
      entrypoint_ = other.entrypoint_;
      resources_ = other.resources_ != null ? other.resources_.Clone() : null;
      executionTimeout_ = other.executionTimeout_ != null ? other.executionTimeout_.Clone() : null;
      serviceAccountId_ = other.serviceAccountId_;
      environment_ = other.environment_.Clone();
      tag_ = other.tag_.Clone();
      switch (other.PackageSourceCase) {
        case PackageSourceOneofCase.Package:
          Package = other.Package.Clone();
          break;
        case PackageSourceOneofCase.Content:
          Content = other.Content;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionVersionRequest Clone() {
      return new CreateFunctionVersionRequest(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function to create a version for.
    ///
    /// To get a function ID, make a [FunctionService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "runtime" field.</summary>
    public const int RuntimeFieldNumber = 2;
    private string runtime_ = "";
    /// <summary>
    /// Runtime environment for the version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Runtime {
      get { return runtime_; }
      set {
        runtime_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 3;
    private string description_ = "";
    /// <summary>
    /// Description of the version
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "entrypoint" field.</summary>
    public const int EntrypointFieldNumber = 4;
    private string entrypoint_ = "";
    /// <summary>
    /// Entrypoint of the version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Entrypoint {
      get { return entrypoint_; }
      set {
        entrypoint_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 5;
    private global::Yandex.Cloud.Serverless.Functions.V1.Resources resources_;
    /// <summary>
    /// Resources allocated to the version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Serverless.Functions.V1.Resources Resources {
      get { return resources_; }
      set {
        resources_ = value;
      }
    }

    /// <summary>Field number for the "execution_timeout" field.</summary>
    public const int ExecutionTimeoutFieldNumber = 6;
    private global::Google.Protobuf.WellKnownTypes.Duration executionTimeout_;
    /// <summary>
    /// Timeout for the execution of the version.
    ///
    /// If the timeout is exceeded, Cloud Functions responds with a 504 HTTP code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration ExecutionTimeout {
      get { return executionTimeout_; }
      set {
        executionTimeout_ = value;
      }
    }

    /// <summary>Field number for the "service_account_id" field.</summary>
    public const int ServiceAccountIdFieldNumber = 7;
    private string serviceAccountId_ = "";
    /// <summary>
    /// ID of the service account to associate with the version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceAccountId {
      get { return serviceAccountId_; }
      set {
        serviceAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "package" field.</summary>
    public const int PackageFieldNumber = 9;
    /// <summary>
    /// Functions deployment package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Serverless.Functions.V1.Package Package {
      get { return packageSourceCase_ == PackageSourceOneofCase.Package ? (global::Yandex.Cloud.Serverless.Functions.V1.Package) packageSource_ : null; }
      set {
        packageSource_ = value;
        packageSourceCase_ = value == null ? PackageSourceOneofCase.None : PackageSourceOneofCase.Package;
      }
    }

    /// <summary>Field number for the "content" field.</summary>
    public const int ContentFieldNumber = 10;
    /// <summary>
    /// Content of the deployment package.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Content {
      get { return packageSourceCase_ == PackageSourceOneofCase.Content ? (pb::ByteString) packageSource_ : pb::ByteString.Empty; }
      set {
        packageSource_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
        packageSourceCase_ = PackageSourceOneofCase.Content;
      }
    }

    /// <summary>Field number for the "environment" field.</summary>
    public const int EnvironmentFieldNumber = 12;
    private static readonly pbc::MapField<string, string>.Codec _map_environment_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10, ""), pb::FieldCodec.ForString(18, ""), 98);
    private readonly pbc::MapField<string, string> environment_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Environment settings for the version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Environment {
      get { return environment_; }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 13;
    private static readonly pb::FieldCodec<string> _repeated_tag_codec
        = pb::FieldCodec.ForString(106);
    private readonly pbc::RepeatedField<string> tag_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Function version tags. For details, see [Version tag](/docs/functions/concepts/function#tag).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> Tag {
      get { return tag_; }
    }

    private object packageSource_;
    /// <summary>Enum of possible cases for the "package_source" oneof.</summary>
    public enum PackageSourceOneofCase {
      None = 0,
      Package = 9,
      Content = 10,
    }
    private PackageSourceOneofCase packageSourceCase_ = PackageSourceOneofCase.None;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PackageSourceOneofCase PackageSourceCase {
      get { return packageSourceCase_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void ClearPackageSource() {
      packageSourceCase_ = PackageSourceOneofCase.None;
      packageSource_ = null;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFunctionVersionRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFunctionVersionRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      if (Runtime != other.Runtime) return false;
      if (Description != other.Description) return false;
      if (Entrypoint != other.Entrypoint) return false;
      if (!object.Equals(Resources, other.Resources)) return false;
      if (!object.Equals(ExecutionTimeout, other.ExecutionTimeout)) return false;
      if (ServiceAccountId != other.ServiceAccountId) return false;
      if (!object.Equals(Package, other.Package)) return false;
      if (Content != other.Content) return false;
      if (!Environment.Equals(other.Environment)) return false;
      if(!tag_.Equals(other.tag_)) return false;
      if (PackageSourceCase != other.PackageSourceCase) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (Runtime.Length != 0) hash ^= Runtime.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Entrypoint.Length != 0) hash ^= Entrypoint.GetHashCode();
      if (resources_ != null) hash ^= Resources.GetHashCode();
      if (executionTimeout_ != null) hash ^= ExecutionTimeout.GetHashCode();
      if (ServiceAccountId.Length != 0) hash ^= ServiceAccountId.GetHashCode();
      if (packageSourceCase_ == PackageSourceOneofCase.Package) hash ^= Package.GetHashCode();
      if (packageSourceCase_ == PackageSourceOneofCase.Content) hash ^= Content.GetHashCode();
      hash ^= Environment.GetHashCode();
      hash ^= tag_.GetHashCode();
      hash ^= (int) packageSourceCase_;
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (Runtime.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Runtime);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Description);
      }
      if (Entrypoint.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Entrypoint);
      }
      if (resources_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(Resources);
      }
      if (executionTimeout_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ExecutionTimeout);
      }
      if (ServiceAccountId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ServiceAccountId);
      }
      if (packageSourceCase_ == PackageSourceOneofCase.Package) {
        output.WriteRawTag(74);
        output.WriteMessage(Package);
      }
      if (packageSourceCase_ == PackageSourceOneofCase.Content) {
        output.WriteRawTag(82);
        output.WriteBytes(Content);
      }
      environment_.WriteTo(output, _map_environment_codec);
      tag_.WriteTo(output, _repeated_tag_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (Runtime.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Runtime);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Entrypoint.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Entrypoint);
      }
      if (resources_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resources);
      }
      if (executionTimeout_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ExecutionTimeout);
      }
      if (ServiceAccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccountId);
      }
      if (packageSourceCase_ == PackageSourceOneofCase.Package) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Package);
      }
      if (packageSourceCase_ == PackageSourceOneofCase.Content) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Content);
      }
      size += environment_.CalculateSize(_map_environment_codec);
      size += tag_.CalculateSize(_repeated_tag_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFunctionVersionRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      if (other.Runtime.Length != 0) {
        Runtime = other.Runtime;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Entrypoint.Length != 0) {
        Entrypoint = other.Entrypoint;
      }
      if (other.resources_ != null) {
        if (resources_ == null) {
          Resources = new global::Yandex.Cloud.Serverless.Functions.V1.Resources();
        }
        Resources.MergeFrom(other.Resources);
      }
      if (other.executionTimeout_ != null) {
        if (executionTimeout_ == null) {
          ExecutionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        ExecutionTimeout.MergeFrom(other.ExecutionTimeout);
      }
      if (other.ServiceAccountId.Length != 0) {
        ServiceAccountId = other.ServiceAccountId;
      }
      environment_.Add(other.environment_);
      tag_.Add(other.tag_);
      switch (other.PackageSourceCase) {
        case PackageSourceOneofCase.Package:
          if (Package == null) {
            Package = new global::Yandex.Cloud.Serverless.Functions.V1.Package();
          }
          Package.MergeFrom(other.Package);
          break;
        case PackageSourceOneofCase.Content:
          Content = other.Content;
          break;
      }

      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
          case 18: {
            Runtime = input.ReadString();
            break;
          }
          case 26: {
            Description = input.ReadString();
            break;
          }
          case 34: {
            Entrypoint = input.ReadString();
            break;
          }
          case 42: {
            if (resources_ == null) {
              Resources = new global::Yandex.Cloud.Serverless.Functions.V1.Resources();
            }
            input.ReadMessage(Resources);
            break;
          }
          case 50: {
            if (executionTimeout_ == null) {
              ExecutionTimeout = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(ExecutionTimeout);
            break;
          }
          case 58: {
            ServiceAccountId = input.ReadString();
            break;
          }
          case 74: {
            global::Yandex.Cloud.Serverless.Functions.V1.Package subBuilder = new global::Yandex.Cloud.Serverless.Functions.V1.Package();
            if (packageSourceCase_ == PackageSourceOneofCase.Package) {
              subBuilder.MergeFrom(Package);
            }
            input.ReadMessage(subBuilder);
            Package = subBuilder;
            break;
          }
          case 82: {
            Content = input.ReadBytes();
            break;
          }
          case 98: {
            environment_.AddEntriesFrom(input, _map_environment_codec);
            break;
          }
          case 106: {
            tag_.AddEntriesFrom(input, _repeated_tag_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class CreateFunctionVersionMetadata : pb::IMessage<CreateFunctionVersionMetadata> {
    private static readonly pb::MessageParser<CreateFunctionVersionMetadata> _parser = new pb::MessageParser<CreateFunctionVersionMetadata>(() => new CreateFunctionVersionMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<CreateFunctionVersionMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionVersionMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionVersionMetadata(CreateFunctionVersionMetadata other) : this() {
      functionVersionId_ = other.functionVersionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public CreateFunctionVersionMetadata Clone() {
      return new CreateFunctionVersionMetadata(this);
    }

    /// <summary>Field number for the "function_version_id" field.</summary>
    public const int FunctionVersionIdFieldNumber = 1;
    private string functionVersionId_ = "";
    /// <summary>
    /// ID of the version that is being created.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionVersionId {
      get { return functionVersionId_; }
      set {
        functionVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as CreateFunctionVersionMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(CreateFunctionVersionMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionVersionId != other.FunctionVersionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionVersionId.Length != 0) hash ^= FunctionVersionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionVersionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionVersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionVersionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(CreateFunctionVersionMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FunctionVersionId.Length != 0) {
        FunctionVersionId = other.FunctionVersionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionVersionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SetFunctionTagRequest : pb::IMessage<SetFunctionTagRequest> {
    private static readonly pb::MessageParser<SetFunctionTagRequest> _parser = new pb::MessageParser<SetFunctionTagRequest>(() => new SetFunctionTagRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetFunctionTagRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFunctionTagRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFunctionTagRequest(SetFunctionTagRequest other) : this() {
      functionVersionId_ = other.functionVersionId_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFunctionTagRequest Clone() {
      return new SetFunctionTagRequest(this);
    }

    /// <summary>Field number for the "function_version_id" field.</summary>
    public const int FunctionVersionIdFieldNumber = 1;
    private string functionVersionId_ = "";
    /// <summary>
    /// ID of the version to set the tag for.
    ///
    /// To get a version ID make a [FunctionService.ListVersions] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionVersionId {
      get { return functionVersionId_; }
      set {
        functionVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private string tag_ = "";
    /// <summary>
    /// Tag to set for the version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetFunctionTagRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetFunctionTagRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionVersionId != other.FunctionVersionId) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionVersionId.Length != 0) hash ^= FunctionVersionId.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionVersionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionVersionId);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionVersionId);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetFunctionTagRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionVersionId.Length != 0) {
        FunctionVersionId = other.FunctionVersionId;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionVersionId = input.ReadString();
            break;
          }
          case 18: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RemoveFunctionTagRequest : pb::IMessage<RemoveFunctionTagRequest> {
    private static readonly pb::MessageParser<RemoveFunctionTagRequest> _parser = new pb::MessageParser<RemoveFunctionTagRequest>(() => new RemoveFunctionTagRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFunctionTagRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFunctionTagRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFunctionTagRequest(RemoveFunctionTagRequest other) : this() {
      functionVersionId_ = other.functionVersionId_;
      tag_ = other.tag_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFunctionTagRequest Clone() {
      return new RemoveFunctionTagRequest(this);
    }

    /// <summary>Field number for the "function_version_id" field.</summary>
    public const int FunctionVersionIdFieldNumber = 1;
    private string functionVersionId_ = "";
    /// <summary>
    /// ID of the version to remove a tag from.
    ///
    /// To get the a version ID make a [FunctionService.ListVersions] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionVersionId {
      get { return functionVersionId_; }
      set {
        functionVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private string tag_ = "";
    /// <summary>
    /// Tag to remove from the specified version.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFunctionTagRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFunctionTagRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionVersionId != other.FunctionVersionId) return false;
      if (Tag != other.Tag) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionVersionId.Length != 0) hash ^= FunctionVersionId.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionVersionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionVersionId);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tag);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionVersionId);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFunctionTagRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionVersionId.Length != 0) {
        FunctionVersionId = other.FunctionVersionId;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionVersionId = input.ReadString();
            break;
          }
          case 18: {
            Tag = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SetFunctionTagMetadata : pb::IMessage<SetFunctionTagMetadata> {
    private static readonly pb::MessageParser<SetFunctionTagMetadata> _parser = new pb::MessageParser<SetFunctionTagMetadata>(() => new SetFunctionTagMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetFunctionTagMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFunctionTagMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFunctionTagMetadata(SetFunctionTagMetadata other) : this() {
      functionVersionId_ = other.functionVersionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetFunctionTagMetadata Clone() {
      return new SetFunctionTagMetadata(this);
    }

    /// <summary>Field number for the "function_version_id" field.</summary>
    public const int FunctionVersionIdFieldNumber = 1;
    private string functionVersionId_ = "";
    /// <summary>
    /// ID of the function versions that is being tagged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionVersionId {
      get { return functionVersionId_; }
      set {
        functionVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetFunctionTagMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetFunctionTagMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionVersionId != other.FunctionVersionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionVersionId.Length != 0) hash ^= FunctionVersionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionVersionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionVersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionVersionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetFunctionTagMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FunctionVersionId.Length != 0) {
        FunctionVersionId = other.FunctionVersionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionVersionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class RemoveFunctionTagMetadata : pb::IMessage<RemoveFunctionTagMetadata> {
    private static readonly pb::MessageParser<RemoveFunctionTagMetadata> _parser = new pb::MessageParser<RemoveFunctionTagMetadata>(() => new RemoveFunctionTagMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<RemoveFunctionTagMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFunctionTagMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFunctionTagMetadata(RemoveFunctionTagMetadata other) : this() {
      functionVersionId_ = other.functionVersionId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public RemoveFunctionTagMetadata Clone() {
      return new RemoveFunctionTagMetadata(this);
    }

    /// <summary>Field number for the "function_version_id" field.</summary>
    public const int FunctionVersionIdFieldNumber = 1;
    private string functionVersionId_ = "";
    /// <summary>
    /// ID of the function versions that is being untagged.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionVersionId {
      get { return functionVersionId_; }
      set {
        functionVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as RemoveFunctionTagMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(RemoveFunctionTagMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionVersionId != other.FunctionVersionId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionVersionId.Length != 0) hash ^= FunctionVersionId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionVersionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionVersionId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionVersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionVersionId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(RemoveFunctionTagMetadata other) {
      if (other == null) {
        return;
      }
      if (other.FunctionVersionId.Length != 0) {
        FunctionVersionId = other.FunctionVersionId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionVersionId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFunctionTagHistoryRequest : pb::IMessage<ListFunctionTagHistoryRequest> {
    private static readonly pb::MessageParser<ListFunctionTagHistoryRequest> _parser = new pb::MessageParser<ListFunctionTagHistoryRequest>(() => new ListFunctionTagHistoryRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFunctionTagHistoryRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionTagHistoryRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionTagHistoryRequest(ListFunctionTagHistoryRequest other) : this() {
      functionId_ = other.functionId_;
      tag_ = other.tag_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      filter_ = other.filter_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionTagHistoryRequest Clone() {
      return new ListFunctionTagHistoryRequest(this);
    }

    /// <summary>Field number for the "function_id" field.</summary>
    public const int FunctionIdFieldNumber = 1;
    private string functionId_ = "";
    /// <summary>
    /// ID of the function to retrieve tag history for.
    ///
    /// To get a function ID, make a [FunctionService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FunctionId {
      get { return functionId_; }
      set {
        functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "tag" field.</summary>
    public const int TagFieldNumber = 2;
    private string tag_ = "";
    /// <summary>
    /// Specific tag that history should be limited to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Tag {
      get { return tag_; }
      set {
        tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 3;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page that should be returned. If the number of available
    /// results is larger than `pageSize`, the service returns a [ListFunctionOperationsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// Default value: 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 4;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. To get the next page of results, set `pageToken` to the
    /// [ListFunctionOperationsResponse.next_page_token] returned by a previous list request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "filter" field.</summary>
    public const int FilterFieldNumber = 5;
    private string filter_ = "";
    /// <summary>
    /// A filter expression that filters resources listed in the response.
    ///
    /// The expression must specify:
    /// 1. The field name. Currently filtering can only be applied to the [Function.name] field.
    /// 2. A conditional operator. Can be either `=` or `!=` for single values, `IN` or `NOT IN`
    /// for lists of values.
    /// 3. The value. Must be 3-63 characters long and match the regular expression `^[a-z][-a-z0-9]{1,61}[a-z0-9]$`.
    /// For example, `name=my-function`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Filter {
      get { return filter_; }
      set {
        filter_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFunctionTagHistoryRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFunctionTagHistoryRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (FunctionId != other.FunctionId) return false;
      if (Tag != other.Tag) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      if (Filter != other.Filter) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
      if (Tag.Length != 0) hash ^= Tag.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (Filter.Length != 0) hash ^= Filter.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (FunctionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(FunctionId);
      }
      if (Tag.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Tag);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(PageToken);
      }
      if (Filter.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Filter);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (FunctionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
      }
      if (Tag.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (Filter.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Filter);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFunctionTagHistoryRequest other) {
      if (other == null) {
        return;
      }
      if (other.FunctionId.Length != 0) {
        FunctionId = other.FunctionId;
      }
      if (other.Tag.Length != 0) {
        Tag = other.Tag;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      if (other.Filter.Length != 0) {
        Filter = other.Filter;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            FunctionId = input.ReadString();
            break;
          }
          case 18: {
            Tag = input.ReadString();
            break;
          }
          case 24: {
            PageSize = input.ReadInt64();
            break;
          }
          case 34: {
            PageToken = input.ReadString();
            break;
          }
          case 42: {
            Filter = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListFunctionTagHistoryResponse : pb::IMessage<ListFunctionTagHistoryResponse> {
    private static readonly pb::MessageParser<ListFunctionTagHistoryResponse> _parser = new pb::MessageParser<ListFunctionTagHistoryResponse>(() => new ListFunctionTagHistoryResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListFunctionTagHistoryResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Serverless.Functions.V1.FunctionServiceReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionTagHistoryResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionTagHistoryResponse(ListFunctionTagHistoryResponse other) : this() {
      functionTagHistoryRecord_ = other.functionTagHistoryRecord_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListFunctionTagHistoryResponse Clone() {
      return new ListFunctionTagHistoryResponse(this);
    }

    /// <summary>Field number for the "function_tag_history_record" field.</summary>
    public const int FunctionTagHistoryRecordFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Types.FunctionTagHistoryRecord> _repeated_functionTagHistoryRecord_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Types.FunctionTagHistoryRecord.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Types.FunctionTagHistoryRecord> functionTagHistoryRecord_ = new pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Types.FunctionTagHistoryRecord>();
    /// <summary>
    /// Set of relevant tag history records.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Types.FunctionTagHistoryRecord> FunctionTagHistoryRecord {
      get { return functionTagHistoryRecord_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// Token for getting the next page of the list. If the number of results is greater than
    /// the specified [ListFunctionTagHistoryRequest.page_size], use `nextPageToken` as the value
    /// for the [ListFunctionTagHistoryRequest.page_token] parameter in the next list request.
    ///
    /// Each subsequent page will have its own `nextPageToken` to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListFunctionTagHistoryResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListFunctionTagHistoryResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!functionTagHistoryRecord_.Equals(other.functionTagHistoryRecord_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= functionTagHistoryRecord_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      functionTagHistoryRecord_.WriteTo(output, _repeated_functionTagHistoryRecord_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += functionTagHistoryRecord_.CalculateSize(_repeated_functionTagHistoryRecord_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListFunctionTagHistoryResponse other) {
      if (other == null) {
        return;
      }
      functionTagHistoryRecord_.Add(other.functionTagHistoryRecord_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            functionTagHistoryRecord_.AddEntriesFrom(input, _repeated_functionTagHistoryRecord_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ListFunctionTagHistoryResponse message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// A record in the tag history.
      /// </summary>
      internal sealed partial class FunctionTagHistoryRecord : pb::IMessage<FunctionTagHistoryRecord> {
        private static readonly pb::MessageParser<FunctionTagHistoryRecord> _parser = new pb::MessageParser<FunctionTagHistoryRecord>(() => new FunctionTagHistoryRecord());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<FunctionTagHistoryRecord> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Yandex.Cloud.Serverless.Functions.V1.ListFunctionTagHistoryResponse.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FunctionTagHistoryRecord() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FunctionTagHistoryRecord(FunctionTagHistoryRecord other) : this() {
          functionId_ = other.functionId_;
          functionVersionId_ = other.functionVersionId_;
          tag_ = other.tag_;
          effectiveFrom_ = other.effectiveFrom_ != null ? other.effectiveFrom_.Clone() : null;
          effectiveTo_ = other.effectiveTo_ != null ? other.effectiveTo_.Clone() : null;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public FunctionTagHistoryRecord Clone() {
          return new FunctionTagHistoryRecord(this);
        }

        /// <summary>Field number for the "function_id" field.</summary>
        public const int FunctionIdFieldNumber = 1;
        private string functionId_ = "";
        /// <summary>
        /// ID of the function that the record is about.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FunctionId {
          get { return functionId_; }
          set {
            functionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "function_version_id" field.</summary>
        public const int FunctionVersionIdFieldNumber = 3;
        private string functionVersionId_ = "";
        /// <summary>
        /// ID of the function version that the record is about.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string FunctionVersionId {
          get { return functionVersionId_; }
          set {
            functionVersionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "tag" field.</summary>
        public const int TagFieldNumber = 2;
        private string tag_ = "";
        /// <summary>
        /// Tag that was set for the version at some point.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Tag {
          get { return tag_; }
          set {
            tag_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "effective_from" field.</summary>
        public const int EffectiveFromFieldNumber = 4;
        private global::Google.Protobuf.WellKnownTypes.Timestamp effectiveFrom_;
        /// <summary>
        /// Timestamp when the tag started being active for the function.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp EffectiveFrom {
          get { return effectiveFrom_; }
          set {
            effectiveFrom_ = value;
          }
        }

        /// <summary>Field number for the "effective_to" field.</summary>
        public const int EffectiveToFieldNumber = 5;
        private global::Google.Protobuf.WellKnownTypes.Timestamp effectiveTo_;
        /// <summary>
        /// Timestamp when the tag stopped being active for the function.
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Timestamp EffectiveTo {
          get { return effectiveTo_; }
          set {
            effectiveTo_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as FunctionTagHistoryRecord);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(FunctionTagHistoryRecord other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FunctionId != other.FunctionId) return false;
          if (FunctionVersionId != other.FunctionVersionId) return false;
          if (Tag != other.Tag) return false;
          if (!object.Equals(EffectiveFrom, other.EffectiveFrom)) return false;
          if (!object.Equals(EffectiveTo, other.EffectiveTo)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FunctionId.Length != 0) hash ^= FunctionId.GetHashCode();
          if (FunctionVersionId.Length != 0) hash ^= FunctionVersionId.GetHashCode();
          if (Tag.Length != 0) hash ^= Tag.GetHashCode();
          if (effectiveFrom_ != null) hash ^= EffectiveFrom.GetHashCode();
          if (effectiveTo_ != null) hash ^= EffectiveTo.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (FunctionId.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(FunctionId);
          }
          if (Tag.Length != 0) {
            output.WriteRawTag(18);
            output.WriteString(Tag);
          }
          if (FunctionVersionId.Length != 0) {
            output.WriteRawTag(26);
            output.WriteString(FunctionVersionId);
          }
          if (effectiveFrom_ != null) {
            output.WriteRawTag(34);
            output.WriteMessage(EffectiveFrom);
          }
          if (effectiveTo_ != null) {
            output.WriteRawTag(42);
            output.WriteMessage(EffectiveTo);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FunctionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionId);
          }
          if (FunctionVersionId.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(FunctionVersionId);
          }
          if (Tag.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Tag);
          }
          if (effectiveFrom_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EffectiveFrom);
          }
          if (effectiveTo_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(EffectiveTo);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(FunctionTagHistoryRecord other) {
          if (other == null) {
            return;
          }
          if (other.FunctionId.Length != 0) {
            FunctionId = other.FunctionId;
          }
          if (other.FunctionVersionId.Length != 0) {
            FunctionVersionId = other.FunctionVersionId;
          }
          if (other.Tag.Length != 0) {
            Tag = other.Tag;
          }
          if (other.effectiveFrom_ != null) {
            if (effectiveFrom_ == null) {
              EffectiveFrom = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            EffectiveFrom.MergeFrom(other.EffectiveFrom);
          }
          if (other.effectiveTo_ != null) {
            if (effectiveTo_ == null) {
              EffectiveTo = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            EffectiveTo.MergeFrom(other.EffectiveTo);
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                FunctionId = input.ReadString();
                break;
              }
              case 18: {
                Tag = input.ReadString();
                break;
              }
              case 26: {
                FunctionVersionId = input.ReadString();
                break;
              }
              case 34: {
                if (effectiveFrom_ == null) {
                  EffectiveFrom = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(EffectiveFrom);
                break;
              }
              case 42: {
                if (effectiveTo_ == null) {
                  EffectiveTo = new global::Google.Protobuf.WellKnownTypes.Timestamp();
                }
                input.ReadMessage(EffectiveTo);
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
