// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/vpc/v1/network_service.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace Yandex.Cloud.Vpc.V1 {
  /// <summary>
  /// A set of methods for managing Network resources.
  /// </summary>
  internal static partial class NetworkService
  {
    static readonly string __ServiceName = "yandex.cloud.vpc.v1.NetworkService";

    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.GetNetworkRequest> __Marshaller_yandex_cloud_vpc_v1_GetNetworkRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.GetNetworkRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.Network> __Marshaller_yandex_cloud_vpc_v1_Network = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.Network.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.ListNetworksRequest> __Marshaller_yandex_cloud_vpc_v1_ListNetworksRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.ListNetworksRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.ListNetworksResponse> __Marshaller_yandex_cloud_vpc_v1_ListNetworksResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.ListNetworksResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.CreateNetworkRequest> __Marshaller_yandex_cloud_vpc_v1_CreateNetworkRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.CreateNetworkRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Operation.Operation> __Marshaller_yandex_cloud_operation_Operation = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Operation.Operation.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.UpdateNetworkRequest> __Marshaller_yandex_cloud_vpc_v1_UpdateNetworkRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.UpdateNetworkRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.DeleteNetworkRequest> __Marshaller_yandex_cloud_vpc_v1_DeleteNetworkRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.DeleteNetworkRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsRequest> __Marshaller_yandex_cloud_vpc_v1_ListNetworkSubnetsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsResponse> __Marshaller_yandex_cloud_vpc_v1_ListNetworkSubnetsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsRequest> __Marshaller_yandex_cloud_vpc_v1_ListNetworkOperationsRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsResponse> __Marshaller_yandex_cloud_vpc_v1_ListNetworkOperationsResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::Yandex.Cloud.Vpc.V1.GetNetworkRequest, global::Yandex.Cloud.Vpc.V1.Network> __Method_Get = new grpc::Method<global::Yandex.Cloud.Vpc.V1.GetNetworkRequest, global::Yandex.Cloud.Vpc.V1.Network>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Get",
        __Marshaller_yandex_cloud_vpc_v1_GetNetworkRequest,
        __Marshaller_yandex_cloud_vpc_v1_Network);

    static readonly grpc::Method<global::Yandex.Cloud.Vpc.V1.ListNetworksRequest, global::Yandex.Cloud.Vpc.V1.ListNetworksResponse> __Method_List = new grpc::Method<global::Yandex.Cloud.Vpc.V1.ListNetworksRequest, global::Yandex.Cloud.Vpc.V1.ListNetworksResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "List",
        __Marshaller_yandex_cloud_vpc_v1_ListNetworksRequest,
        __Marshaller_yandex_cloud_vpc_v1_ListNetworksResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Vpc.V1.CreateNetworkRequest, global::Yandex.Cloud.Operation.Operation> __Method_Create = new grpc::Method<global::Yandex.Cloud.Vpc.V1.CreateNetworkRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Create",
        __Marshaller_yandex_cloud_vpc_v1_CreateNetworkRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Vpc.V1.UpdateNetworkRequest, global::Yandex.Cloud.Operation.Operation> __Method_Update = new grpc::Method<global::Yandex.Cloud.Vpc.V1.UpdateNetworkRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Update",
        __Marshaller_yandex_cloud_vpc_v1_UpdateNetworkRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Vpc.V1.DeleteNetworkRequest, global::Yandex.Cloud.Operation.Operation> __Method_Delete = new grpc::Method<global::Yandex.Cloud.Vpc.V1.DeleteNetworkRequest, global::Yandex.Cloud.Operation.Operation>(
        grpc::MethodType.Unary,
        __ServiceName,
        "Delete",
        __Marshaller_yandex_cloud_vpc_v1_DeleteNetworkRequest,
        __Marshaller_yandex_cloud_operation_Operation);

    static readonly grpc::Method<global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsRequest, global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsResponse> __Method_ListSubnets = new grpc::Method<global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsRequest, global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListSubnets",
        __Marshaller_yandex_cloud_vpc_v1_ListNetworkSubnetsRequest,
        __Marshaller_yandex_cloud_vpc_v1_ListNetworkSubnetsResponse);

    static readonly grpc::Method<global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsRequest, global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsResponse> __Method_ListOperations = new grpc::Method<global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsRequest, global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "ListOperations",
        __Marshaller_yandex_cloud_vpc_v1_ListNetworkOperationsRequest,
        __Marshaller_yandex_cloud_vpc_v1_ListNetworkOperationsResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::Yandex.Cloud.Vpc.V1.NetworkServiceReflection.Descriptor.Services[0]; }
    }

    /// <summary>Client for NetworkService</summary>
    public partial class NetworkServiceClient : grpc::ClientBase<NetworkServiceClient>
    {
      /// <summary>Creates a new client for NetworkService</summary>
      /// <param name="channel">The channel to use to make remote calls.</param>
      public NetworkServiceClient(grpc::Channel channel) : base(channel)
      {
      }
      /// <summary>Creates a new client for NetworkService that uses a custom <c>CallInvoker</c>.</summary>
      /// <param name="callInvoker">The callInvoker to use to make remote calls.</param>
      public NetworkServiceClient(grpc::CallInvoker callInvoker) : base(callInvoker)
      {
      }
      /// <summary>Protected parameterless constructor to allow creation of test doubles.</summary>
      protected NetworkServiceClient() : base()
      {
      }
      /// <summary>Protected constructor to allow creation of configured clients.</summary>
      /// <param name="configuration">The client configuration.</param>
      protected NetworkServiceClient(ClientBaseConfiguration configuration) : base(configuration)
      {
      }

      /// <summary>
      /// Returns the specified Network resource.
      ///
      /// Get the list of available Network resources by making a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Vpc.V1.Network Get(global::Yandex.Cloud.Vpc.V1.GetNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Get(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified Network resource.
      ///
      /// Get the list of available Network resources by making a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Vpc.V1.Network Get(global::Yandex.Cloud.Vpc.V1.GetNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Returns the specified Network resource.
      ///
      /// Get the list of available Network resources by making a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Vpc.V1.Network> GetAsync(global::Yandex.Cloud.Vpc.V1.GetNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return GetAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Returns the specified Network resource.
      ///
      /// Get the list of available Network resources by making a [List] request.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Vpc.V1.Network> GetAsync(global::Yandex.Cloud.Vpc.V1.GetNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Get, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of Network resources in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Vpc.V1.ListNetworksResponse List(global::Yandex.Cloud.Vpc.V1.ListNetworksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return List(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of Network resources in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Vpc.V1.ListNetworksResponse List(global::Yandex.Cloud.Vpc.V1.ListNetworksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// Retrieves the list of Network resources in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Vpc.V1.ListNetworksResponse> ListAsync(global::Yandex.Cloud.Vpc.V1.ListNetworksRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Retrieves the list of Network resources in the specified folder.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Vpc.V1.ListNetworksResponse> ListAsync(global::Yandex.Cloud.Vpc.V1.ListNetworksRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_List, null, options, request);
      }
      /// <summary>
      /// Creates a network in the specified folder using the data specified in the request.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Create(global::Yandex.Cloud.Vpc.V1.CreateNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Create(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a network in the specified folder using the data specified in the request.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Create(global::Yandex.Cloud.Vpc.V1.CreateNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Create, null, options, request);
      }
      /// <summary>
      /// Creates a network in the specified folder using the data specified in the request.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> CreateAsync(global::Yandex.Cloud.Vpc.V1.CreateNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return CreateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Creates a network in the specified folder using the data specified in the request.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> CreateAsync(global::Yandex.Cloud.Vpc.V1.CreateNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Create, null, options, request);
      }
      /// <summary>
      /// Updates the specified network.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Update(global::Yandex.Cloud.Vpc.V1.UpdateNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Update(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified network.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Update(global::Yandex.Cloud.Vpc.V1.UpdateNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Update, null, options, request);
      }
      /// <summary>
      /// Updates the specified network.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateAsync(global::Yandex.Cloud.Vpc.V1.UpdateNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return UpdateAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Updates the specified network.
      /// Method starts an asynchronous operation that can be cancelled while it is in progress.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> UpdateAsync(global::Yandex.Cloud.Vpc.V1.UpdateNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Update, null, options, request);
      }
      /// <summary>
      /// Deletes the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Delete(global::Yandex.Cloud.Vpc.V1.DeleteNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return Delete(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Operation.Operation Delete(global::Yandex.Cloud.Vpc.V1.DeleteNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      /// Deletes the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DeleteAsync(global::Yandex.Cloud.Vpc.V1.DeleteNetworkRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return DeleteAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Deletes the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Operation.Operation> DeleteAsync(global::Yandex.Cloud.Vpc.V1.DeleteNetworkRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_Delete, null, options, request);
      }
      /// <summary>
      /// Lists subnets from the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsResponse ListSubnets(global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubnets(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists subnets from the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsResponse ListSubnets(global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListSubnets, null, options, request);
      }
      /// <summary>
      /// Lists subnets from the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsResponse> ListSubnetsAsync(global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListSubnetsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists subnets from the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsResponse> ListSubnetsAsync(global::Yandex.Cloud.Vpc.V1.ListNetworkSubnetsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListSubnets, null, options, request);
      }
      /// <summary>
      /// Lists operations for the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsResponse ListOperations(global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOperations(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists operations for the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The response received from the server.</returns>
      public virtual global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsResponse ListOperations(global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.BlockingUnaryCall(__Method_ListOperations, null, options, request);
      }
      /// <summary>
      /// Lists operations for the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="headers">The initial metadata to send with the call. This parameter is optional.</param>
      /// <param name="deadline">An optional deadline for the call. The call will be cancelled if deadline is hit.</param>
      /// <param name="cancellationToken">An optional token for canceling the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsResponse> ListOperationsAsync(global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsRequest request, grpc::Metadata headers = null, global::System.DateTime? deadline = null, global::System.Threading.CancellationToken cancellationToken = default(global::System.Threading.CancellationToken))
      {
        return ListOperationsAsync(request, new grpc::CallOptions(headers, deadline, cancellationToken));
      }
      /// <summary>
      /// Lists operations for the specified network.
      /// </summary>
      /// <param name="request">The request to send to the server.</param>
      /// <param name="options">The options for the call.</param>
      /// <returns>The call object.</returns>
      public virtual grpc::AsyncUnaryCall<global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsResponse> ListOperationsAsync(global::Yandex.Cloud.Vpc.V1.ListNetworkOperationsRequest request, grpc::CallOptions options)
      {
        return CallInvoker.AsyncUnaryCall(__Method_ListOperations, null, options, request);
      }
      /// <summary>Creates a new instance of client from given <c>ClientBaseConfiguration</c>.</summary>
      protected override NetworkServiceClient NewInstance(ClientBaseConfiguration configuration)
      {
        return new NetworkServiceClient(configuration);
      }
    }

  }
}
#endregion
