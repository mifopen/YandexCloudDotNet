// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/access/access.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Access {

  /// <summary>Holder for reflection information generated from yandex/cloud/access/access.proto</summary>
  internal static partial class AccessReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/access/access.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static AccessReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiB5YW5kZXgvY2xvdWQvYWNjZXNzL2FjY2Vzcy5wcm90bxITeWFuZGV4LmNs",
            "b3VkLmFjY2VzcxodeWFuZGV4L2Nsb3VkL3ZhbGlkYXRpb24ucHJvdG8iLQoH",
            "U3ViamVjdBIUCgJpZBgBIAEoCUIIisgxBDw9NTASDAoEdHlwZRgCIAEoCSJf",
            "Cg1BY2Nlc3NCaW5kaW5nEhkKB3JvbGVfaWQYASABKAlCCIrIMQQ8PTUwEjMK",
            "B3N1YmplY3QYAiABKAsyHC55YW5kZXguY2xvdWQuYWNjZXNzLlN1YmplY3RC",
            "BOjHMQEidAoZTGlzdEFjY2Vzc0JpbmRpbmdzUmVxdWVzdBIZCgtyZXNvdXJj",
            "ZV9pZBgBIAEoCUIE6McxARIdCglwYWdlX3NpemUYAiABKANCCvrHMQY8PTEw",
            "MDASHQoKcGFnZV90b2tlbhgDIAEoCUIJisgxBTw9MTAwInIKGkxpc3RBY2Nl",
            "c3NCaW5kaW5nc1Jlc3BvbnNlEjsKD2FjY2Vzc19iaW5kaW5ncxgBIAMoCzIi",
            "LnlhbmRleC5jbG91ZC5hY2Nlc3MuQWNjZXNzQmluZGluZxIXCg9uZXh0X3Bh",
            "Z2VfdG9rZW4YAiABKAkieAoYU2V0QWNjZXNzQmluZGluZ3NSZXF1ZXN0EhkK",
            "C3Jlc291cmNlX2lkGAEgASgJQgToxzEBEkEKD2FjY2Vzc19iaW5kaW5ncxgC",
            "IAMoCzIiLnlhbmRleC5jbG91ZC5hY2Nlc3MuQWNjZXNzQmluZGluZ0IE6Mcx",
            "ASIwChlTZXRBY2Nlc3NCaW5kaW5nc01ldGFkYXRhEhMKC3Jlc291cmNlX2lk",
            "GAEgASgJIoYBChtVcGRhdGVBY2Nlc3NCaW5kaW5nc1JlcXVlc3QSGQoLcmVz",
            "b3VyY2VfaWQYASABKAlCBOjHMQESTAoVYWNjZXNzX2JpbmRpbmdfZGVsdGFz",
            "GAIgAygLMicueWFuZGV4LmNsb3VkLmFjY2Vzcy5BY2Nlc3NCaW5kaW5nRGVs",
            "dGFCBOjHMQEiMwocVXBkYXRlQWNjZXNzQmluZGluZ3NNZXRhZGF0YRITCgty",
            "ZXNvdXJjZV9pZBgBIAEoCSKWAQoSQWNjZXNzQmluZGluZ0RlbHRhEj4KBmFj",
            "dGlvbhgBIAEoDjIoLnlhbmRleC5jbG91ZC5hY2Nlc3MuQWNjZXNzQmluZGlu",
            "Z0FjdGlvbkIE6McxARJACg5hY2Nlc3NfYmluZGluZxgCIAEoCzIiLnlhbmRl",
            "eC5jbG91ZC5hY2Nlc3MuQWNjZXNzQmluZGluZ0IE6McxASpRChNBY2Nlc3NC",
            "aW5kaW5nQWN0aW9uEiUKIUFDQ0VTU19CSU5ESU5HX0FDVElPTl9VTlNQRUNJ",
            "RklFRBAAEgcKA0FERBABEgoKBlJFTU9WRRACQlkKF3lhbmRleC5jbG91ZC5h",
            "cGkuYWNjZXNzWj5naXRodWIuY29tL3lhbmRleC1jbG91ZC9nby1nZW5wcm90",
            "by95YW5kZXgvY2xvdWQvYWNjZXNzO2FjY2Vzc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Yandex.Cloud.ValidationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Yandex.Cloud.Access.AccessBindingAction), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.Subject), global::Yandex.Cloud.Access.Subject.Parser, new[]{ "Id", "Type" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.AccessBinding), global::Yandex.Cloud.Access.AccessBinding.Parser, new[]{ "RoleId", "Subject" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.ListAccessBindingsRequest), global::Yandex.Cloud.Access.ListAccessBindingsRequest.Parser, new[]{ "ResourceId", "PageSize", "PageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.ListAccessBindingsResponse), global::Yandex.Cloud.Access.ListAccessBindingsResponse.Parser, new[]{ "AccessBindings", "NextPageToken" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.SetAccessBindingsRequest), global::Yandex.Cloud.Access.SetAccessBindingsRequest.Parser, new[]{ "ResourceId", "AccessBindings" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.SetAccessBindingsMetadata), global::Yandex.Cloud.Access.SetAccessBindingsMetadata.Parser, new[]{ "ResourceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.UpdateAccessBindingsRequest), global::Yandex.Cloud.Access.UpdateAccessBindingsRequest.Parser, new[]{ "ResourceId", "AccessBindingDeltas" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.UpdateAccessBindingsMetadata), global::Yandex.Cloud.Access.UpdateAccessBindingsMetadata.Parser, new[]{ "ResourceId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Access.AccessBindingDelta), global::Yandex.Cloud.Access.AccessBindingDelta.Parser, new[]{ "Action", "AccessBinding" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum AccessBindingAction {
    [pbr::OriginalName("ACCESS_BINDING_ACTION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Addition of an access binding.
    /// </summary>
    [pbr::OriginalName("ADD")] Add = 1,
    /// <summary>
    /// Removal of an access binding.
    /// </summary>
    [pbr::OriginalName("REMOVE")] Remove = 2,
  }

  #endregion

  #region Messages
  internal sealed partial class Subject : pb::IMessage<Subject> {
    private static readonly pb::MessageParser<Subject> _parser = new pb::MessageParser<Subject>(() => new Subject());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subject> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subject() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subject(Subject other) : this() {
      id_ = other.id_;
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subject Clone() {
      return new Subject(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the subject.
    ///
    /// It can contain one of the following values:
    /// * `allAuthenticatedUsers`: A special system identifier that represents anyone
    ///    who is authenticated. It can be used only if the [type] is `system`.
    /// * `allUsers`: A special system identifier that represents anyone. No authentication is required.
    ///    For example, you don't need to specify the IAM token in an API query.
    /// * `&lt;cloud generated id>`: An identifier that represents a user account.
    ///    It can be used only if the [type] is `userAccount` or `serviceAccount`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private string type_ = "";
    /// <summary>
    /// Type of the subject.
    ///
    /// It can contain one of the following values:
    /// * `userAccount`: An account on Yandex or [Yandex.Connect](https://connect.yandex.com), added to Yandex.Cloud.
    /// * `serviceAccount`: A service account. This type represents the [yandex.cloud.iam.v1.ServiceAccount] resource.
    /// * `federatedUser`: A federated account. This type represents a user from an identity federation, like Active Directory.
    /// * `system`: System group. This type represents several accounts with a common system identifier.
    ///
    /// For more information, see [Subject to which the role is assigned](/docs/iam/concepts/access-control/#subject).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Type {
      get { return type_; }
      set {
        type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subject);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subject other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Type.Length != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (Type.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (Type.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subject other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Type.Length != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            Type = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AccessBinding : pb::IMessage<AccessBinding> {
    private static readonly pb::MessageParser<AccessBinding> _parser = new pb::MessageParser<AccessBinding>(() => new AccessBinding());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccessBinding> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessBinding() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessBinding(AccessBinding other) : this() {
      roleId_ = other.roleId_;
      subject_ = other.subject_ != null ? other.subject_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessBinding Clone() {
      return new AccessBinding(this);
    }

    /// <summary>Field number for the "role_id" field.</summary>
    public const int RoleIdFieldNumber = 1;
    private string roleId_ = "";
    /// <summary>
    /// ID of the [yandex.cloud.iam.v1.Role] that is assigned to the [subject].
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string RoleId {
      get { return roleId_; }
      set {
        roleId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subject" field.</summary>
    public const int SubjectFieldNumber = 2;
    private global::Yandex.Cloud.Access.Subject subject_;
    /// <summary>
    /// Identity for which access binding is being created.
    /// It can represent an account with a unique ID or several accounts with a system identifier.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Access.Subject Subject {
      get { return subject_; }
      set {
        subject_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccessBinding);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccessBinding other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (RoleId != other.RoleId) return false;
      if (!object.Equals(Subject, other.Subject)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (RoleId.Length != 0) hash ^= RoleId.GetHashCode();
      if (subject_ != null) hash ^= Subject.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (RoleId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(RoleId);
      }
      if (subject_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Subject);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (RoleId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(RoleId);
      }
      if (subject_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Subject);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccessBinding other) {
      if (other == null) {
        return;
      }
      if (other.RoleId.Length != 0) {
        RoleId = other.RoleId;
      }
      if (other.subject_ != null) {
        if (subject_ == null) {
          Subject = new global::Yandex.Cloud.Access.Subject();
        }
        Subject.MergeFrom(other.Subject);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            RoleId = input.ReadString();
            break;
          }
          case 18: {
            if (subject_ == null) {
              Subject = new global::Yandex.Cloud.Access.Subject();
            }
            input.ReadMessage(Subject);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListAccessBindingsRequest : pb::IMessage<ListAccessBindingsRequest> {
    private static readonly pb::MessageParser<ListAccessBindingsRequest> _parser = new pb::MessageParser<ListAccessBindingsRequest>(() => new ListAccessBindingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAccessBindingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAccessBindingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAccessBindingsRequest(ListAccessBindingsRequest other) : this() {
      resourceId_ = other.resourceId_;
      pageSize_ = other.pageSize_;
      pageToken_ = other.pageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAccessBindingsRequest Clone() {
      return new ListAccessBindingsRequest(this);
    }

    /// <summary>Field number for the "resource_id" field.</summary>
    public const int ResourceIdFieldNumber = 1;
    private string resourceId_ = "";
    /// <summary>
    /// ID of the resource to list access bindings for.
    ///
    /// To get the resource ID, use a corresponding List request.
    /// For example, use the [yandex.cloud.resourcemanager.v1.CloudService.List] request to get the Cloud resource ID.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "page_size" field.</summary>
    public const int PageSizeFieldNumber = 2;
    private long pageSize_;
    /// <summary>
    /// The maximum number of results per page that should be returned. If the number of available
    /// results is larger than [page_size],
    /// the service returns a [ListAccessBindingsResponse.next_page_token]
    /// that can be used to get the next page of results in subsequent list requests.
    /// Default value: 100.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long PageSize {
      get { return pageSize_; }
      set {
        pageSize_ = value;
      }
    }

    /// <summary>Field number for the "page_token" field.</summary>
    public const int PageTokenFieldNumber = 3;
    private string pageToken_ = "";
    /// <summary>
    /// Page token. Set [page_token]
    /// to the [ListAccessBindingsResponse.next_page_token]
    /// returned by a previous list request to get the next page of results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PageToken {
      get { return pageToken_; }
      set {
        pageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAccessBindingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAccessBindingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceId != other.ResourceId) return false;
      if (PageSize != other.PageSize) return false;
      if (PageToken != other.PageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceId.Length != 0) hash ^= ResourceId.GetHashCode();
      if (PageSize != 0L) hash ^= PageSize.GetHashCode();
      if (PageToken.Length != 0) hash ^= PageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceId);
      }
      if (PageSize != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(PageSize);
      }
      if (PageToken.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(PageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceId);
      }
      if (PageSize != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(PageSize);
      }
      if (PageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAccessBindingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ResourceId.Length != 0) {
        ResourceId = other.ResourceId;
      }
      if (other.PageSize != 0L) {
        PageSize = other.PageSize;
      }
      if (other.PageToken.Length != 0) {
        PageToken = other.PageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceId = input.ReadString();
            break;
          }
          case 16: {
            PageSize = input.ReadInt64();
            break;
          }
          case 26: {
            PageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class ListAccessBindingsResponse : pb::IMessage<ListAccessBindingsResponse> {
    private static readonly pb::MessageParser<ListAccessBindingsResponse> _parser = new pb::MessageParser<ListAccessBindingsResponse>(() => new ListAccessBindingsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ListAccessBindingsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAccessBindingsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAccessBindingsResponse(ListAccessBindingsResponse other) : this() {
      accessBindings_ = other.accessBindings_.Clone();
      nextPageToken_ = other.nextPageToken_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ListAccessBindingsResponse Clone() {
      return new ListAccessBindingsResponse(this);
    }

    /// <summary>Field number for the "access_bindings" field.</summary>
    public const int AccessBindingsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Access.AccessBinding> _repeated_accessBindings_codec
        = pb::FieldCodec.ForMessage(10, global::Yandex.Cloud.Access.AccessBinding.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBinding> accessBindings_ = new pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBinding>();
    /// <summary>
    /// List of access bindings for the specified resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBinding> AccessBindings {
      get { return accessBindings_; }
    }

    /// <summary>Field number for the "next_page_token" field.</summary>
    public const int NextPageTokenFieldNumber = 2;
    private string nextPageToken_ = "";
    /// <summary>
    /// This token allows you to get the next page of results for list requests. If the number of results
    /// is larger than [ListAccessBindingsRequest.page_size], use
    /// the [next_page_token] as the value
    /// for the [ListAccessBindingsRequest.page_token] query parameter
    /// in the next list request. Each subsequent list request will have its own
    /// [next_page_token] to continue paging through the results.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string NextPageToken {
      get { return nextPageToken_; }
      set {
        nextPageToken_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ListAccessBindingsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ListAccessBindingsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!accessBindings_.Equals(other.accessBindings_)) return false;
      if (NextPageToken != other.NextPageToken) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= accessBindings_.GetHashCode();
      if (NextPageToken.Length != 0) hash ^= NextPageToken.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      accessBindings_.WriteTo(output, _repeated_accessBindings_codec);
      if (NextPageToken.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(NextPageToken);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += accessBindings_.CalculateSize(_repeated_accessBindings_codec);
      if (NextPageToken.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(NextPageToken);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ListAccessBindingsResponse other) {
      if (other == null) {
        return;
      }
      accessBindings_.Add(other.accessBindings_);
      if (other.NextPageToken.Length != 0) {
        NextPageToken = other.NextPageToken;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            accessBindings_.AddEntriesFrom(input, _repeated_accessBindings_codec);
            break;
          }
          case 18: {
            NextPageToken = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SetAccessBindingsRequest : pb::IMessage<SetAccessBindingsRequest> {
    private static readonly pb::MessageParser<SetAccessBindingsRequest> _parser = new pb::MessageParser<SetAccessBindingsRequest>(() => new SetAccessBindingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAccessBindingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccessBindingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccessBindingsRequest(SetAccessBindingsRequest other) : this() {
      resourceId_ = other.resourceId_;
      accessBindings_ = other.accessBindings_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccessBindingsRequest Clone() {
      return new SetAccessBindingsRequest(this);
    }

    /// <summary>Field number for the "resource_id" field.</summary>
    public const int ResourceIdFieldNumber = 1;
    private string resourceId_ = "";
    /// <summary>
    /// ID of the resource for which access bindings are being set.
    ///
    /// To get the resource ID, use a corresponding List request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_bindings" field.</summary>
    public const int AccessBindingsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Access.AccessBinding> _repeated_accessBindings_codec
        = pb::FieldCodec.ForMessage(18, global::Yandex.Cloud.Access.AccessBinding.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBinding> accessBindings_ = new pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBinding>();
    /// <summary>
    /// Access bindings to be set. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBinding> AccessBindings {
      get { return accessBindings_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAccessBindingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAccessBindingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceId != other.ResourceId) return false;
      if(!accessBindings_.Equals(other.accessBindings_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceId.Length != 0) hash ^= ResourceId.GetHashCode();
      hash ^= accessBindings_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceId);
      }
      accessBindings_.WriteTo(output, _repeated_accessBindings_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceId);
      }
      size += accessBindings_.CalculateSize(_repeated_accessBindings_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAccessBindingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ResourceId.Length != 0) {
        ResourceId = other.ResourceId;
      }
      accessBindings_.Add(other.accessBindings_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceId = input.ReadString();
            break;
          }
          case 18: {
            accessBindings_.AddEntriesFrom(input, _repeated_accessBindings_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SetAccessBindingsMetadata : pb::IMessage<SetAccessBindingsMetadata> {
    private static readonly pb::MessageParser<SetAccessBindingsMetadata> _parser = new pb::MessageParser<SetAccessBindingsMetadata>(() => new SetAccessBindingsMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SetAccessBindingsMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccessBindingsMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccessBindingsMetadata(SetAccessBindingsMetadata other) : this() {
      resourceId_ = other.resourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SetAccessBindingsMetadata Clone() {
      return new SetAccessBindingsMetadata(this);
    }

    /// <summary>Field number for the "resource_id" field.</summary>
    public const int ResourceIdFieldNumber = 1;
    private string resourceId_ = "";
    /// <summary>
    /// ID of the resource for which access bindings are being set.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SetAccessBindingsMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SetAccessBindingsMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceId != other.ResourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceId.Length != 0) hash ^= ResourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SetAccessBindingsMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ResourceId.Length != 0) {
        ResourceId = other.ResourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateAccessBindingsRequest : pb::IMessage<UpdateAccessBindingsRequest> {
    private static readonly pb::MessageParser<UpdateAccessBindingsRequest> _parser = new pb::MessageParser<UpdateAccessBindingsRequest>(() => new UpdateAccessBindingsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAccessBindingsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAccessBindingsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAccessBindingsRequest(UpdateAccessBindingsRequest other) : this() {
      resourceId_ = other.resourceId_;
      accessBindingDeltas_ = other.accessBindingDeltas_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAccessBindingsRequest Clone() {
      return new UpdateAccessBindingsRequest(this);
    }

    /// <summary>Field number for the "resource_id" field.</summary>
    public const int ResourceIdFieldNumber = 1;
    private string resourceId_ = "";
    /// <summary>
    /// ID of the resource for which access bindings are being updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "access_binding_deltas" field.</summary>
    public const int AccessBindingDeltasFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Access.AccessBindingDelta> _repeated_accessBindingDeltas_codec
        = pb::FieldCodec.ForMessage(18, global::Yandex.Cloud.Access.AccessBindingDelta.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBindingDelta> accessBindingDeltas_ = new pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBindingDelta>();
    /// <summary>
    /// Updates to access bindings.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Access.AccessBindingDelta> AccessBindingDeltas {
      get { return accessBindingDeltas_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAccessBindingsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAccessBindingsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceId != other.ResourceId) return false;
      if(!accessBindingDeltas_.Equals(other.accessBindingDeltas_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceId.Length != 0) hash ^= ResourceId.GetHashCode();
      hash ^= accessBindingDeltas_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceId);
      }
      accessBindingDeltas_.WriteTo(output, _repeated_accessBindingDeltas_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceId);
      }
      size += accessBindingDeltas_.CalculateSize(_repeated_accessBindingDeltas_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAccessBindingsRequest other) {
      if (other == null) {
        return;
      }
      if (other.ResourceId.Length != 0) {
        ResourceId = other.ResourceId;
      }
      accessBindingDeltas_.Add(other.accessBindingDeltas_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceId = input.ReadString();
            break;
          }
          case 18: {
            accessBindingDeltas_.AddEntriesFrom(input, _repeated_accessBindingDeltas_codec);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class UpdateAccessBindingsMetadata : pb::IMessage<UpdateAccessBindingsMetadata> {
    private static readonly pb::MessageParser<UpdateAccessBindingsMetadata> _parser = new pb::MessageParser<UpdateAccessBindingsMetadata>(() => new UpdateAccessBindingsMetadata());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UpdateAccessBindingsMetadata> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAccessBindingsMetadata() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAccessBindingsMetadata(UpdateAccessBindingsMetadata other) : this() {
      resourceId_ = other.resourceId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UpdateAccessBindingsMetadata Clone() {
      return new UpdateAccessBindingsMetadata(this);
    }

    /// <summary>Field number for the "resource_id" field.</summary>
    public const int ResourceIdFieldNumber = 1;
    private string resourceId_ = "";
    /// <summary>
    /// ID of the resource for which access bindings are being updated.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ResourceId {
      get { return resourceId_; }
      set {
        resourceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UpdateAccessBindingsMetadata);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UpdateAccessBindingsMetadata other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ResourceId != other.ResourceId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ResourceId.Length != 0) hash ^= ResourceId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ResourceId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(ResourceId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ResourceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ResourceId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UpdateAccessBindingsMetadata other) {
      if (other == null) {
        return;
      }
      if (other.ResourceId.Length != 0) {
        ResourceId = other.ResourceId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ResourceId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AccessBindingDelta : pb::IMessage<AccessBindingDelta> {
    private static readonly pb::MessageParser<AccessBindingDelta> _parser = new pb::MessageParser<AccessBindingDelta>(() => new AccessBindingDelta());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccessBindingDelta> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Access.AccessReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessBindingDelta() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessBindingDelta(AccessBindingDelta other) : this() {
      action_ = other.action_;
      accessBinding_ = other.accessBinding_ != null ? other.accessBinding_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccessBindingDelta Clone() {
      return new AccessBindingDelta(this);
    }

    /// <summary>Field number for the "action" field.</summary>
    public const int ActionFieldNumber = 1;
    private global::Yandex.Cloud.Access.AccessBindingAction action_ = global::Yandex.Cloud.Access.AccessBindingAction.Unspecified;
    /// <summary>
    /// The action that is being performed on an access binding.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Access.AccessBindingAction Action {
      get { return action_; }
      set {
        action_ = value;
      }
    }

    /// <summary>Field number for the "access_binding" field.</summary>
    public const int AccessBindingFieldNumber = 2;
    private global::Yandex.Cloud.Access.AccessBinding accessBinding_;
    /// <summary>
    /// Access binding. For more information, see [Access Bindings](/docs/iam/concepts/access-control/#access-bindings).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Access.AccessBinding AccessBinding {
      get { return accessBinding_; }
      set {
        accessBinding_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccessBindingDelta);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccessBindingDelta other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Action != other.Action) return false;
      if (!object.Equals(AccessBinding, other.AccessBinding)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Action != global::Yandex.Cloud.Access.AccessBindingAction.Unspecified) hash ^= Action.GetHashCode();
      if (accessBinding_ != null) hash ^= AccessBinding.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Action != global::Yandex.Cloud.Access.AccessBindingAction.Unspecified) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Action);
      }
      if (accessBinding_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(AccessBinding);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Action != global::Yandex.Cloud.Access.AccessBindingAction.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Action);
      }
      if (accessBinding_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AccessBinding);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccessBindingDelta other) {
      if (other == null) {
        return;
      }
      if (other.Action != global::Yandex.Cloud.Access.AccessBindingAction.Unspecified) {
        Action = other.Action;
      }
      if (other.accessBinding_ != null) {
        if (accessBinding_ == null) {
          AccessBinding = new global::Yandex.Cloud.Access.AccessBinding();
        }
        AccessBinding.MergeFrom(other.AccessBinding);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Action = (global::Yandex.Cloud.Access.AccessBindingAction) input.ReadEnum();
            break;
          }
          case 18: {
            if (accessBinding_ == null) {
              AccessBinding = new global::Yandex.Cloud.Access.AccessBinding();
            }
            input.ReadMessage(AccessBinding);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
