// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/dataproc/v1/cluster.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Dataproc.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/dataproc/v1/cluster.proto</summary>
  internal static partial class ClusterReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/dataproc/v1/cluster.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ClusterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ5YW5kZXgvY2xvdWQvZGF0YXByb2MvdjEvY2x1c3Rlci5wcm90bxIYeWFu",
            "ZGV4LmNsb3VkLmRhdGFwcm9jLnYxGh9nb29nbGUvcHJvdG9idWYvdGltZXN0",
            "YW1wLnByb3RvGiV5YW5kZXgvY2xvdWQvZGF0YXByb2MvdjEvY29tbW9uLnBy",
            "b3RvIvIECgdDbHVzdGVyEgoKAmlkGAEgASgJEhEKCWZvbGRlcl9pZBgCIAEo",
            "CRIuCgpjcmVhdGVkX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVmLlRpbWVz",
            "dGFtcBIMCgRuYW1lGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJEj0KBmxh",
            "YmVscxgGIAMoCzItLnlhbmRleC5jbG91ZC5kYXRhcHJvYy52MS5DbHVzdGVy",
            "LkxhYmVsc0VudHJ5EjgKCm1vbml0b3JpbmcYByADKAsyJC55YW5kZXguY2xv",
            "dWQuZGF0YXByb2MudjEuTW9uaXRvcmluZxI3CgZjb25maWcYCCABKAsyJy55",
            "YW5kZXguY2xvdWQuZGF0YXByb2MudjEuQ2x1c3RlckNvbmZpZxIwCgZoZWFs",
            "dGgYCSABKA4yIC55YW5kZXguY2xvdWQuZGF0YXByb2MudjEuSGVhbHRoEjgK",
            "BnN0YXR1cxgKIAEoDjIoLnlhbmRleC5jbG91ZC5kYXRhcHJvYy52MS5DbHVz",
            "dGVyLlN0YXR1cxIPCgd6b25lX2lkGAsgASgJEhoKEnNlcnZpY2VfYWNjb3Vu",
            "dF9pZBgMIAEoCRIOCgZidWNrZXQYDSABKAkaLQoLTGFiZWxzRW50cnkSCwoD",
            "a2V5GAEgASgJEg0KBXZhbHVlGAIgASgJOgI4ASJrCgZTdGF0dXMSEgoOU1RB",
            "VFVTX1VOS05PV04QABIMCghDUkVBVElORxABEgsKB1JVTk5JTkcQAhIJCgVF",
            "UlJPUhADEgwKCFNUT1BQSU5HEAQSCwoHU1RPUFBFRBAFEgwKCFNUQVJUSU5H",
            "EAYiPQoKTW9uaXRvcmluZxIMCgRuYW1lGAEgASgJEhMKC2Rlc2NyaXB0aW9u",
            "GAIgASgJEgwKBGxpbmsYAyABKAkilwMKDEhhZG9vcENvbmZpZxJACghzZXJ2",
            "aWNlcxgBIAMoDjIuLnlhbmRleC5jbG91ZC5kYXRhcHJvYy52MS5IYWRvb3BD",
            "b25maWcuU2VydmljZRJKCgpwcm9wZXJ0aWVzGAIgAygLMjYueWFuZGV4LmNs",
            "b3VkLmRhdGFwcm9jLnYxLkhhZG9vcENvbmZpZy5Qcm9wZXJ0aWVzRW50cnkS",
            "FwoPc3NoX3B1YmxpY19rZXlzGAMgAygJGjEKD1Byb3BlcnRpZXNFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6AjgBIqwBCgdTZXJ2aWNlEhcK",
            "E1NFUlZJQ0VfVU5TUEVDSUZJRUQQABIICgRIREZTEAESCAoEWUFSThACEg0K",
            "CU1BUFJFRFVDRRADEggKBEhJVkUQBBIHCgNURVoQBRINCglaT09LRUVQRVIQ",
            "BhIJCgVIQkFTRRAHEgkKBVNRT09QEAgSCQoFRkxVTUUQCRIJCgVTUEFSSxAK",
            "EgwKCFpFUFBFTElOEAsSCQoFT09aSUUQDCJbCg1DbHVzdGVyQ29uZmlnEhIK",
            "CnZlcnNpb25faWQYASABKAkSNgoGaGFkb29wGAIgASgLMiYueWFuZGV4LmNs",
            "b3VkLmRhdGFwcm9jLnYxLkhhZG9vcENvbmZpZ0JlChx5YW5kZXguY2xvdWQu",
            "YXBpLmRhdGFwcm9jLnYxWkVnaXRodWIuY29tL3lhbmRleC1jbG91ZC9nby1n",
            "ZW5wcm90by95YW5kZXgvY2xvdWQvZGF0YXByb2MvdjE7ZGF0YXByb2NiBnBy",
            "b3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Yandex.Cloud.Dataproc.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.Cluster), global::Yandex.Cloud.Dataproc.V1.Cluster.Parser, new[]{ "Id", "FolderId", "CreatedAt", "Name", "Description", "Labels", "Monitoring", "Config", "Health", "Status", "ZoneId", "ServiceAccountId", "Bucket" }, null, new[]{ typeof(global::Yandex.Cloud.Dataproc.V1.Cluster.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.Monitoring), global::Yandex.Cloud.Dataproc.V1.Monitoring.Parser, new[]{ "Name", "Description", "Link" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.HadoopConfig), global::Yandex.Cloud.Dataproc.V1.HadoopConfig.Parser, new[]{ "Services", "Properties", "SshPublicKeys" }, null, new[]{ typeof(global::Yandex.Cloud.Dataproc.V1.HadoopConfig.Types.Service) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.ClusterConfig), global::Yandex.Cloud.Dataproc.V1.ClusterConfig.Parser, new[]{ "VersionId", "Hadoop" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// Description of a Dataproc cluster. For more information, see
  /// the Yandex Dataproc [documentation](/docs/data-proc/concepts/).
  /// </summary>
  internal sealed partial class Cluster : pb::IMessage<Cluster> {
    private static readonly pb::MessageParser<Cluster> _parser = new pb::MessageParser<Cluster>(() => new Cluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Cluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.ClusterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster(Cluster other) : this() {
      id_ = other.id_;
      folderId_ = other.folderId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      monitoring_ = other.monitoring_.Clone();
      config_ = other.config_ != null ? other.config_.Clone() : null;
      health_ = other.health_;
      status_ = other.status_;
      zoneId_ = other.zoneId_;
      serviceAccountId_ = other.serviceAccountId_;
      bucket_ = other.bucket_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Cluster Clone() {
      return new Cluster(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the Dataproc cluster.
    /// This ID is assigned by Dataproc at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder that the Dataproc cluster belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Name of the Dataproc cluster.
    /// The name is unique within the folder. 1-64 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of the Dataproc cluster. 0-256 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Custom labels for the Dataproc cluster as `` key:value `` pairs.
    /// Maximum 64 per resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "monitoring" field.</summary>
    public const int MonitoringFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Dataproc.V1.Monitoring> _repeated_monitoring_codec
        = pb::FieldCodec.ForMessage(58, global::Yandex.Cloud.Dataproc.V1.Monitoring.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Dataproc.V1.Monitoring> monitoring_ = new pbc::RepeatedField<global::Yandex.Cloud.Dataproc.V1.Monitoring>();
    /// <summary>
    /// Monitoring systems relevant to the Dataproc cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Dataproc.V1.Monitoring> Monitoring {
      get { return monitoring_; }
    }

    /// <summary>Field number for the "config" field.</summary>
    public const int ConfigFieldNumber = 8;
    private global::Yandex.Cloud.Dataproc.V1.ClusterConfig config_;
    /// <summary>
    /// Configuration of the Dataproc cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.ClusterConfig Config {
      get { return config_; }
      set {
        config_ = value;
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 9;
    private global::Yandex.Cloud.Dataproc.V1.Health health_ = 0;
    /// <summary>
    /// Aggregated cluster health.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Health Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::Yandex.Cloud.Dataproc.V1.Cluster.Types.Status status_ = 0;
    /// <summary>
    /// Cluster status.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Cluster.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 11;
    private string zoneId_ = "";
    /// <summary>
    /// ID of the availability zone.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "service_account_id" field.</summary>
    public const int ServiceAccountIdFieldNumber = 12;
    private string serviceAccountId_ = "";
    /// <summary>
    /// ID of service account for Dataproc manager agent.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceAccountId {
      get { return serviceAccountId_; }
      set {
        serviceAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "bucket" field.</summary>
    public const int BucketFieldNumber = 13;
    private string bucket_ = "";
    /// <summary>
    /// Object storage bucket name for Dataproc jobs.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Bucket {
      get { return bucket_; }
      set {
        bucket_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Cluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Cluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FolderId != other.FolderId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if(!monitoring_.Equals(other.monitoring_)) return false;
      if (!object.Equals(Config, other.Config)) return false;
      if (Health != other.Health) return false;
      if (Status != other.Status) return false;
      if (ZoneId != other.ZoneId) return false;
      if (ServiceAccountId != other.ServiceAccountId) return false;
      if (Bucket != other.Bucket) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      hash ^= monitoring_.GetHashCode();
      if (config_ != null) hash ^= Config.GetHashCode();
      if (Health != 0) hash ^= Health.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      if (ZoneId.Length != 0) hash ^= ZoneId.GetHashCode();
      if (ServiceAccountId.Length != 0) hash ^= ServiceAccountId.GetHashCode();
      if (Bucket.Length != 0) hash ^= Bucket.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FolderId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      monitoring_.WriteTo(output, _repeated_monitoring_codec);
      if (config_ != null) {
        output.WriteRawTag(66);
        output.WriteMessage(Config);
      }
      if (Health != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Health);
      }
      if (Status != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      if (ZoneId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(ZoneId);
      }
      if (ServiceAccountId.Length != 0) {
        output.WriteRawTag(98);
        output.WriteString(ServiceAccountId);
      }
      if (Bucket.Length != 0) {
        output.WriteRawTag(106);
        output.WriteString(Bucket);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      size += monitoring_.CalculateSize(_repeated_monitoring_codec);
      if (config_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Config);
      }
      if (Health != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      if (ZoneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneId);
      }
      if (ServiceAccountId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ServiceAccountId);
      }
      if (Bucket.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Bucket);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Cluster other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      monitoring_.Add(other.monitoring_);
      if (other.config_ != null) {
        if (config_ == null) {
          Config = new global::Yandex.Cloud.Dataproc.V1.ClusterConfig();
        }
        Config.MergeFrom(other.Config);
      }
      if (other.Health != 0) {
        Health = other.Health;
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      if (other.ZoneId.Length != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.ServiceAccountId.Length != 0) {
        ServiceAccountId = other.ServiceAccountId;
      }
      if (other.Bucket.Length != 0) {
        Bucket = other.Bucket;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FolderId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 58: {
            monitoring_.AddEntriesFrom(input, _repeated_monitoring_codec);
            break;
          }
          case 66: {
            if (config_ == null) {
              Config = new global::Yandex.Cloud.Dataproc.V1.ClusterConfig();
            }
            input.ReadMessage(Config);
            break;
          }
          case 72: {
            Health = (global::Yandex.Cloud.Dataproc.V1.Health) input.ReadEnum();
            break;
          }
          case 80: {
            Status = (global::Yandex.Cloud.Dataproc.V1.Cluster.Types.Status) input.ReadEnum();
            break;
          }
          case 90: {
            ZoneId = input.ReadString();
            break;
          }
          case 98: {
            ServiceAccountId = input.ReadString();
            break;
          }
          case 106: {
            Bucket = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Cluster message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Status {
        /// <summary>
        /// Cluster state is unknown.
        /// </summary>
        [pbr::OriginalName("STATUS_UNKNOWN")] Unknown = 0,
        /// <summary>
        /// Cluster is being created.
        /// </summary>
        [pbr::OriginalName("CREATING")] Creating = 1,
        /// <summary>
        /// Cluster is running normally.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// Cluster encountered a problem and cannot operate.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 3,
        /// <summary>
        /// Cluster is stopping.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 4,
        /// <summary>
        /// Cluster stopped.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 5,
        /// <summary>
        /// Cluster is starting.
        /// </summary>
        [pbr::OriginalName("STARTING")] Starting = 6,
      }

    }
    #endregion

  }

  /// <summary>
  /// Monitoring system.
  /// </summary>
  internal sealed partial class Monitoring : pb::IMessage<Monitoring> {
    private static readonly pb::MessageParser<Monitoring> _parser = new pb::MessageParser<Monitoring>(() => new Monitoring());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Monitoring> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.ClusterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monitoring() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monitoring(Monitoring other) : this() {
      name_ = other.name_;
      description_ = other.description_;
      link_ = other.link_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Monitoring Clone() {
      return new Monitoring(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the monitoring system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 2;
    private string description_ = "";
    /// <summary>
    /// Description of the monitoring system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "link" field.</summary>
    public const int LinkFieldNumber = 3;
    private string link_ = "";
    /// <summary>
    /// Link to the monitoring system.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Link {
      get { return link_; }
      set {
        link_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Monitoring);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Monitoring other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (Link != other.Link) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      if (Link.Length != 0) hash ^= Link.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(Description);
      }
      if (Link.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(Link);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      if (Link.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Link);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Monitoring other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      if (other.Link.Length != 0) {
        Link = other.Link;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            Description = input.ReadString();
            break;
          }
          case 26: {
            Link = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Configuration, that describes application logic of installed services,
  /// their properties and settings.
  /// </summary>
  internal sealed partial class HadoopConfig : pb::IMessage<HadoopConfig> {
    private static readonly pb::MessageParser<HadoopConfig> _parser = new pb::MessageParser<HadoopConfig>(() => new HadoopConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HadoopConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.ClusterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HadoopConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HadoopConfig(HadoopConfig other) : this() {
      services_ = other.services_.Clone();
      properties_ = other.properties_.Clone();
      sshPublicKeys_ = other.sshPublicKeys_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HadoopConfig Clone() {
      return new HadoopConfig(this);
    }

    /// <summary>Field number for the "services" field.</summary>
    public const int ServicesFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Dataproc.V1.HadoopConfig.Types.Service> _repeated_services_codec
        = pb::FieldCodec.ForEnum(10, x => (int) x, x => (global::Yandex.Cloud.Dataproc.V1.HadoopConfig.Types.Service) x);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Dataproc.V1.HadoopConfig.Types.Service> services_ = new pbc::RepeatedField<global::Yandex.Cloud.Dataproc.V1.HadoopConfig.Types.Service>();
    /// <summary>
    /// List of used services in cluster (for default use empty)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Dataproc.V1.HadoopConfig.Types.Service> Services {
      get { return services_; }
    }

    /// <summary>Field number for the "properties" field.</summary>
    public const int PropertiesFieldNumber = 2;
    private static readonly pbc::MapField<string, string>.Codec _map_properties_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 18);
    private readonly pbc::MapField<string, string> properties_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Properties passed to all hosts *-site.xml configurations.
    /// In key you need to use prefix 'hdfs:dfs.replication' for setting
    /// property 'dfs.replication' in /etc/hadoop/conf/hdfs-site.xml
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Properties {
      get { return properties_; }
    }

    /// <summary>Field number for the "ssh_public_keys" field.</summary>
    public const int SshPublicKeysFieldNumber = 3;
    private static readonly pb::FieldCodec<string> _repeated_sshPublicKeys_codec
        = pb::FieldCodec.ForString(26);
    private readonly pbc::RepeatedField<string> sshPublicKeys_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// List of ssh public keys to access to cluster hosts.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SshPublicKeys {
      get { return sshPublicKeys_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HadoopConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HadoopConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!services_.Equals(other.services_)) return false;
      if (!Properties.Equals(other.Properties)) return false;
      if(!sshPublicKeys_.Equals(other.sshPublicKeys_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= services_.GetHashCode();
      hash ^= Properties.GetHashCode();
      hash ^= sshPublicKeys_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      services_.WriteTo(output, _repeated_services_codec);
      properties_.WriteTo(output, _map_properties_codec);
      sshPublicKeys_.WriteTo(output, _repeated_sshPublicKeys_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += services_.CalculateSize(_repeated_services_codec);
      size += properties_.CalculateSize(_map_properties_codec);
      size += sshPublicKeys_.CalculateSize(_repeated_sshPublicKeys_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HadoopConfig other) {
      if (other == null) {
        return;
      }
      services_.Add(other.services_);
      properties_.Add(other.properties_);
      sshPublicKeys_.Add(other.sshPublicKeys_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10:
          case 8: {
            services_.AddEntriesFrom(input, _repeated_services_codec);
            break;
          }
          case 18: {
            properties_.AddEntriesFrom(input, _map_properties_codec);
            break;
          }
          case 26: {
            sshPublicKeys_.AddEntriesFrom(input, _repeated_sshPublicKeys_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the HadoopConfig message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Service {
        [pbr::OriginalName("SERVICE_UNSPECIFIED")] Unspecified = 0,
        [pbr::OriginalName("HDFS")] Hdfs = 1,
        [pbr::OriginalName("YARN")] Yarn = 2,
        [pbr::OriginalName("MAPREDUCE")] Mapreduce = 3,
        [pbr::OriginalName("HIVE")] Hive = 4,
        [pbr::OriginalName("TEZ")] Tez = 5,
        [pbr::OriginalName("ZOOKEEPER")] Zookeeper = 6,
        [pbr::OriginalName("HBASE")] Hbase = 7,
        [pbr::OriginalName("SQOOP")] Sqoop = 8,
        [pbr::OriginalName("FLUME")] Flume = 9,
        [pbr::OriginalName("SPARK")] Spark = 10,
        [pbr::OriginalName("ZEPPELIN")] Zeppelin = 11,
        [pbr::OriginalName("OOZIE")] Oozie = 12,
      }

    }
    #endregion

  }

  internal sealed partial class ClusterConfig : pb::IMessage<ClusterConfig> {
    private static readonly pb::MessageParser<ClusterConfig> _parser = new pb::MessageParser<ClusterConfig>(() => new ClusterConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ClusterConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.ClusterReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig(ClusterConfig other) : this() {
      versionId_ = other.versionId_;
      hadoop_ = other.hadoop_ != null ? other.hadoop_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ClusterConfig Clone() {
      return new ClusterConfig(this);
    }

    /// <summary>Field number for the "version_id" field.</summary>
    public const int VersionIdFieldNumber = 1;
    private string versionId_ = "";
    /// <summary>
    /// Version of image for cluster provisioning.
    /// All available versions are listed in the [documentation](/docs/managed-hadoop/concepts/image-versions).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string VersionId {
      get { return versionId_; }
      set {
        versionId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hadoop" field.</summary>
    public const int HadoopFieldNumber = 2;
    private global::Yandex.Cloud.Dataproc.V1.HadoopConfig hadoop_;
    /// <summary>
    /// Dataproc specific options
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.HadoopConfig Hadoop {
      get { return hadoop_; }
      set {
        hadoop_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ClusterConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ClusterConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VersionId != other.VersionId) return false;
      if (!object.Equals(Hadoop, other.Hadoop)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VersionId.Length != 0) hash ^= VersionId.GetHashCode();
      if (hadoop_ != null) hash ^= Hadoop.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VersionId.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(VersionId);
      }
      if (hadoop_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Hadoop);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VersionId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(VersionId);
      }
      if (hadoop_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Hadoop);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ClusterConfig other) {
      if (other == null) {
        return;
      }
      if (other.VersionId.Length != 0) {
        VersionId = other.VersionId;
      }
      if (other.hadoop_ != null) {
        if (hadoop_ == null) {
          Hadoop = new global::Yandex.Cloud.Dataproc.V1.HadoopConfig();
        }
        Hadoop.MergeFrom(other.Hadoop);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VersionId = input.ReadString();
            break;
          }
          case 18: {
            if (hadoop_ == null) {
              Hadoop = new global::Yandex.Cloud.Dataproc.V1.HadoopConfig();
            }
            input.ReadMessage(Hadoop);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
