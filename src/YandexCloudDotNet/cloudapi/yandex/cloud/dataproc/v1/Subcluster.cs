// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/dataproc/v1/subcluster.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Dataproc.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/dataproc/v1/subcluster.proto</summary>
  internal static partial class SubclusterReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/dataproc/v1/subcluster.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SubclusterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cil5YW5kZXgvY2xvdWQvZGF0YXByb2MvdjEvc3ViY2x1c3Rlci5wcm90bxIY",
            "eWFuZGV4LmNsb3VkLmRhdGFwcm9jLnYxGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvGiV5YW5kZXgvY2xvdWQvZGF0YXByb2MvdjEvY29tbW9u",
            "LnByb3RvIvgBCgpTdWJjbHVzdGVyEgoKAmlkGAEgASgJEhIKCmNsdXN0ZXJf",
            "aWQYAiABKAkSLgoKY3JlYXRlZF9hdBgDIAEoCzIaLmdvb2dsZS5wcm90b2J1",
            "Zi5UaW1lc3RhbXASDAoEbmFtZRgEIAEoCRIsCgRyb2xlGAUgASgOMh4ueWFu",
            "ZGV4LmNsb3VkLmRhdGFwcm9jLnYxLlJvbGUSNgoJcmVzb3VyY2VzGAYgASgL",
            "MiMueWFuZGV4LmNsb3VkLmRhdGFwcm9jLnYxLlJlc291cmNlcxIRCglzdWJu",
            "ZXRfaWQYByABKAkSEwoLaG9zdHNfY291bnQYCCABKAMiqAEKBEhvc3QSDAoE",
            "bmFtZRgBIAEoCRIVCg1zdWJjbHVzdGVyX2lkGAIgASgJEjAKBmhlYWx0aBgD",
            "IAEoDjIgLnlhbmRleC5jbG91ZC5kYXRhcHJvYy52MS5IZWFsdGgSGwoTY29t",
            "cHV0ZV9pbnN0YW5jZV9pZBgEIAEoCRIsCgRyb2xlGAUgASgOMh4ueWFuZGV4",
            "LmNsb3VkLmRhdGFwcm9jLnYxLlJvbGUqSwoEUm9sZRIUChBST0xFX1VOU1BF",
            "Q0lGSUVEEAASDgoKTUFTVEVSTk9ERRABEgwKCERBVEFOT0RFEAISDwoLQ09N",
            "UFVURU5PREUQA0JlChx5YW5kZXguY2xvdWQuYXBpLmRhdGFwcm9jLnYxWkVn",
            "aXRodWIuY29tL3lhbmRleC1jbG91ZC9nby1nZW5wcm90by95YW5kZXgvY2xv",
            "dWQvZGF0YXByb2MvdjE7ZGF0YXByb2NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Yandex.Cloud.Dataproc.V1.CommonReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Yandex.Cloud.Dataproc.V1.Role), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.Subcluster), global::Yandex.Cloud.Dataproc.V1.Subcluster.Parser, new[]{ "Id", "ClusterId", "CreatedAt", "Name", "Role", "Resources", "SubnetId", "HostsCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.Host), global::Yandex.Cloud.Dataproc.V1.Host.Parser, new[]{ "Name", "SubclusterId", "Health", "ComputeInstanceId", "Role" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum Role {
    /// <summary>
    /// Host have undefined role
    /// </summary>
    [pbr::OriginalName("ROLE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// Masternode includes these services (depends on given component list)
    /// * HDFS Namenode, Secondary Namenode,
    /// * YARN ResorceManager, Timeline Server,
    /// * Zookeeper,
    /// * Hive Server, Hive Metastore, HCatalog
    /// * HBase Master,
    /// * Spark History Server,
    /// * Zeppelin
    /// </summary>
    [pbr::OriginalName("MASTERNODE")] Masternode = 1,
    /// <summary>
    /// Datanode includes these services (depends on given component list)
    /// * HDFS Datanode,
    /// * YARN NodeManager,
    /// * HBase RegionServer,
    /// * Spark libraries.
    /// </summary>
    [pbr::OriginalName("DATANODE")] Datanode = 2,
    /// <summary>
    /// Computenodes includes these services (depends on given component list)
    /// * YARN NodeManager.
    /// * Spark libraries.
    /// </summary>
    [pbr::OriginalName("COMPUTENODE")] Computenode = 3,
  }

  #endregion

  #region Messages
  /// <summary>
  /// A Dataproc Subcluster resource. For more information, see
  /// the [Concepts](/docs/data-proc/concepts) section of the documentation.
  /// </summary>
  internal sealed partial class Subcluster : pb::IMessage<Subcluster> {
    private static readonly pb::MessageParser<Subcluster> _parser = new pb::MessageParser<Subcluster>(() => new Subcluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subcluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.SubclusterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subcluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subcluster(Subcluster other) : this() {
      id_ = other.id_;
      clusterId_ = other.clusterId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      name_ = other.name_;
      role_ = other.role_;
      resources_ = other.resources_ != null ? other.resources_.Clone() : null;
      subnetId_ = other.subnetId_;
      hostsCount_ = other.hostsCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subcluster Clone() {
      return new Subcluster(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the Dataproc subcluster.
    /// This ID is assigned by Dataproc in the process of creating Dataproc subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 2;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the Dataproc cluster.
    /// This ID is assigned by Dataproc in the process of creating Dataproc cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Name of the Dataproc subcluster.
    /// The name is unique within the folder. 1-64 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 5;
    private global::Yandex.Cloud.Dataproc.V1.Role role_ = 0;
    /// <summary>
    /// Role of all hosts in subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Role Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 6;
    private global::Yandex.Cloud.Dataproc.V1.Resources resources_;
    /// <summary>
    /// Resource configuration for hosts in subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Resources Resources {
      get { return resources_; }
      set {
        resources_ = value;
      }
    }

    /// <summary>Field number for the "subnet_id" field.</summary>
    public const int SubnetIdFieldNumber = 7;
    private string subnetId_ = "";
    /// <summary>
    /// ID of using compute subnet for hosts in subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetId {
      get { return subnetId_; }
      set {
        subnetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hosts_count" field.</summary>
    public const int HostsCountFieldNumber = 8;
    private long hostsCount_;
    /// <summary>
    /// Number of hosts in subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HostsCount {
      get { return hostsCount_; }
      set {
        hostsCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subcluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subcluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (Name != other.Name) return false;
      if (Role != other.Role) return false;
      if (!object.Equals(Resources, other.Resources)) return false;
      if (SubnetId != other.SubnetId) return false;
      if (HostsCount != other.HostsCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Role != 0) hash ^= Role.GetHashCode();
      if (resources_ != null) hash ^= Resources.GetHashCode();
      if (SubnetId.Length != 0) hash ^= SubnetId.GetHashCode();
      if (HostsCount != 0L) hash ^= HostsCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Role != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Role);
      }
      if (resources_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Resources);
      }
      if (SubnetId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SubnetId);
      }
      if (HostsCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(HostsCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Role != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (resources_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resources);
      }
      if (SubnetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetId);
      }
      if (HostsCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HostsCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subcluster other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Role != 0) {
        Role = other.Role;
      }
      if (other.resources_ != null) {
        if (resources_ == null) {
          Resources = new global::Yandex.Cloud.Dataproc.V1.Resources();
        }
        Resources.MergeFrom(other.Resources);
      }
      if (other.SubnetId.Length != 0) {
        SubnetId = other.SubnetId;
      }
      if (other.HostsCount != 0L) {
        HostsCount = other.HostsCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ClusterId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Role = (global::Yandex.Cloud.Dataproc.V1.Role) input.ReadEnum();
            break;
          }
          case 50: {
            if (resources_ == null) {
              Resources = new global::Yandex.Cloud.Dataproc.V1.Resources();
            }
            input.ReadMessage(Resources);
            break;
          }
          case 58: {
            SubnetId = input.ReadString();
            break;
          }
          case 64: {
            HostsCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Dataproc Host resource. For more information, see
  /// the [Concepts](/docs/data-proc/concepts) section of the documentation.
  /// </summary>
  internal sealed partial class Host : pb::IMessage<Host> {
    private static readonly pb::MessageParser<Host> _parser = new pb::MessageParser<Host>(() => new Host());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Host> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.SubclusterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host(Host other) : this() {
      name_ = other.name_;
      subclusterId_ = other.subclusterId_;
      health_ = other.health_;
      computeInstanceId_ = other.computeInstanceId_;
      role_ = other.role_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host Clone() {
      return new Host(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the Dataproc host. The host name is assigned by Dataproc at creation time, and cannot be changed.
    /// 1-63 characters long.
    ///
    /// The name is unique across all existing Dataproc hosts in Yandex.Cloud, as it defines the FQDN of the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subcluster_id" field.</summary>
    public const int SubclusterIdFieldNumber = 2;
    private string subclusterId_ = "";
    /// <summary>
    /// ID of Dataproc subcluster host. The ID is assigned by Dataproc at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubclusterId {
      get { return subclusterId_; }
      set {
        subclusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 3;
    private global::Yandex.Cloud.Dataproc.V1.Health health_ = 0;
    /// <summary>
    /// Status code of the aggregated health of the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Health Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "compute_instance_id" field.</summary>
    public const int ComputeInstanceIdFieldNumber = 4;
    private string computeInstanceId_ = "";
    /// <summary>
    /// ID of compute instance appropriated to the Dataproc host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComputeInstanceId {
      get { return computeInstanceId_; }
      set {
        computeInstanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 5;
    private global::Yandex.Cloud.Dataproc.V1.Role role_ = 0;
    /// <summary>
    /// Role of current host in cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Role Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Host);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Host other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SubclusterId != other.SubclusterId) return false;
      if (Health != other.Health) return false;
      if (ComputeInstanceId != other.ComputeInstanceId) return false;
      if (Role != other.Role) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SubclusterId.Length != 0) hash ^= SubclusterId.GetHashCode();
      if (Health != 0) hash ^= Health.GetHashCode();
      if (ComputeInstanceId.Length != 0) hash ^= ComputeInstanceId.GetHashCode();
      if (Role != 0) hash ^= Role.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SubclusterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubclusterId);
      }
      if (Health != 0) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Health);
      }
      if (ComputeInstanceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ComputeInstanceId);
      }
      if (Role != 0) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Role);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SubclusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubclusterId);
      }
      if (Health != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (ComputeInstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComputeInstanceId);
      }
      if (Role != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Host other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SubclusterId.Length != 0) {
        SubclusterId = other.SubclusterId;
      }
      if (other.Health != 0) {
        Health = other.Health;
      }
      if (other.ComputeInstanceId.Length != 0) {
        ComputeInstanceId = other.ComputeInstanceId;
      }
      if (other.Role != 0) {
        Role = other.Role;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SubclusterId = input.ReadString();
            break;
          }
          case 24: {
            Health = (global::Yandex.Cloud.Dataproc.V1.Health) input.ReadEnum();
            break;
          }
          case 34: {
            ComputeInstanceId = input.ReadString();
            break;
          }
          case 40: {
            Role = (global::Yandex.Cloud.Dataproc.V1.Role) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
