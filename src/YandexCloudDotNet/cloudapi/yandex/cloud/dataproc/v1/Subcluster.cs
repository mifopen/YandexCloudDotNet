// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/dataproc/v1/subcluster.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Dataproc.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/dataproc/v1/subcluster.proto</summary>
  internal static partial class SubclusterReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/dataproc/v1/subcluster.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static SubclusterReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cil5YW5kZXgvY2xvdWQvZGF0YXByb2MvdjEvc3ViY2x1c3Rlci5wcm90bxIY",
            "eWFuZGV4LmNsb3VkLmRhdGFwcm9jLnYxGh9nb29nbGUvcHJvdG9idWYvdGlt",
            "ZXN0YW1wLnByb3RvGiV5YW5kZXgvY2xvdWQvZGF0YXByb2MvdjEvY29tbW9u",
            "LnByb3RvGh15YW5kZXgvY2xvdWQvdmFsaWRhdGlvbi5wcm90bxoeZ29vZ2xl",
            "L3Byb3RvYnVmL2R1cmF0aW9uLnByb3RvIvICChFBdXRvc2NhbGluZ0NvbmZp",
            "ZxIiCg9tYXhfaG9zdHNfY291bnQYASABKANCCfrHMQUxLTEwMBITCgtwcmVl",
            "bXB0aWJsZRgCIAEoCBJHChRtZWFzdXJlbWVudF9kdXJhdGlvbhgDIAEoCzIZ",
            "Lmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkIO6McxAfrHMQYxbS0xMG0SPQoP",
            "d2FybXVwX2R1cmF0aW9uGAQgASgLMhkuZ29vZ2xlLnByb3RvYnVmLkR1cmF0",
            "aW9uQgn6xzEFPD0xMG0SRQoWc3RhYmlsaXphdGlvbl9kdXJhdGlvbhgFIAEo",
            "CzIZLmdvb2dsZS5wcm90b2J1Zi5EdXJhdGlvbkIK+scxBjFtLTMwbRIqChZj",
            "cHVfdXRpbGl6YXRpb25fdGFyZ2V0GAYgASgBQgr6xzEGMTAtMTAwEikKFGRl",
            "Y29tbWlzc2lvbl90aW1lb3V0GAcgASgDQgv6xzEHMC04NjQwMCLsAgoKU3Vi",
            "Y2x1c3RlchIKCgJpZBgBIAEoCRISCgpjbHVzdGVyX2lkGAIgASgJEi4KCmNy",
            "ZWF0ZWRfYXQYAyABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wEhYK",
            "BG5hbWUYBCABKAlCCIrIMQQxLTYzEiwKBHJvbGUYBSABKA4yHi55YW5kZXgu",
            "Y2xvdWQuZGF0YXByb2MudjEuUm9sZRI2CglyZXNvdXJjZXMYBiABKAsyIy55",
            "YW5kZXguY2xvdWQuZGF0YXByb2MudjEuUmVzb3VyY2VzEhEKCXN1Ym5ldF9p",
            "ZBgHIAEoCRITCgtob3N0c19jb3VudBgIIAEoAxJHChJhdXRvc2NhbGluZ19j",
            "b25maWcYCiABKAsyKy55YW5kZXguY2xvdWQuZGF0YXByb2MudjEuQXV0b3Nj",
            "YWxpbmdDb25maWcSGQoRaW5zdGFuY2VfZ3JvdXBfaWQYCyABKAlKBAgJEAoi",
            "qAEKBEhvc3QSDAoEbmFtZRgBIAEoCRIVCg1zdWJjbHVzdGVyX2lkGAIgASgJ",
            "EjAKBmhlYWx0aBgDIAEoDjIgLnlhbmRleC5jbG91ZC5kYXRhcHJvYy52MS5I",
            "ZWFsdGgSGwoTY29tcHV0ZV9pbnN0YW5jZV9pZBgEIAEoCRIsCgRyb2xlGAUg",
            "ASgOMh4ueWFuZGV4LmNsb3VkLmRhdGFwcm9jLnYxLlJvbGUqSwoEUm9sZRIU",
            "ChBST0xFX1VOU1BFQ0lGSUVEEAASDgoKTUFTVEVSTk9ERRABEgwKCERBVEFO",
            "T0RFEAISDwoLQ09NUFVURU5PREUQA0JlChx5YW5kZXguY2xvdWQuYXBpLmRh",
            "dGFwcm9jLnYxWkVnaXRodWIuY29tL3lhbmRleC1jbG91ZC9nby1nZW5wcm90",
            "by95YW5kZXgvY2xvdWQvZGF0YXByb2MvdjE7ZGF0YXByb2NiBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, global::Yandex.Cloud.Dataproc.V1.CommonReflection.Descriptor, global::Yandex.Cloud.ValidationReflection.Descriptor, global::Google.Protobuf.WellKnownTypes.DurationReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Yandex.Cloud.Dataproc.V1.Role), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.AutoscalingConfig), global::Yandex.Cloud.Dataproc.V1.AutoscalingConfig.Parser, new[]{ "MaxHostsCount", "Preemptible", "MeasurementDuration", "WarmupDuration", "StabilizationDuration", "CpuUtilizationTarget", "DecommissionTimeout" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.Subcluster), global::Yandex.Cloud.Dataproc.V1.Subcluster.Parser, new[]{ "Id", "ClusterId", "CreatedAt", "Name", "Role", "Resources", "SubnetId", "HostsCount", "AutoscalingConfig", "InstanceGroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Dataproc.V1.Host), global::Yandex.Cloud.Dataproc.V1.Host.Parser, new[]{ "Name", "SubclusterId", "Health", "ComputeInstanceId", "Role" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum Role {
    [pbr::OriginalName("ROLE_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// The subcluster fulfills the master role.
    ///
    /// Master can run the following services, depending on the requested components:
    /// * HDFS: Namenode, Secondary Namenode
    /// * YARN: ResourceManager, Timeline Server
    /// * HBase Master
    /// * Hive: Server, Metastore, HCatalog
    /// * Spark History Server
    /// * Zeppelin
    /// * ZooKeeper
    /// </summary>
    [pbr::OriginalName("MASTERNODE")] Masternode = 1,
    /// <summary>
    /// The subcluster is a DATANODE in a Data Proc cluster.
    ///
    /// DATANODE can run the following services, depending on the requested components:
    /// * HDFS DataNode
    /// * YARN NodeManager
    /// * HBase RegionServer
    /// * Spark libraries
    /// </summary>
    [pbr::OriginalName("DATANODE")] Datanode = 2,
    /// <summary>
    /// The subcluster is a COMPUTENODE in a Data Proc cluster.
    ///
    /// COMPUTENODE can run the following services, depending on the requested components:
    /// * YARN NodeManager
    /// * Spark libraries
    /// </summary>
    [pbr::OriginalName("COMPUTENODE")] Computenode = 3,
  }

  #endregion

  #region Messages
  internal sealed partial class AutoscalingConfig : pb::IMessage<AutoscalingConfig> {
    private static readonly pb::MessageParser<AutoscalingConfig> _parser = new pb::MessageParser<AutoscalingConfig>(() => new AutoscalingConfig());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AutoscalingConfig> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.SubclusterReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoscalingConfig() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoscalingConfig(AutoscalingConfig other) : this() {
      maxHostsCount_ = other.maxHostsCount_;
      preemptible_ = other.preemptible_;
      measurementDuration_ = other.measurementDuration_ != null ? other.measurementDuration_.Clone() : null;
      warmupDuration_ = other.warmupDuration_ != null ? other.warmupDuration_.Clone() : null;
      stabilizationDuration_ = other.stabilizationDuration_ != null ? other.stabilizationDuration_.Clone() : null;
      cpuUtilizationTarget_ = other.cpuUtilizationTarget_;
      decommissionTimeout_ = other.decommissionTimeout_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AutoscalingConfig Clone() {
      return new AutoscalingConfig(this);
    }

    /// <summary>Field number for the "max_hosts_count" field.</summary>
    public const int MaxHostsCountFieldNumber = 1;
    private long maxHostsCount_;
    /// <summary>
    /// Upper limit for total instance subcluster count.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long MaxHostsCount {
      get { return maxHostsCount_; }
      set {
        maxHostsCount_ = value;
      }
    }

    /// <summary>Field number for the "preemptible" field.</summary>
    public const int PreemptibleFieldNumber = 2;
    private bool preemptible_;
    /// <summary>
    /// Preemptible instances are stopped at least once every 24 hours, and can be stopped at any time
    /// if their resources are needed by Compute.
    /// For more information, see [Preemptible Virtual Machines](/docs/compute/concepts/preemptible-vm).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Preemptible {
      get { return preemptible_; }
      set {
        preemptible_ = value;
      }
    }

    /// <summary>Field number for the "measurement_duration" field.</summary>
    public const int MeasurementDurationFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Duration measurementDuration_;
    /// <summary>
    /// Time in seconds allotted for averaging metrics.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration MeasurementDuration {
      get { return measurementDuration_; }
      set {
        measurementDuration_ = value;
      }
    }

    /// <summary>Field number for the "warmup_duration" field.</summary>
    public const int WarmupDurationFieldNumber = 4;
    private global::Google.Protobuf.WellKnownTypes.Duration warmupDuration_;
    /// <summary>
    /// The warmup time of the instance in seconds. During this time,
    /// traffic is sent to the instance, but instance metrics are not collected.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration WarmupDuration {
      get { return warmupDuration_; }
      set {
        warmupDuration_ = value;
      }
    }

    /// <summary>Field number for the "stabilization_duration" field.</summary>
    public const int StabilizationDurationFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Duration stabilizationDuration_;
    /// <summary>
    /// Minimum amount of time in seconds allotted for monitoring before
    /// Instance Groups can reduce the number of instances in the group.
    /// During this time, the group size doesn't decrease, even if the new metric values
    /// indicate that it should.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Duration StabilizationDuration {
      get { return stabilizationDuration_; }
      set {
        stabilizationDuration_ = value;
      }
    }

    /// <summary>Field number for the "cpu_utilization_target" field.</summary>
    public const int CpuUtilizationTargetFieldNumber = 6;
    private double cpuUtilizationTarget_;
    /// <summary>
    /// Defines an autoscaling rule based on the average CPU utilization of the instance group.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public double CpuUtilizationTarget {
      get { return cpuUtilizationTarget_; }
      set {
        cpuUtilizationTarget_ = value;
      }
    }

    /// <summary>Field number for the "decommission_timeout" field.</summary>
    public const int DecommissionTimeoutFieldNumber = 7;
    private long decommissionTimeout_;
    /// <summary>
    /// Timeout to gracefully decommission nodes during downscaling. In seconds. Default value: 120
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DecommissionTimeout {
      get { return decommissionTimeout_; }
      set {
        decommissionTimeout_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AutoscalingConfig);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AutoscalingConfig other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (MaxHostsCount != other.MaxHostsCount) return false;
      if (Preemptible != other.Preemptible) return false;
      if (!object.Equals(MeasurementDuration, other.MeasurementDuration)) return false;
      if (!object.Equals(WarmupDuration, other.WarmupDuration)) return false;
      if (!object.Equals(StabilizationDuration, other.StabilizationDuration)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(CpuUtilizationTarget, other.CpuUtilizationTarget)) return false;
      if (DecommissionTimeout != other.DecommissionTimeout) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (MaxHostsCount != 0L) hash ^= MaxHostsCount.GetHashCode();
      if (Preemptible != false) hash ^= Preemptible.GetHashCode();
      if (measurementDuration_ != null) hash ^= MeasurementDuration.GetHashCode();
      if (warmupDuration_ != null) hash ^= WarmupDuration.GetHashCode();
      if (stabilizationDuration_ != null) hash ^= StabilizationDuration.GetHashCode();
      if (CpuUtilizationTarget != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(CpuUtilizationTarget);
      if (DecommissionTimeout != 0L) hash ^= DecommissionTimeout.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (MaxHostsCount != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(MaxHostsCount);
      }
      if (Preemptible != false) {
        output.WriteRawTag(16);
        output.WriteBool(Preemptible);
      }
      if (measurementDuration_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(MeasurementDuration);
      }
      if (warmupDuration_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(WarmupDuration);
      }
      if (stabilizationDuration_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StabilizationDuration);
      }
      if (CpuUtilizationTarget != 0D) {
        output.WriteRawTag(49);
        output.WriteDouble(CpuUtilizationTarget);
      }
      if (DecommissionTimeout != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(DecommissionTimeout);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (MaxHostsCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(MaxHostsCount);
      }
      if (Preemptible != false) {
        size += 1 + 1;
      }
      if (measurementDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(MeasurementDuration);
      }
      if (warmupDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(WarmupDuration);
      }
      if (stabilizationDuration_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StabilizationDuration);
      }
      if (CpuUtilizationTarget != 0D) {
        size += 1 + 8;
      }
      if (DecommissionTimeout != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DecommissionTimeout);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AutoscalingConfig other) {
      if (other == null) {
        return;
      }
      if (other.MaxHostsCount != 0L) {
        MaxHostsCount = other.MaxHostsCount;
      }
      if (other.Preemptible != false) {
        Preemptible = other.Preemptible;
      }
      if (other.measurementDuration_ != null) {
        if (measurementDuration_ == null) {
          MeasurementDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        MeasurementDuration.MergeFrom(other.MeasurementDuration);
      }
      if (other.warmupDuration_ != null) {
        if (warmupDuration_ == null) {
          WarmupDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        WarmupDuration.MergeFrom(other.WarmupDuration);
      }
      if (other.stabilizationDuration_ != null) {
        if (stabilizationDuration_ == null) {
          StabilizationDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
        }
        StabilizationDuration.MergeFrom(other.StabilizationDuration);
      }
      if (other.CpuUtilizationTarget != 0D) {
        CpuUtilizationTarget = other.CpuUtilizationTarget;
      }
      if (other.DecommissionTimeout != 0L) {
        DecommissionTimeout = other.DecommissionTimeout;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            MaxHostsCount = input.ReadInt64();
            break;
          }
          case 16: {
            Preemptible = input.ReadBool();
            break;
          }
          case 26: {
            if (measurementDuration_ == null) {
              MeasurementDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(MeasurementDuration);
            break;
          }
          case 34: {
            if (warmupDuration_ == null) {
              WarmupDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(WarmupDuration);
            break;
          }
          case 42: {
            if (stabilizationDuration_ == null) {
              StabilizationDuration = new global::Google.Protobuf.WellKnownTypes.Duration();
            }
            input.ReadMessage(StabilizationDuration);
            break;
          }
          case 49: {
            CpuUtilizationTarget = input.ReadDouble();
            break;
          }
          case 56: {
            DecommissionTimeout = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Data Proc subcluster. For details about the concept, see [documentation](/docs/data-proc/concepts/).
  /// </summary>
  internal sealed partial class Subcluster : pb::IMessage<Subcluster> {
    private static readonly pb::MessageParser<Subcluster> _parser = new pb::MessageParser<Subcluster>(() => new Subcluster());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Subcluster> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.SubclusterReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subcluster() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subcluster(Subcluster other) : this() {
      id_ = other.id_;
      clusterId_ = other.clusterId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      name_ = other.name_;
      role_ = other.role_;
      resources_ = other.resources_ != null ? other.resources_.Clone() : null;
      subnetId_ = other.subnetId_;
      hostsCount_ = other.hostsCount_;
      autoscalingConfig_ = other.autoscalingConfig_ != null ? other.autoscalingConfig_.Clone() : null;
      instanceGroupId_ = other.instanceGroupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Subcluster Clone() {
      return new Subcluster(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the subcluster. Generated at creation time.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "cluster_id" field.</summary>
    public const int ClusterIdFieldNumber = 2;
    private string clusterId_ = "";
    /// <summary>
    /// ID of the Data Proc cluster that the subcluster belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ClusterId {
      get { return clusterId_; }
      set {
        clusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// Creation timestamp.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Name of the subcluster. The name is unique within the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 5;
    private global::Yandex.Cloud.Dataproc.V1.Role role_ = global::Yandex.Cloud.Dataproc.V1.Role.Unspecified;
    /// <summary>
    /// Role that is fulfilled by hosts of the subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Role Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 6;
    private global::Yandex.Cloud.Dataproc.V1.Resources resources_;
    /// <summary>
    /// Resources allocated for each host in the subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Resources Resources {
      get { return resources_; }
      set {
        resources_ = value;
      }
    }

    /// <summary>Field number for the "subnet_id" field.</summary>
    public const int SubnetIdFieldNumber = 7;
    private string subnetId_ = "";
    /// <summary>
    /// ID of the VPC subnet used for hosts in the subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetId {
      get { return subnetId_; }
      set {
        subnetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "hosts_count" field.</summary>
    public const int HostsCountFieldNumber = 8;
    private long hostsCount_;
    /// <summary>
    /// Number of hosts in the subcluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long HostsCount {
      get { return hostsCount_; }
      set {
        hostsCount_ = value;
      }
    }

    /// <summary>Field number for the "autoscaling_config" field.</summary>
    public const int AutoscalingConfigFieldNumber = 10;
    private global::Yandex.Cloud.Dataproc.V1.AutoscalingConfig autoscalingConfig_;
    /// <summary>
    /// Configuration for instance group based subclusters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.AutoscalingConfig AutoscalingConfig {
      get { return autoscalingConfig_; }
      set {
        autoscalingConfig_ = value;
      }
    }

    /// <summary>Field number for the "instance_group_id" field.</summary>
    public const int InstanceGroupIdFieldNumber = 11;
    private string instanceGroupId_ = "";
    /// <summary>
    /// ID of Compute Instance Group for autoscaling subclusters
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string InstanceGroupId {
      get { return instanceGroupId_; }
      set {
        instanceGroupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Subcluster);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Subcluster other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (ClusterId != other.ClusterId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (Name != other.Name) return false;
      if (Role != other.Role) return false;
      if (!object.Equals(Resources, other.Resources)) return false;
      if (SubnetId != other.SubnetId) return false;
      if (HostsCount != other.HostsCount) return false;
      if (!object.Equals(AutoscalingConfig, other.AutoscalingConfig)) return false;
      if (InstanceGroupId != other.InstanceGroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (ClusterId.Length != 0) hash ^= ClusterId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Role != global::Yandex.Cloud.Dataproc.V1.Role.Unspecified) hash ^= Role.GetHashCode();
      if (resources_ != null) hash ^= Resources.GetHashCode();
      if (SubnetId.Length != 0) hash ^= SubnetId.GetHashCode();
      if (HostsCount != 0L) hash ^= HostsCount.GetHashCode();
      if (autoscalingConfig_ != null) hash ^= AutoscalingConfig.GetHashCode();
      if (InstanceGroupId.Length != 0) hash ^= InstanceGroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (ClusterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(ClusterId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Role != global::Yandex.Cloud.Dataproc.V1.Role.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Role);
      }
      if (resources_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(Resources);
      }
      if (SubnetId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(SubnetId);
      }
      if (HostsCount != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(HostsCount);
      }
      if (autoscalingConfig_ != null) {
        output.WriteRawTag(82);
        output.WriteMessage(AutoscalingConfig);
      }
      if (InstanceGroupId.Length != 0) {
        output.WriteRawTag(90);
        output.WriteString(InstanceGroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (ClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ClusterId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Role != global::Yandex.Cloud.Dataproc.V1.Role.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (resources_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resources);
      }
      if (SubnetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetId);
      }
      if (HostsCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(HostsCount);
      }
      if (autoscalingConfig_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(AutoscalingConfig);
      }
      if (InstanceGroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(InstanceGroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Subcluster other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.ClusterId.Length != 0) {
        ClusterId = other.ClusterId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Role != global::Yandex.Cloud.Dataproc.V1.Role.Unspecified) {
        Role = other.Role;
      }
      if (other.resources_ != null) {
        if (resources_ == null) {
          Resources = new global::Yandex.Cloud.Dataproc.V1.Resources();
        }
        Resources.MergeFrom(other.Resources);
      }
      if (other.SubnetId.Length != 0) {
        SubnetId = other.SubnetId;
      }
      if (other.HostsCount != 0L) {
        HostsCount = other.HostsCount;
      }
      if (other.autoscalingConfig_ != null) {
        if (autoscalingConfig_ == null) {
          AutoscalingConfig = new global::Yandex.Cloud.Dataproc.V1.AutoscalingConfig();
        }
        AutoscalingConfig.MergeFrom(other.AutoscalingConfig);
      }
      if (other.InstanceGroupId.Length != 0) {
        InstanceGroupId = other.InstanceGroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            ClusterId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 40: {
            Role = (global::Yandex.Cloud.Dataproc.V1.Role) input.ReadEnum();
            break;
          }
          case 50: {
            if (resources_ == null) {
              Resources = new global::Yandex.Cloud.Dataproc.V1.Resources();
            }
            input.ReadMessage(Resources);
            break;
          }
          case 58: {
            SubnetId = input.ReadString();
            break;
          }
          case 64: {
            HostsCount = input.ReadInt64();
            break;
          }
          case 82: {
            if (autoscalingConfig_ == null) {
              AutoscalingConfig = new global::Yandex.Cloud.Dataproc.V1.AutoscalingConfig();
            }
            input.ReadMessage(AutoscalingConfig);
            break;
          }
          case 90: {
            InstanceGroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// A Data Proc host. For details about the concept, see [documentation](/docs/data-proc/concepts/).
  /// </summary>
  internal sealed partial class Host : pb::IMessage<Host> {
    private static readonly pb::MessageParser<Host> _parser = new pb::MessageParser<Host>(() => new Host());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Host> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Dataproc.V1.SubclusterReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host(Host other) : this() {
      name_ = other.name_;
      subclusterId_ = other.subclusterId_;
      health_ = other.health_;
      computeInstanceId_ = other.computeInstanceId_;
      role_ = other.role_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Host Clone() {
      return new Host(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private string name_ = "";
    /// <summary>
    /// Name of the Data Proc host. The host name is assigned by Data Proc at creation time
    /// and cannot be changed. The name is generated to be unique across all existing Data Proc
    /// hosts in Yandex.Cloud, as it defines the FQDN of the host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subcluster_id" field.</summary>
    public const int SubclusterIdFieldNumber = 2;
    private string subclusterId_ = "";
    /// <summary>
    /// ID of the Data Proc subcluster that the host belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubclusterId {
      get { return subclusterId_; }
      set {
        subclusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "health" field.</summary>
    public const int HealthFieldNumber = 3;
    private global::Yandex.Cloud.Dataproc.V1.Health health_ = global::Yandex.Cloud.Dataproc.V1.Health.Unknown;
    /// <summary>
    /// Host status code.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Health Health {
      get { return health_; }
      set {
        health_ = value;
      }
    }

    /// <summary>Field number for the "compute_instance_id" field.</summary>
    public const int ComputeInstanceIdFieldNumber = 4;
    private string computeInstanceId_ = "";
    /// <summary>
    /// ID of the Compute virtual machine that is used as the Data Proc host.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ComputeInstanceId {
      get { return computeInstanceId_; }
      set {
        computeInstanceId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "role" field.</summary>
    public const int RoleFieldNumber = 5;
    private global::Yandex.Cloud.Dataproc.V1.Role role_ = global::Yandex.Cloud.Dataproc.V1.Role.Unspecified;
    /// <summary>
    /// Role of the host in the cluster.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Dataproc.V1.Role Role {
      get { return role_; }
      set {
        role_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Host);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Host other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (SubclusterId != other.SubclusterId) return false;
      if (Health != other.Health) return false;
      if (ComputeInstanceId != other.ComputeInstanceId) return false;
      if (Role != other.Role) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (SubclusterId.Length != 0) hash ^= SubclusterId.GetHashCode();
      if (Health != global::Yandex.Cloud.Dataproc.V1.Health.Unknown) hash ^= Health.GetHashCode();
      if (ComputeInstanceId.Length != 0) hash ^= ComputeInstanceId.GetHashCode();
      if (Role != global::Yandex.Cloud.Dataproc.V1.Role.Unspecified) hash ^= Role.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Name);
      }
      if (SubclusterId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(SubclusterId);
      }
      if (Health != global::Yandex.Cloud.Dataproc.V1.Health.Unknown) {
        output.WriteRawTag(24);
        output.WriteEnum((int) Health);
      }
      if (ComputeInstanceId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(ComputeInstanceId);
      }
      if (Role != global::Yandex.Cloud.Dataproc.V1.Role.Unspecified) {
        output.WriteRawTag(40);
        output.WriteEnum((int) Role);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (SubclusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubclusterId);
      }
      if (Health != global::Yandex.Cloud.Dataproc.V1.Health.Unknown) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Health);
      }
      if (ComputeInstanceId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ComputeInstanceId);
      }
      if (Role != global::Yandex.Cloud.Dataproc.V1.Role.Unspecified) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Role);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Host other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.SubclusterId.Length != 0) {
        SubclusterId = other.SubclusterId;
      }
      if (other.Health != global::Yandex.Cloud.Dataproc.V1.Health.Unknown) {
        Health = other.Health;
      }
      if (other.ComputeInstanceId.Length != 0) {
        ComputeInstanceId = other.ComputeInstanceId;
      }
      if (other.Role != global::Yandex.Cloud.Dataproc.V1.Role.Unspecified) {
        Role = other.Role;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadString();
            break;
          }
          case 18: {
            SubclusterId = input.ReadString();
            break;
          }
          case 24: {
            Health = (global::Yandex.Cloud.Dataproc.V1.Health) input.ReadEnum();
            break;
          }
          case 34: {
            ComputeInstanceId = input.ReadString();
            break;
          }
          case 40: {
            Role = (global::Yandex.Cloud.Dataproc.V1.Role) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
