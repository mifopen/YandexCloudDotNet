// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/mdb/clickhouse/v1/backup.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Mdb.Clickhouse.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/mdb/clickhouse/v1/backup.proto</summary>
  internal static partial class BackupReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/mdb/clickhouse/v1/backup.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static BackupReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cit5YW5kZXgvY2xvdWQvbWRiL2NsaWNraG91c2UvdjEvYmFja3VwLnByb3Rv",
            "Eh55YW5kZXguY2xvdWQubWRiLmNsaWNraG91c2UudjEaH2dvb2dsZS9wcm90",
            "b2J1Zi90aW1lc3RhbXAucHJvdG8ivgEKBkJhY2t1cBIKCgJpZBgBIAEoCRIR",
            "Cglmb2xkZXJfaWQYAiABKAkSLgoKY3JlYXRlZF9hdBgDIAEoCzIaLmdvb2ds",
            "ZS5wcm90b2J1Zi5UaW1lc3RhbXASGQoRc291cmNlX2NsdXN0ZXJfaWQYBCAB",
            "KAkSGgoSc291cmNlX3NoYXJkX25hbWVzGAYgAygJEi4KCnN0YXJ0ZWRfYXQY",
            "BSABKAsyGi5nb29nbGUucHJvdG9idWYuVGltZXN0YW1wQk9aTWdpdGh1Yi5j",
            "b20veWFuZGV4LWNsb3VkL2dvLWdlbnByb3RvL3lhbmRleC9jbG91ZC9tZGIv",
            "Y2xpY2tob3VzZS92MTtjbGlja2hvdXNlYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Mdb.Clickhouse.V1.Backup), global::Yandex.Cloud.Mdb.Clickhouse.V1.Backup.Parser, new[]{ "Id", "FolderId", "CreatedAt", "SourceClusterId", "SourceShardNames", "StartedAt" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Messages
  /// <summary>
  /// A ClickHouse Backup resource. See the [Developer's Guide](/docs/managed-clickhouse/concepts)
  /// for more information.
  /// </summary>
  internal sealed partial class Backup : pb::IMessage<Backup> {
    private static readonly pb::MessageParser<Backup> _parser = new pb::MessageParser<Backup>(() => new Backup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Backup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Mdb.Clickhouse.V1.BackupReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backup(Backup other) : this() {
      id_ = other.id_;
      folderId_ = other.folderId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      sourceClusterId_ = other.sourceClusterId_;
      sourceShardNames_ = other.sourceShardNames_.Clone();
      startedAt_ = other.startedAt_ != null ? other.startedAt_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Backup Clone() {
      return new Backup(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder that the backup belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    /// <summary>
    /// Creation timestamp in [RFC3339](https://www.ietf.org/rfc/rfc3339.txt) text format
    /// (i.e. when the backup operation was completed).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "source_cluster_id" field.</summary>
    public const int SourceClusterIdFieldNumber = 4;
    private string sourceClusterId_ = "";
    /// <summary>
    /// ID of the ClickHouse cluster that the backup was created for.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SourceClusterId {
      get { return sourceClusterId_; }
      set {
        sourceClusterId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "source_shard_names" field.</summary>
    public const int SourceShardNamesFieldNumber = 6;
    private static readonly pb::FieldCodec<string> _repeated_sourceShardNames_codec
        = pb::FieldCodec.ForString(50);
    private readonly pbc::RepeatedField<string> sourceShardNames_ = new pbc::RepeatedField<string>();
    /// <summary>
    /// Names of the shards included in the backup.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<string> SourceShardNames {
      get { return sourceShardNames_; }
    }

    /// <summary>Field number for the "started_at" field.</summary>
    public const int StartedAtFieldNumber = 5;
    private global::Google.Protobuf.WellKnownTypes.Timestamp startedAt_;
    /// <summary>
    /// Time when the backup operation was started.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp StartedAt {
      get { return startedAt_; }
      set {
        startedAt_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Backup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Backup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FolderId != other.FolderId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (SourceClusterId != other.SourceClusterId) return false;
      if(!sourceShardNames_.Equals(other.sourceShardNames_)) return false;
      if (!object.Equals(StartedAt, other.StartedAt)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (SourceClusterId.Length != 0) hash ^= SourceClusterId.GetHashCode();
      hash ^= sourceShardNames_.GetHashCode();
      if (startedAt_ != null) hash ^= StartedAt.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FolderId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (SourceClusterId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(SourceClusterId);
      }
      if (startedAt_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(StartedAt);
      }
      sourceShardNames_.WriteTo(output, _repeated_sourceShardNames_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (SourceClusterId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SourceClusterId);
      }
      size += sourceShardNames_.CalculateSize(_repeated_sourceShardNames_codec);
      if (startedAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(StartedAt);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Backup other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.SourceClusterId.Length != 0) {
        SourceClusterId = other.SourceClusterId;
      }
      sourceShardNames_.Add(other.sourceShardNames_);
      if (other.startedAt_ != null) {
        if (startedAt_ == null) {
          StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        StartedAt.MergeFrom(other.StartedAt);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FolderId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            SourceClusterId = input.ReadString();
            break;
          }
          case 42: {
            if (startedAt_ == null) {
              StartedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(StartedAt);
            break;
          }
          case 50: {
            sourceShardNames_.AddEntriesFrom(input, _repeated_sourceShardNames_codec);
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
