// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: yandex/cloud/compute/v1/instance.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Yandex.Cloud.Compute.V1 {

  /// <summary>Holder for reflection information generated from yandex/cloud/compute/v1/instance.proto</summary>
  internal static partial class InstanceReflection {

    #region Descriptor
    /// <summary>File descriptor for yandex/cloud/compute/v1/instance.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static InstanceReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "CiZ5YW5kZXgvY2xvdWQvY29tcHV0ZS92MS9pbnN0YW5jZS5wcm90bxIXeWFu",
            "ZGV4LmNsb3VkLmNvbXB1dGUudjEaH2dvb2dsZS9wcm90b2J1Zi90aW1lc3Rh",
            "bXAucHJvdG8i1QcKCEluc3RhbmNlEgoKAmlkGAEgASgJEhEKCWZvbGRlcl9p",
            "ZBgCIAEoCRIuCgpjcmVhdGVkX2F0GAMgASgLMhouZ29vZ2xlLnByb3RvYnVm",
            "LlRpbWVzdGFtcBIMCgRuYW1lGAQgASgJEhMKC2Rlc2NyaXB0aW9uGAUgASgJ",
            "Ej0KBmxhYmVscxgGIAMoCzItLnlhbmRleC5jbG91ZC5jb21wdXRlLnYxLklu",
            "c3RhbmNlLkxhYmVsc0VudHJ5Eg8KB3pvbmVfaWQYByABKAkSEwoLcGxhdGZv",
            "cm1faWQYCCABKAkSNQoJcmVzb3VyY2VzGAkgASgLMiIueWFuZGV4LmNsb3Vk",
            "LmNvbXB1dGUudjEuUmVzb3VyY2VzEjgKBnN0YXR1cxgKIAEoDjIoLnlhbmRl",
            "eC5jbG91ZC5jb21wdXRlLnYxLkluc3RhbmNlLlN0YXR1cxJBCghtZXRhZGF0",
            "YRgLIAMoCzIvLnlhbmRleC5jbG91ZC5jb21wdXRlLnYxLkluc3RhbmNlLk1l",
            "dGFkYXRhRW50cnkSOAoJYm9vdF9kaXNrGAwgASgLMiUueWFuZGV4LmNsb3Vk",
            "LmNvbXB1dGUudjEuQXR0YWNoZWREaXNrEj4KD3NlY29uZGFyeV9kaXNrcxgN",
            "IAMoCzIlLnlhbmRleC5jbG91ZC5jb21wdXRlLnYxLkF0dGFjaGVkRGlzaxJF",
            "ChJuZXR3b3JrX2ludGVyZmFjZXMYDiADKAsyKS55YW5kZXguY2xvdWQuY29t",
            "cHV0ZS52MS5OZXR3b3JrSW50ZXJmYWNlEgwKBGZxZG4YECABKAkSRAoRc2No",
            "ZWR1bGluZ19wb2xpY3kYESABKAsyKS55YW5kZXguY2xvdWQuY29tcHV0ZS52",
            "MS5TY2hlZHVsaW5nUG9saWN5EhoKEnNlcnZpY2VfYWNjb3VudF9pZBgSIAEo",
            "CRotCgtMYWJlbHNFbnRyeRILCgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAk6",
            "AjgBGi8KDU1ldGFkYXRhRW50cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIg",
            "ASgJOgI4ASKsAQoGU3RhdHVzEhYKElNUQVRVU19VTlNQRUNJRklFRBAAEhAK",
            "DFBST1ZJU0lPTklORxABEgsKB1JVTk5JTkcQAhIMCghTVE9QUElORxADEgsK",
            "B1NUT1BQRUQQBBIMCghTVEFSVElORxAFEg4KClJFU1RBUlRJTkcQBhIMCghV",
            "UERBVElORxAHEgkKBUVSUk9SEAgSCwoHQ1JBU0hFRBAJEgwKCERFTEVUSU5H",
            "EAoiTwoJUmVzb3VyY2VzEg4KBm1lbW9yeRgBIAEoAxINCgVjb3JlcxgCIAEo",
            "AxIVCg1jb3JlX2ZyYWN0aW9uGAMgASgDEgwKBGdwdXMYBCABKAMiwAEKDEF0",
            "dGFjaGVkRGlzaxI4CgRtb2RlGAEgASgOMioueWFuZGV4LmNsb3VkLmNvbXB1",
            "dGUudjEuQXR0YWNoZWREaXNrLk1vZGUSEwoLZGV2aWNlX25hbWUYAiABKAkS",
            "EwoLYXV0b19kZWxldGUYAyABKAgSDwoHZGlza19pZBgEIAEoCSI7CgRNb2Rl",
            "EhQKEE1PREVfVU5TUEVDSUZJRUQQABINCglSRUFEX09OTFkQARIOCgpSRUFE",
            "X1dSSVRFEAIi0wEKEE5ldHdvcmtJbnRlcmZhY2USDQoFaW5kZXgYASABKAkS",
            "EwoLbWFjX2FkZHJlc3MYAiABKAkSEQoJc3VibmV0X2lkGAMgASgJEkMKEnBy",
            "aW1hcnlfdjRfYWRkcmVzcxgEIAEoCzInLnlhbmRleC5jbG91ZC5jb21wdXRl",
            "LnYxLlByaW1hcnlBZGRyZXNzEkMKEnByaW1hcnlfdjZfYWRkcmVzcxgFIAEo",
            "CzInLnlhbmRleC5jbG91ZC5jb21wdXRlLnYxLlByaW1hcnlBZGRyZXNzIl8K",
            "DlByaW1hcnlBZGRyZXNzEg8KB2FkZHJlc3MYASABKAkSPAoOb25lX3RvX29u",
            "ZV9uYXQYAiABKAsyJC55YW5kZXguY2xvdWQuY29tcHV0ZS52MS5PbmVUb09u",
            "ZU5hdCJWCgtPbmVUb09uZU5hdBIPCgdhZGRyZXNzGAEgASgJEjYKCmlwX3Zl",
            "cnNpb24YAiABKA4yIi55YW5kZXguY2xvdWQuY29tcHV0ZS52MS5JcFZlcnNp",
            "b24iJwoQU2NoZWR1bGluZ1BvbGljeRITCgtwcmVlbXB0aWJsZRgBIAEoCCo7",
            "CglJcFZlcnNpb24SGgoWSVBfVkVSU0lPTl9VTlNQRUNJRklFRBAAEggKBElQ",
            "VjQQARIICgRJUFY2EAJCRVpDZ2l0aHViLmNvbS95YW5kZXgtY2xvdWQvZ28t",
            "Z2VucHJvdG8veWFuZGV4L2Nsb3VkL2NvbXB1dGUvdjE7Y29tcHV0ZWIGcHJv",
            "dG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.TimestampReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Yandex.Cloud.Compute.V1.IpVersion), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.Instance), global::Yandex.Cloud.Compute.V1.Instance.Parser, new[]{ "Id", "FolderId", "CreatedAt", "Name", "Description", "Labels", "ZoneId", "PlatformId", "Resources", "Status", "Metadata", "BootDisk", "SecondaryDisks", "NetworkInterfaces", "Fqdn", "SchedulingPolicy", "ServiceAccountId" }, null, new[]{ typeof(global::Yandex.Cloud.Compute.V1.Instance.Types.Status) }, new pbr::GeneratedClrTypeInfo[] { null, null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.Resources), global::Yandex.Cloud.Compute.V1.Resources.Parser, new[]{ "Memory", "Cores", "CoreFraction", "Gpus" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.AttachedDisk), global::Yandex.Cloud.Compute.V1.AttachedDisk.Parser, new[]{ "Mode", "DeviceName", "AutoDelete", "DiskId" }, null, new[]{ typeof(global::Yandex.Cloud.Compute.V1.AttachedDisk.Types.Mode) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.NetworkInterface), global::Yandex.Cloud.Compute.V1.NetworkInterface.Parser, new[]{ "Index", "MacAddress", "SubnetId", "PrimaryV4Address", "PrimaryV6Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.PrimaryAddress), global::Yandex.Cloud.Compute.V1.PrimaryAddress.Parser, new[]{ "Address", "OneToOneNat" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.OneToOneNat), global::Yandex.Cloud.Compute.V1.OneToOneNat.Parser, new[]{ "Address", "IpVersion" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Yandex.Cloud.Compute.V1.SchedulingPolicy), global::Yandex.Cloud.Compute.V1.SchedulingPolicy.Parser, new[]{ "Preemptible" }, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  internal enum IpVersion {
    [pbr::OriginalName("IP_VERSION_UNSPECIFIED")] Unspecified = 0,
    /// <summary>
    /// IPv4 address, for example 192.0.2.235.
    /// </summary>
    [pbr::OriginalName("IPV4")] Ipv4 = 1,
    /// <summary>
    /// IPv6 address. Not available yet.
    /// </summary>
    [pbr::OriginalName("IPV6")] Ipv6 = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// An Instance resource. For more information, see [Instances](/docs/compute/concepts/vm).
  /// </summary>
  internal sealed partial class Instance : pb::IMessage<Instance> {
    private static readonly pb::MessageParser<Instance> _parser = new pb::MessageParser<Instance>(() => new Instance());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Instance> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.InstanceReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance(Instance other) : this() {
      id_ = other.id_;
      folderId_ = other.folderId_;
      createdAt_ = other.createdAt_ != null ? other.createdAt_.Clone() : null;
      name_ = other.name_;
      description_ = other.description_;
      labels_ = other.labels_.Clone();
      zoneId_ = other.zoneId_;
      platformId_ = other.platformId_;
      resources_ = other.resources_ != null ? other.resources_.Clone() : null;
      status_ = other.status_;
      metadata_ = other.metadata_.Clone();
      bootDisk_ = other.bootDisk_ != null ? other.bootDisk_.Clone() : null;
      secondaryDisks_ = other.secondaryDisks_.Clone();
      networkInterfaces_ = other.networkInterfaces_.Clone();
      fqdn_ = other.fqdn_;
      schedulingPolicy_ = other.schedulingPolicy_ != null ? other.schedulingPolicy_.Clone() : null;
      serviceAccountId_ = other.serviceAccountId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Instance Clone() {
      return new Instance(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    /// <summary>
    /// ID of the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "folder_id" field.</summary>
    public const int FolderIdFieldNumber = 2;
    private string folderId_ = "";
    /// <summary>
    /// ID of the folder that the instance belongs to.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string FolderId {
      get { return folderId_; }
      set {
        folderId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "created_at" field.</summary>
    public const int CreatedAtFieldNumber = 3;
    private global::Google.Protobuf.WellKnownTypes.Timestamp createdAt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Google.Protobuf.WellKnownTypes.Timestamp CreatedAt {
      get { return createdAt_; }
      set {
        createdAt_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 4;
    private string name_ = "";
    /// <summary>
    /// Name of the instance. 1-63 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "description" field.</summary>
    public const int DescriptionFieldNumber = 5;
    private string description_ = "";
    /// <summary>
    /// Description of the instance. 0-256 characters long.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Description {
      get { return description_; }
      set {
        description_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "labels" field.</summary>
    public const int LabelsFieldNumber = 6;
    private static readonly pbc::MapField<string, string>.Codec _map_labels_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 50);
    private readonly pbc::MapField<string, string> labels_ = new pbc::MapField<string, string>();
    /// <summary>
    /// Resource labels as `key:value` pairs. Maximum of 64 per resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Labels {
      get { return labels_; }
    }

    /// <summary>Field number for the "zone_id" field.</summary>
    public const int ZoneIdFieldNumber = 7;
    private string zoneId_ = "";
    /// <summary>
    /// ID of the availability zone where the instance resides.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ZoneId {
      get { return zoneId_; }
      set {
        zoneId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "platform_id" field.</summary>
    public const int PlatformIdFieldNumber = 8;
    private string platformId_ = "";
    /// <summary>
    /// ID of the hardware platform configuration for the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string PlatformId {
      get { return platformId_; }
      set {
        platformId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "resources" field.</summary>
    public const int ResourcesFieldNumber = 9;
    private global::Yandex.Cloud.Compute.V1.Resources resources_;
    /// <summary>
    /// Computing resources of the instance such as the amount of memory and number of cores.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.Resources Resources {
      get { return resources_; }
      set {
        resources_ = value;
      }
    }

    /// <summary>Field number for the "status" field.</summary>
    public const int StatusFieldNumber = 10;
    private global::Yandex.Cloud.Compute.V1.Instance.Types.Status status_ = 0;
    /// <summary>
    /// Status of the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.Instance.Types.Status Status {
      get { return status_; }
      set {
        status_ = value;
      }
    }

    /// <summary>Field number for the "metadata" field.</summary>
    public const int MetadataFieldNumber = 11;
    private static readonly pbc::MapField<string, string>.Codec _map_metadata_codec
        = new pbc::MapField<string, string>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForString(18), 90);
    private readonly pbc::MapField<string, string> metadata_ = new pbc::MapField<string, string>();
    /// <summary>
    /// The metadata `key:value` pairs assigned to this instance. This includes custom metadata and predefined keys.
    ///
    /// For example, you may use the metadata in order to provide your public SSH key to the instance.
    /// For more information, see [Metadata](/docs/compute/concepts/vm-metadata).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, string> Metadata {
      get { return metadata_; }
    }

    /// <summary>Field number for the "boot_disk" field.</summary>
    public const int BootDiskFieldNumber = 12;
    private global::Yandex.Cloud.Compute.V1.AttachedDisk bootDisk_;
    /// <summary>
    /// Boot disk that is attached to the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.AttachedDisk BootDisk {
      get { return bootDisk_; }
      set {
        bootDisk_ = value;
      }
    }

    /// <summary>Field number for the "secondary_disks" field.</summary>
    public const int SecondaryDisksFieldNumber = 13;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Compute.V1.AttachedDisk> _repeated_secondaryDisks_codec
        = pb::FieldCodec.ForMessage(106, global::Yandex.Cloud.Compute.V1.AttachedDisk.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Compute.V1.AttachedDisk> secondaryDisks_ = new pbc::RepeatedField<global::Yandex.Cloud.Compute.V1.AttachedDisk>();
    /// <summary>
    /// Array of secondary disks that are attached to the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Compute.V1.AttachedDisk> SecondaryDisks {
      get { return secondaryDisks_; }
    }

    /// <summary>Field number for the "network_interfaces" field.</summary>
    public const int NetworkInterfacesFieldNumber = 14;
    private static readonly pb::FieldCodec<global::Yandex.Cloud.Compute.V1.NetworkInterface> _repeated_networkInterfaces_codec
        = pb::FieldCodec.ForMessage(114, global::Yandex.Cloud.Compute.V1.NetworkInterface.Parser);
    private readonly pbc::RepeatedField<global::Yandex.Cloud.Compute.V1.NetworkInterface> networkInterfaces_ = new pbc::RepeatedField<global::Yandex.Cloud.Compute.V1.NetworkInterface>();
    /// <summary>
    /// Array of network interfaces that are attached to the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Yandex.Cloud.Compute.V1.NetworkInterface> NetworkInterfaces {
      get { return networkInterfaces_; }
    }

    /// <summary>Field number for the "fqdn" field.</summary>
    public const int FqdnFieldNumber = 16;
    private string fqdn_ = "";
    /// <summary>
    /// A domain name of the instance. FQDN is defined by the server
    /// in the format `&lt;hostname>.&lt;region_id>.internal` when the instance is created.
    /// If the hostname were not specified when the instance was created, FQDN would be `&lt;id>.auto.internal`.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Fqdn {
      get { return fqdn_; }
      set {
        fqdn_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "scheduling_policy" field.</summary>
    public const int SchedulingPolicyFieldNumber = 17;
    private global::Yandex.Cloud.Compute.V1.SchedulingPolicy schedulingPolicy_;
    /// <summary>
    /// Scheduling policy configuration.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.SchedulingPolicy SchedulingPolicy {
      get { return schedulingPolicy_; }
      set {
        schedulingPolicy_ = value;
      }
    }

    /// <summary>Field number for the "service_account_id" field.</summary>
    public const int ServiceAccountIdFieldNumber = 18;
    private string serviceAccountId_ = "";
    /// <summary>
    /// ID of the service account. For more information, see [Service accounts](/docs/iam/concepts/users/service-accounts).
    /// To get the service account ID, use a [yandex.cloud.iam.v1.ServiceAccountService.List] request.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ServiceAccountId {
      get { return serviceAccountId_; }
      set {
        serviceAccountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Instance);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Instance other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (FolderId != other.FolderId) return false;
      if (!object.Equals(CreatedAt, other.CreatedAt)) return false;
      if (Name != other.Name) return false;
      if (Description != other.Description) return false;
      if (!Labels.Equals(other.Labels)) return false;
      if (ZoneId != other.ZoneId) return false;
      if (PlatformId != other.PlatformId) return false;
      if (!object.Equals(Resources, other.Resources)) return false;
      if (Status != other.Status) return false;
      if (!Metadata.Equals(other.Metadata)) return false;
      if (!object.Equals(BootDisk, other.BootDisk)) return false;
      if(!secondaryDisks_.Equals(other.secondaryDisks_)) return false;
      if(!networkInterfaces_.Equals(other.networkInterfaces_)) return false;
      if (Fqdn != other.Fqdn) return false;
      if (!object.Equals(SchedulingPolicy, other.SchedulingPolicy)) return false;
      if (ServiceAccountId != other.ServiceAccountId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (FolderId.Length != 0) hash ^= FolderId.GetHashCode();
      if (createdAt_ != null) hash ^= CreatedAt.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Description.Length != 0) hash ^= Description.GetHashCode();
      hash ^= Labels.GetHashCode();
      if (ZoneId.Length != 0) hash ^= ZoneId.GetHashCode();
      if (PlatformId.Length != 0) hash ^= PlatformId.GetHashCode();
      if (resources_ != null) hash ^= Resources.GetHashCode();
      if (Status != 0) hash ^= Status.GetHashCode();
      hash ^= Metadata.GetHashCode();
      if (bootDisk_ != null) hash ^= BootDisk.GetHashCode();
      hash ^= secondaryDisks_.GetHashCode();
      hash ^= networkInterfaces_.GetHashCode();
      if (Fqdn.Length != 0) hash ^= Fqdn.GetHashCode();
      if (schedulingPolicy_ != null) hash ^= SchedulingPolicy.GetHashCode();
      if (ServiceAccountId.Length != 0) hash ^= ServiceAccountId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (FolderId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(FolderId);
      }
      if (createdAt_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(CreatedAt);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Name);
      }
      if (Description.Length != 0) {
        output.WriteRawTag(42);
        output.WriteString(Description);
      }
      labels_.WriteTo(output, _map_labels_codec);
      if (ZoneId.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(ZoneId);
      }
      if (PlatformId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(PlatformId);
      }
      if (resources_ != null) {
        output.WriteRawTag(74);
        output.WriteMessage(Resources);
      }
      if (Status != 0) {
        output.WriteRawTag(80);
        output.WriteEnum((int) Status);
      }
      metadata_.WriteTo(output, _map_metadata_codec);
      if (bootDisk_ != null) {
        output.WriteRawTag(98);
        output.WriteMessage(BootDisk);
      }
      secondaryDisks_.WriteTo(output, _repeated_secondaryDisks_codec);
      networkInterfaces_.WriteTo(output, _repeated_networkInterfaces_codec);
      if (Fqdn.Length != 0) {
        output.WriteRawTag(130, 1);
        output.WriteString(Fqdn);
      }
      if (schedulingPolicy_ != null) {
        output.WriteRawTag(138, 1);
        output.WriteMessage(SchedulingPolicy);
      }
      if (ServiceAccountId.Length != 0) {
        output.WriteRawTag(146, 1);
        output.WriteString(ServiceAccountId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (FolderId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(FolderId);
      }
      if (createdAt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(CreatedAt);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (Description.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Description);
      }
      size += labels_.CalculateSize(_map_labels_codec);
      if (ZoneId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ZoneId);
      }
      if (PlatformId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(PlatformId);
      }
      if (resources_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Resources);
      }
      if (Status != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Status);
      }
      size += metadata_.CalculateSize(_map_metadata_codec);
      if (bootDisk_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BootDisk);
      }
      size += secondaryDisks_.CalculateSize(_repeated_secondaryDisks_codec);
      size += networkInterfaces_.CalculateSize(_repeated_networkInterfaces_codec);
      if (Fqdn.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(Fqdn);
      }
      if (schedulingPolicy_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(SchedulingPolicy);
      }
      if (ServiceAccountId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeStringSize(ServiceAccountId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Instance other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.FolderId.Length != 0) {
        FolderId = other.FolderId;
      }
      if (other.createdAt_ != null) {
        if (createdAt_ == null) {
          CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
        }
        CreatedAt.MergeFrom(other.CreatedAt);
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Description.Length != 0) {
        Description = other.Description;
      }
      labels_.Add(other.labels_);
      if (other.ZoneId.Length != 0) {
        ZoneId = other.ZoneId;
      }
      if (other.PlatformId.Length != 0) {
        PlatformId = other.PlatformId;
      }
      if (other.resources_ != null) {
        if (resources_ == null) {
          Resources = new global::Yandex.Cloud.Compute.V1.Resources();
        }
        Resources.MergeFrom(other.Resources);
      }
      if (other.Status != 0) {
        Status = other.Status;
      }
      metadata_.Add(other.metadata_);
      if (other.bootDisk_ != null) {
        if (bootDisk_ == null) {
          BootDisk = new global::Yandex.Cloud.Compute.V1.AttachedDisk();
        }
        BootDisk.MergeFrom(other.BootDisk);
      }
      secondaryDisks_.Add(other.secondaryDisks_);
      networkInterfaces_.Add(other.networkInterfaces_);
      if (other.Fqdn.Length != 0) {
        Fqdn = other.Fqdn;
      }
      if (other.schedulingPolicy_ != null) {
        if (schedulingPolicy_ == null) {
          SchedulingPolicy = new global::Yandex.Cloud.Compute.V1.SchedulingPolicy();
        }
        SchedulingPolicy.MergeFrom(other.SchedulingPolicy);
      }
      if (other.ServiceAccountId.Length != 0) {
        ServiceAccountId = other.ServiceAccountId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            FolderId = input.ReadString();
            break;
          }
          case 26: {
            if (createdAt_ == null) {
              CreatedAt = new global::Google.Protobuf.WellKnownTypes.Timestamp();
            }
            input.ReadMessage(CreatedAt);
            break;
          }
          case 34: {
            Name = input.ReadString();
            break;
          }
          case 42: {
            Description = input.ReadString();
            break;
          }
          case 50: {
            labels_.AddEntriesFrom(input, _map_labels_codec);
            break;
          }
          case 58: {
            ZoneId = input.ReadString();
            break;
          }
          case 66: {
            PlatformId = input.ReadString();
            break;
          }
          case 74: {
            if (resources_ == null) {
              Resources = new global::Yandex.Cloud.Compute.V1.Resources();
            }
            input.ReadMessage(Resources);
            break;
          }
          case 80: {
            Status = (global::Yandex.Cloud.Compute.V1.Instance.Types.Status) input.ReadEnum();
            break;
          }
          case 90: {
            metadata_.AddEntriesFrom(input, _map_metadata_codec);
            break;
          }
          case 98: {
            if (bootDisk_ == null) {
              BootDisk = new global::Yandex.Cloud.Compute.V1.AttachedDisk();
            }
            input.ReadMessage(BootDisk);
            break;
          }
          case 106: {
            secondaryDisks_.AddEntriesFrom(input, _repeated_secondaryDisks_codec);
            break;
          }
          case 114: {
            networkInterfaces_.AddEntriesFrom(input, _repeated_networkInterfaces_codec);
            break;
          }
          case 130: {
            Fqdn = input.ReadString();
            break;
          }
          case 138: {
            if (schedulingPolicy_ == null) {
              SchedulingPolicy = new global::Yandex.Cloud.Compute.V1.SchedulingPolicy();
            }
            input.ReadMessage(SchedulingPolicy);
            break;
          }
          case 146: {
            ServiceAccountId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Instance message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Status {
        [pbr::OriginalName("STATUS_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Instance is waiting for resources to be allocated.
        /// </summary>
        [pbr::OriginalName("PROVISIONING")] Provisioning = 1,
        /// <summary>
        /// Instance is running normally.
        /// </summary>
        [pbr::OriginalName("RUNNING")] Running = 2,
        /// <summary>
        /// Instance is being stopped.
        /// </summary>
        [pbr::OriginalName("STOPPING")] Stopping = 3,
        /// <summary>
        /// Instance stopped.
        /// </summary>
        [pbr::OriginalName("STOPPED")] Stopped = 4,
        /// <summary>
        /// Instance is being started.
        /// </summary>
        [pbr::OriginalName("STARTING")] Starting = 5,
        /// <summary>
        /// Instance is being restarted.
        /// </summary>
        [pbr::OriginalName("RESTARTING")] Restarting = 6,
        /// <summary>
        /// Instance is being updated.
        /// </summary>
        [pbr::OriginalName("UPDATING")] Updating = 7,
        /// <summary>
        /// Instance encountered a problem and cannot operate.
        /// </summary>
        [pbr::OriginalName("ERROR")] Error = 8,
        /// <summary>
        /// Instance crashed and will be restarted automatically.
        /// </summary>
        [pbr::OriginalName("CRASHED")] Crashed = 9,
        /// <summary>
        /// Instance is being deleted.
        /// </summary>
        [pbr::OriginalName("DELETING")] Deleting = 10,
      }

    }
    #endregion

  }

  internal sealed partial class Resources : pb::IMessage<Resources> {
    private static readonly pb::MessageParser<Resources> _parser = new pb::MessageParser<Resources>(() => new Resources());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Resources> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.InstanceReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resources() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resources(Resources other) : this() {
      memory_ = other.memory_;
      cores_ = other.cores_;
      coreFraction_ = other.coreFraction_;
      gpus_ = other.gpus_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Resources Clone() {
      return new Resources(this);
    }

    /// <summary>Field number for the "memory" field.</summary>
    public const int MemoryFieldNumber = 1;
    private long memory_;
    /// <summary>
    /// The amount of memory available to the instance, specified in bytes.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Memory {
      get { return memory_; }
      set {
        memory_ = value;
      }
    }

    /// <summary>Field number for the "cores" field.</summary>
    public const int CoresFieldNumber = 2;
    private long cores_;
    /// <summary>
    /// The number of cores available to the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Cores {
      get { return cores_; }
      set {
        cores_ = value;
      }
    }

    /// <summary>Field number for the "core_fraction" field.</summary>
    public const int CoreFractionFieldNumber = 3;
    private long coreFraction_;
    /// <summary>
    /// Baseline level of CPU performance with the ability to burst performance above that baseline level.
    /// This field sets baseline performance for each core.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CoreFraction {
      get { return coreFraction_; }
      set {
        coreFraction_ = value;
      }
    }

    /// <summary>Field number for the "gpus" field.</summary>
    public const int GpusFieldNumber = 4;
    private long gpus_;
    /// <summary>
    /// The number of GPUs available to the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Gpus {
      get { return gpus_; }
      set {
        gpus_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Resources);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Resources other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Memory != other.Memory) return false;
      if (Cores != other.Cores) return false;
      if (CoreFraction != other.CoreFraction) return false;
      if (Gpus != other.Gpus) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Memory != 0L) hash ^= Memory.GetHashCode();
      if (Cores != 0L) hash ^= Cores.GetHashCode();
      if (CoreFraction != 0L) hash ^= CoreFraction.GetHashCode();
      if (Gpus != 0L) hash ^= Gpus.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Memory != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Memory);
      }
      if (Cores != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Cores);
      }
      if (CoreFraction != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(CoreFraction);
      }
      if (Gpus != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Gpus);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Memory != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Memory);
      }
      if (Cores != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Cores);
      }
      if (CoreFraction != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CoreFraction);
      }
      if (Gpus != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Gpus);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Resources other) {
      if (other == null) {
        return;
      }
      if (other.Memory != 0L) {
        Memory = other.Memory;
      }
      if (other.Cores != 0L) {
        Cores = other.Cores;
      }
      if (other.CoreFraction != 0L) {
        CoreFraction = other.CoreFraction;
      }
      if (other.Gpus != 0L) {
        Gpus = other.Gpus;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Memory = input.ReadInt64();
            break;
          }
          case 16: {
            Cores = input.ReadInt64();
            break;
          }
          case 24: {
            CoreFraction = input.ReadInt64();
            break;
          }
          case 32: {
            Gpus = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class AttachedDisk : pb::IMessage<AttachedDisk> {
    private static readonly pb::MessageParser<AttachedDisk> _parser = new pb::MessageParser<AttachedDisk>(() => new AttachedDisk());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AttachedDisk> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.InstanceReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedDisk() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedDisk(AttachedDisk other) : this() {
      mode_ = other.mode_;
      deviceName_ = other.deviceName_;
      autoDelete_ = other.autoDelete_;
      diskId_ = other.diskId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AttachedDisk Clone() {
      return new AttachedDisk(this);
    }

    /// <summary>Field number for the "mode" field.</summary>
    public const int ModeFieldNumber = 1;
    private global::Yandex.Cloud.Compute.V1.AttachedDisk.Types.Mode mode_ = 0;
    /// <summary>
    /// Access mode to the Disk resource.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.AttachedDisk.Types.Mode Mode {
      get { return mode_; }
      set {
        mode_ = value;
      }
    }

    /// <summary>Field number for the "device_name" field.</summary>
    public const int DeviceNameFieldNumber = 2;
    private string deviceName_ = "";
    /// <summary>
    /// Serial number that is reflected into the /dev/disk/by-id/ tree
    /// of a Linux operating system running within the instance.
    ///
    /// This value can be used to reference the device for mounting, resizing, and so on, from within the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DeviceName {
      get { return deviceName_; }
      set {
        deviceName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "auto_delete" field.</summary>
    public const int AutoDeleteFieldNumber = 3;
    private bool autoDelete_;
    /// <summary>
    /// Specifies whether the disk will be auto-deleted when the instance is deleted.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool AutoDelete {
      get { return autoDelete_; }
      set {
        autoDelete_ = value;
      }
    }

    /// <summary>Field number for the "disk_id" field.</summary>
    public const int DiskIdFieldNumber = 4;
    private string diskId_ = "";
    /// <summary>
    /// ID of the disk that is attached to the instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string DiskId {
      get { return diskId_; }
      set {
        diskId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AttachedDisk);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AttachedDisk other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Mode != other.Mode) return false;
      if (DeviceName != other.DeviceName) return false;
      if (AutoDelete != other.AutoDelete) return false;
      if (DiskId != other.DiskId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Mode != 0) hash ^= Mode.GetHashCode();
      if (DeviceName.Length != 0) hash ^= DeviceName.GetHashCode();
      if (AutoDelete != false) hash ^= AutoDelete.GetHashCode();
      if (DiskId.Length != 0) hash ^= DiskId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Mode != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Mode);
      }
      if (DeviceName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(DeviceName);
      }
      if (AutoDelete != false) {
        output.WriteRawTag(24);
        output.WriteBool(AutoDelete);
      }
      if (DiskId.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(DiskId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Mode != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Mode);
      }
      if (DeviceName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DeviceName);
      }
      if (AutoDelete != false) {
        size += 1 + 1;
      }
      if (DiskId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(DiskId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AttachedDisk other) {
      if (other == null) {
        return;
      }
      if (other.Mode != 0) {
        Mode = other.Mode;
      }
      if (other.DeviceName.Length != 0) {
        DeviceName = other.DeviceName;
      }
      if (other.AutoDelete != false) {
        AutoDelete = other.AutoDelete;
      }
      if (other.DiskId.Length != 0) {
        DiskId = other.DiskId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Mode = (global::Yandex.Cloud.Compute.V1.AttachedDisk.Types.Mode) input.ReadEnum();
            break;
          }
          case 18: {
            DeviceName = input.ReadString();
            break;
          }
          case 24: {
            AutoDelete = input.ReadBool();
            break;
          }
          case 34: {
            DiskId = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the AttachedDisk message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      internal enum Mode {
        [pbr::OriginalName("MODE_UNSPECIFIED")] Unspecified = 0,
        /// <summary>
        /// Read-only access.
        /// </summary>
        [pbr::OriginalName("READ_ONLY")] ReadOnly = 1,
        /// <summary>
        /// Read/Write access.
        /// </summary>
        [pbr::OriginalName("READ_WRITE")] ReadWrite = 2,
      }

    }
    #endregion

  }

  internal sealed partial class NetworkInterface : pb::IMessage<NetworkInterface> {
    private static readonly pb::MessageParser<NetworkInterface> _parser = new pb::MessageParser<NetworkInterface>(() => new NetworkInterface());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NetworkInterface> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.InstanceReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInterface() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInterface(NetworkInterface other) : this() {
      index_ = other.index_;
      macAddress_ = other.macAddress_;
      subnetId_ = other.subnetId_;
      primaryV4Address_ = other.primaryV4Address_ != null ? other.primaryV4Address_.Clone() : null;
      primaryV6Address_ = other.primaryV6Address_ != null ? other.primaryV6Address_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NetworkInterface Clone() {
      return new NetworkInterface(this);
    }

    /// <summary>Field number for the "index" field.</summary>
    public const int IndexFieldNumber = 1;
    private string index_ = "";
    /// <summary>
    /// The index of the network interface, generated by the server, 0,1,2... etc.
    /// Currently only one network interface is supported per instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Index {
      get { return index_; }
      set {
        index_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mac_address" field.</summary>
    public const int MacAddressFieldNumber = 2;
    private string macAddress_ = "";
    /// <summary>
    /// MAC address that is assigned to the network interface.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MacAddress {
      get { return macAddress_; }
      set {
        macAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "subnet_id" field.</summary>
    public const int SubnetIdFieldNumber = 3;
    private string subnetId_ = "";
    /// <summary>
    /// ID of the subnet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string SubnetId {
      get { return subnetId_; }
      set {
        subnetId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "primary_v4_address" field.</summary>
    public const int PrimaryV4AddressFieldNumber = 4;
    private global::Yandex.Cloud.Compute.V1.PrimaryAddress primaryV4Address_;
    /// <summary>
    /// Primary IPv4 address that is assigned to the instance for this network interface.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.PrimaryAddress PrimaryV4Address {
      get { return primaryV4Address_; }
      set {
        primaryV4Address_ = value;
      }
    }

    /// <summary>Field number for the "primary_v6_address" field.</summary>
    public const int PrimaryV6AddressFieldNumber = 5;
    private global::Yandex.Cloud.Compute.V1.PrimaryAddress primaryV6Address_;
    /// <summary>
    /// Primary IPv6 address that is assigned to the instance for this network interface. IPv6 not available yet.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.PrimaryAddress PrimaryV6Address {
      get { return primaryV6Address_; }
      set {
        primaryV6Address_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NetworkInterface);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NetworkInterface other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Index != other.Index) return false;
      if (MacAddress != other.MacAddress) return false;
      if (SubnetId != other.SubnetId) return false;
      if (!object.Equals(PrimaryV4Address, other.PrimaryV4Address)) return false;
      if (!object.Equals(PrimaryV6Address, other.PrimaryV6Address)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Index.Length != 0) hash ^= Index.GetHashCode();
      if (MacAddress.Length != 0) hash ^= MacAddress.GetHashCode();
      if (SubnetId.Length != 0) hash ^= SubnetId.GetHashCode();
      if (primaryV4Address_ != null) hash ^= PrimaryV4Address.GetHashCode();
      if (primaryV6Address_ != null) hash ^= PrimaryV6Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Index.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Index);
      }
      if (MacAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(MacAddress);
      }
      if (SubnetId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(SubnetId);
      }
      if (primaryV4Address_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(PrimaryV4Address);
      }
      if (primaryV6Address_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(PrimaryV6Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Index.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Index);
      }
      if (MacAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MacAddress);
      }
      if (SubnetId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(SubnetId);
      }
      if (primaryV4Address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryV4Address);
      }
      if (primaryV6Address_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(PrimaryV6Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NetworkInterface other) {
      if (other == null) {
        return;
      }
      if (other.Index.Length != 0) {
        Index = other.Index;
      }
      if (other.MacAddress.Length != 0) {
        MacAddress = other.MacAddress;
      }
      if (other.SubnetId.Length != 0) {
        SubnetId = other.SubnetId;
      }
      if (other.primaryV4Address_ != null) {
        if (primaryV4Address_ == null) {
          PrimaryV4Address = new global::Yandex.Cloud.Compute.V1.PrimaryAddress();
        }
        PrimaryV4Address.MergeFrom(other.PrimaryV4Address);
      }
      if (other.primaryV6Address_ != null) {
        if (primaryV6Address_ == null) {
          PrimaryV6Address = new global::Yandex.Cloud.Compute.V1.PrimaryAddress();
        }
        PrimaryV6Address.MergeFrom(other.PrimaryV6Address);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Index = input.ReadString();
            break;
          }
          case 18: {
            MacAddress = input.ReadString();
            break;
          }
          case 26: {
            SubnetId = input.ReadString();
            break;
          }
          case 34: {
            if (primaryV4Address_ == null) {
              PrimaryV4Address = new global::Yandex.Cloud.Compute.V1.PrimaryAddress();
            }
            input.ReadMessage(PrimaryV4Address);
            break;
          }
          case 42: {
            if (primaryV6Address_ == null) {
              PrimaryV6Address = new global::Yandex.Cloud.Compute.V1.PrimaryAddress();
            }
            input.ReadMessage(PrimaryV6Address);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class PrimaryAddress : pb::IMessage<PrimaryAddress> {
    private static readonly pb::MessageParser<PrimaryAddress> _parser = new pb::MessageParser<PrimaryAddress>(() => new PrimaryAddress());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<PrimaryAddress> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.InstanceReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimaryAddress() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimaryAddress(PrimaryAddress other) : this() {
      address_ = other.address_;
      oneToOneNat_ = other.oneToOneNat_ != null ? other.oneToOneNat_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public PrimaryAddress Clone() {
      return new PrimaryAddress(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// An IPv4 internal network address that is assigned to the instance for this network interface.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "one_to_one_nat" field.</summary>
    public const int OneToOneNatFieldNumber = 2;
    private global::Yandex.Cloud.Compute.V1.OneToOneNat oneToOneNat_;
    /// <summary>
    /// One-to-one NAT configuration. If missing, NAT has not been set up.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.OneToOneNat OneToOneNat {
      get { return oneToOneNat_; }
      set {
        oneToOneNat_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as PrimaryAddress);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(PrimaryAddress other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (!object.Equals(OneToOneNat, other.OneToOneNat)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (oneToOneNat_ != null) hash ^= OneToOneNat.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (oneToOneNat_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(OneToOneNat);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (oneToOneNat_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(OneToOneNat);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(PrimaryAddress other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.oneToOneNat_ != null) {
        if (oneToOneNat_ == null) {
          OneToOneNat = new global::Yandex.Cloud.Compute.V1.OneToOneNat();
        }
        OneToOneNat.MergeFrom(other.OneToOneNat);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 18: {
            if (oneToOneNat_ == null) {
              OneToOneNat = new global::Yandex.Cloud.Compute.V1.OneToOneNat();
            }
            input.ReadMessage(OneToOneNat);
            break;
          }
        }
      }
    }

  }

  internal sealed partial class OneToOneNat : pb::IMessage<OneToOneNat> {
    private static readonly pb::MessageParser<OneToOneNat> _parser = new pb::MessageParser<OneToOneNat>(() => new OneToOneNat());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<OneToOneNat> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.InstanceReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneToOneNat() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneToOneNat(OneToOneNat other) : this() {
      address_ = other.address_;
      ipVersion_ = other.ipVersion_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public OneToOneNat Clone() {
      return new OneToOneNat(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private string address_ = "";
    /// <summary>
    /// An external IP address associated with this instance.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ip_version" field.</summary>
    public const int IpVersionFieldNumber = 2;
    private global::Yandex.Cloud.Compute.V1.IpVersion ipVersion_ = 0;
    /// <summary>
    /// IP version for the external IP address.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Yandex.Cloud.Compute.V1.IpVersion IpVersion {
      get { return ipVersion_; }
      set {
        ipVersion_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as OneToOneNat);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(OneToOneNat other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (IpVersion != other.IpVersion) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (IpVersion != 0) hash ^= IpVersion.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Address);
      }
      if (IpVersion != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) IpVersion);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Address);
      }
      if (IpVersion != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) IpVersion);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(OneToOneNat other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.IpVersion != 0) {
        IpVersion = other.IpVersion;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadString();
            break;
          }
          case 16: {
            IpVersion = (global::Yandex.Cloud.Compute.V1.IpVersion) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  internal sealed partial class SchedulingPolicy : pb::IMessage<SchedulingPolicy> {
    private static readonly pb::MessageParser<SchedulingPolicy> _parser = new pb::MessageParser<SchedulingPolicy>(() => new SchedulingPolicy());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SchedulingPolicy> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Yandex.Cloud.Compute.V1.InstanceReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulingPolicy() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulingPolicy(SchedulingPolicy other) : this() {
      preemptible_ = other.preemptible_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SchedulingPolicy Clone() {
      return new SchedulingPolicy(this);
    }

    /// <summary>Field number for the "preemptible" field.</summary>
    public const int PreemptibleFieldNumber = 1;
    private bool preemptible_;
    /// <summary>
    /// True for short-lived compute instances. For more information, see [Preemptible VMs](/docs/compute/concepts/preemptible-vm).
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Preemptible {
      get { return preemptible_; }
      set {
        preemptible_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SchedulingPolicy);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SchedulingPolicy other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Preemptible != other.Preemptible) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Preemptible != false) hash ^= Preemptible.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Preemptible != false) {
        output.WriteRawTag(8);
        output.WriteBool(Preemptible);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Preemptible != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SchedulingPolicy other) {
      if (other == null) {
        return;
      }
      if (other.Preemptible != false) {
        Preemptible = other.Preemptible;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Preemptible = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
